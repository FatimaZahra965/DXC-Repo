[{"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\index.js":"1","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\serviceWorker.js":"2","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\App.js":"3","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\context\\LayoutContext.js":"4","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\context\\UserContext.js":"5","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\themes\\index.js":"6","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\store\\store.js":"7","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\error\\Error.js":"8","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\login\\Login.js":"9","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Layout\\Layout.js":"10","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\themes\\default.js":"11","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\login\\styles.js":"12","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\error\\styles.js":"13","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\index.js":"14","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"15","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"16","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"17","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"18","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"19","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\types\\index.js":"20","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"21","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"22","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"23","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"24","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"25","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"26","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Layout\\styles.js":"27","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"28","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"29","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"30","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"31","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"32","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"33","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"34","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"35","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"36","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\Competances.js":"37","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"38","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\projets\\Projets.js":"39","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"40","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"41","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"42","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\activites\\Activites.js":"43","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"44","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\Clients.js":"45","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"46","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Header\\Header.js":"47","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"48","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"49","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"50","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"51","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"52","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"53","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"54","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"55","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"56","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\styles.js":"57","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"58","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Header\\styles.js":"59","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\Tabs.js":"60","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\styles.js":"61","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\contratActions.js":"62","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\styles.js":"63","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\styles.js":"64","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"65","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\config\\axios.js":"66","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"67","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\PageTitle\\styles.js":"68","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\styles.js":"69","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\clientActions.js":"70","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"71","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"72","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\styles.js":"73","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js":"74","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\styles.js":"75","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\certificationsActions.js":"76"},{"size":945,"mtime":1653172280072,"results":"77","hashOfConfig":"78"},{"size":5083,"mtime":1653046751458,"results":"79","hashOfConfig":"78"},{"size":1959,"mtime":1653170696003,"results":"80","hashOfConfig":"78"},{"size":1444,"mtime":1653046751404,"results":"81","hashOfConfig":"78"},{"size":2058,"mtime":1653046751405,"results":"82","hashOfConfig":"78"},{"size":541,"mtime":1653171299616,"results":"83","hashOfConfig":"78"},{"size":443,"mtime":1653046751470,"results":"84","hashOfConfig":"78"},{"size":1616,"mtime":1653046751425,"results":"85","hashOfConfig":"78"},{"size":8123,"mtime":1653046751429,"results":"86","hashOfConfig":"78"},{"size":5835,"mtime":1653226772108,"results":"87","hashOfConfig":"78"},{"size":2931,"mtime":1653046751472,"results":"88","hashOfConfig":"78"},{"size":3242,"mtime":1653046751432,"results":"89","hashOfConfig":"78"},{"size":1920,"mtime":1653046751428,"results":"90","hashOfConfig":"78"},{"size":696,"mtime":1653046785105,"results":"91","hashOfConfig":"78"},{"size":2311,"mtime":1653046785102,"results":"92","hashOfConfig":"78"},{"size":580,"mtime":1653046751468,"results":"93","hashOfConfig":"78"},{"size":1477,"mtime":1653226854753,"results":"94","hashOfConfig":"78"},{"size":2472,"mtime":1653046785103,"results":"95","hashOfConfig":"78"},{"size":1538,"mtime":1653046785103,"results":"96","hashOfConfig":"78"},{"size":5727,"mtime":1653226935681,"results":"97","hashOfConfig":"78"},{"size":1454,"mtime":1653046751466,"results":"98","hashOfConfig":"78"},{"size":2845,"mtime":1653046751467,"results":"99","hashOfConfig":"78"},{"size":6757,"mtime":1653046785068,"results":"100","hashOfConfig":"78"},{"size":172,"mtime":1653046751449,"results":"101","hashOfConfig":"78"},{"size":6285,"mtime":1653224882980,"results":"102","hashOfConfig":"78"},{"size":7017,"mtime":1653144497315,"results":"103","hashOfConfig":"78"},{"size":710,"mtime":1653046751389,"results":"104","hashOfConfig":"78"},{"size":6360,"mtime":1653224116505,"results":"105","hashOfConfig":"78"},{"size":7486,"mtime":1653131055634,"results":"106","hashOfConfig":"78"},{"size":6307,"mtime":1653131084066,"results":"107","hashOfConfig":"78"},{"size":324,"mtime":1653046785069,"results":"108","hashOfConfig":"78"},{"size":3283,"mtime":1653048235286,"results":"109","hashOfConfig":"78"},{"size":4510,"mtime":1653230062992,"results":"110","hashOfConfig":"78"},{"size":963,"mtime":1653230049807,"results":"111","hashOfConfig":"78"},{"size":4281,"mtime":1653230032479,"results":"112","hashOfConfig":"78"},{"size":4339,"mtime":1653046785085,"results":"113","hashOfConfig":"78"},{"size":1503,"mtime":1653046785078,"results":"114","hashOfConfig":"78"},{"size":4157,"mtime":1653046785076,"results":"115","hashOfConfig":"78"},{"size":521,"mtime":1653046785095,"results":"116","hashOfConfig":"78"},{"size":6757,"mtime":1653229323189,"results":"117","hashOfConfig":"78"},{"size":344,"mtime":1653046785098,"results":"118","hashOfConfig":"78"},{"size":363,"mtime":1653046785092,"results":"119","hashOfConfig":"78"},{"size":264,"mtime":1653046785065,"results":"120","hashOfConfig":"78"},{"size":366,"mtime":1653046785067,"results":"121","hashOfConfig":"78"},{"size":3804,"mtime":1653049718590,"results":"122","hashOfConfig":"78"},{"size":364,"mtime":1653046751422,"results":"123","hashOfConfig":"78"},{"size":5733,"mtime":1653173020326,"results":"124","hashOfConfig":"78"},{"size":382,"mtime":1653046785091,"results":"125","hashOfConfig":"78"},{"size":4149,"mtime":1653226525094,"results":"126","hashOfConfig":"78"},{"size":4971,"mtime":1653224288364,"results":"127","hashOfConfig":"78"},{"size":2368,"mtime":1653046785081,"results":"128","hashOfConfig":"78"},{"size":2332,"mtime":1653046785080,"results":"129","hashOfConfig":"78"},{"size":2348,"mtime":1653046785079,"results":"130","hashOfConfig":"78"},{"size":504,"mtime":1653046751464,"results":"131","hashOfConfig":"78"},{"size":844,"mtime":1653046785060,"results":"132","hashOfConfig":"78"},{"size":4390,"mtime":1653046785100,"results":"133","hashOfConfig":"78"},{"size":1901,"mtime":1653046785083,"results":"134","hashOfConfig":"78"},{"size":3939,"mtime":1653064220755,"results":"135","hashOfConfig":"78"},{"size":3929,"mtime":1653046751386,"results":"136","hashOfConfig":"78"},{"size":2178,"mtime":1653046785082,"results":"137","hashOfConfig":"78"},{"size":1708,"mtime":1653046785090,"results":"138","hashOfConfig":"78"},{"size":3785,"mtime":1653229956888,"results":"139","hashOfConfig":"78"},{"size":1363,"mtime":1653046751399,"results":"140","hashOfConfig":"78"},{"size":1778,"mtime":1653046785075,"results":"141","hashOfConfig":"78"},{"size":4624,"mtime":1653046751396,"results":"142","hashOfConfig":"78"},{"size":137,"mtime":1653046751403,"results":"143","hashOfConfig":"78"},{"size":3976,"mtime":1653046751400,"results":"144","hashOfConfig":"78"},{"size":587,"mtime":1653223760961,"results":"145","hashOfConfig":"78"},{"size":617,"mtime":1653063939747,"results":"146","hashOfConfig":"78"},{"size":3737,"mtime":1653048624291,"results":"147","hashOfConfig":"78"},{"size":902,"mtime":1653046751395,"results":"148","hashOfConfig":"78"},{"size":1474,"mtime":1653046751397,"results":"149","hashOfConfig":"78"},{"size":617,"mtime":1653063903554,"results":"150","hashOfConfig":"78"},{"size":4889,"mtime":1653034605438,"results":"151","hashOfConfig":"78"},{"size":684,"mtime":1652997786703,"results":"152","hashOfConfig":"78"},{"size":3903,"mtime":1653229235056,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"nsbqgz",{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"156"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"156"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"156"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"156"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"156"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"156"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\index.js",[],["324","325"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\serviceWorker.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\App.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\themes\\index.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Layout\\Layout.js",["326"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["327"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    clients: [],\r\n    error: null,\r\n    loading: false,\r\n    client: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CLIENT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: [...state.clients, action.payload],\r\n        };\r\n      case ADD_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CLIENTS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          client: {},\r\n        };\r\n      case CLIENT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          clients: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          client: {},\r\n        };\r\n      case DOWNLOAD_CLIENT__ERROR:\r\n        return {\r\n          ...state,\r\n          clients: [],\r\n          loading: false,\r\n          error: true,\r\n          client: {},\r\n        };\r\n   \r\n      case CLIENT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          client: action.payload,\r\n        };\r\n      case CLIENT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CLIENT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: state.clients.map((client) =>\r\n            client.id === action.payload.id\r\n              ? (client = action.payload)\r\n              : client,\r\n          ),\r\n        };\r\n      case EDIT_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["328"],"import {\r\n  VALIDATE_FORM,\r\n  VALIDATE_FORM_SUCCESS,\r\n  VALIDATE_FORM_ERROR,\r\n} from \"../types\";\r\n\r\n//state principal\r\nconst initialState = {\r\n  error: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case VALIDATE_FORM:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["329"],"import {\r\n    ADD_CONTRAT,\r\n    ADD_CONTRAT_SUCCESS,\r\n    ADD_CONTRAT_ERROR,\r\n    START_DOWNLOAD_CONTRATS,\r\n    CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CONTRAT__ERROR,\r\n    GET_CONTRAT_EDIT,\r\n    CONTRAT_EDIT_SUCCESS,\r\n    CONTRAT_EDIT_ERROR,\r\n    BEGIN_CONTRAT_EDIT,\r\n    EDITION_CONTRAT_SUCCESS,\r\n    EDIT_CONTRAT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    contrats: [],\r\n    error: null,\r\n    loading: false,\r\n    contrat: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CONTRAT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: [...state.contrats, action.payload],\r\n        };\r\n      case ADD_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CONTRATS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          contrat: {},\r\n        };\r\n      case CONTRAT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          contrats: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          contrat: {},\r\n        };\r\n      case DOWNLOAD_CONTRAT__ERROR:\r\n        return {\r\n          ...state,\r\n          contrats: [],\r\n          loading: false,\r\n          error: true,\r\n          contrat: {},\r\n        };\r\n      case GET_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case CONTRAT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrat: action.payload,\r\n        };\r\n      case CONTRAT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: state.contrats.map((contrat) =>\r\n            contrat.id === action.payload.id\r\n              ? (contrat = action.payload)\r\n              : contrat,\r\n          ),\r\n        };\r\n      case EDIT_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["330"],"import {\r\n  ADD_RESSOURCE,\r\n  ADD_RESSOURCE_SUCCESS,\r\n  ADD_RESSOURCE_ERROR,\r\n  START_DOWNLOAD_RESSOURCES,\r\n  RESSOURCE_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_RESSOURCE__ERROR,\r\n  GET_RESSOURCE_REMOVE,\r\n  DELETE_RESSOURCE_SUCCESS,\r\n  DELETE_RESSOURCE_ERROR,\r\n  GET_RESSOURCE_EDIT,\r\n  RESSOURCE_EDIT_SUCCESS,\r\n  RESSOURCE_EDIT_ERROR,\r\n  BEGIN_RESSOURCE_EDIT,\r\n  EDITION_RESSOURCE_SUCCESS,\r\n  EDIT_RESSOURCE_ERROR,\r\n} from \"../types\";\r\n\r\n//chaque réducteur a son propre état\r\nconst initialState = {\r\n  ressources: [],\r\n  error: null,\r\n  loading: false,\r\n  ressource: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RESSOURCE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case ADD_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: [...state.ressources, action.payload],\r\n      };\r\n    case ADD_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case START_DOWNLOAD_RESSOURCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        //limpiar y reacrgar el productopara editar\r\n        ressource: {},\r\n      };\r\n    case RESSOURCE_DOWNLOAD_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        ressources: action.payload,\r\n        loading: false,\r\n        error: false,\r\n        ressource: {},\r\n      };\r\n    case DOWNLOAD_RESSOURCE__ERROR:\r\n      return {\r\n        ...state,\r\n        ressources: [],\r\n        loading: false,\r\n        error: true,\r\n        ressource: {},\r\n      };\r\n    case GET_RESSOURCE_REMOVE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case DELETE_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.filter(\r\n          (ressource) => ressource.id !== action.payload,\r\n        ),\r\n      };\r\n    case DELETE_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case GET_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case RESSOURCE_EDIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressource: action.payload,\r\n      };\r\n    case RESSOURCE_EDIT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case BEGIN_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDITION_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.map((ressource) =>\r\n          ressource.id === action.payload.id\r\n            ? (ressource = action.payload)\r\n            : ressource,\r\n        ),\r\n      };\r\n    case EDIT_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["331"],"// export default function Certifications() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.certifications.loading);\r\n//   const error = useSelector((state) => state.certifications.error);\r\n//   const certifications = useSelector((state) => state.certifications.certifications);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"code\", label: \"Code\", minWidth: 100 },\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"datecertification\", label: \"Date Certification\", minWidth: 100 },\r\n  { id: \"ressourceid\", label: \"Ressource id\", minWidth: 100 },\r\n  { id: \"niveau\", label: \"Niveau\", minWidth: 180 },\r\n  { id: \"validation\", label: \"Validation\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Certifications = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addCertification = () => {\r\n    let path = `/app/certifications/AjouterCertification`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadCertifications = () => dispatch(getPrestationsAction());\r\n    loadCertifications();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.certifications.loading);\r\n  const error = useSelector((state) => state.certifications.error);\r\n  const certifications = useSelector(\r\n    (state) => state.certifications.certifications,\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/certifications/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/certifications/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Certifications\"  path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addCertification}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Certification\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {certifications\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={certifications.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",["332"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",["333","334"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editRessourceAction } from \"../../services/Actions/ressourcesActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ModiferRessource({ match }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialRessourceState = {\r\n    matricule: \"\",\r\n    prenom: \"\",\r\n    dateAmbauche: \"\",\r\n    dateNaissance: \"\",\r\n    status: \"\",\r\n    genre: \"\",\r\n  };\r\n  // Ressource\r\n  const dispatch = useDispatch();\r\n  const editRessource = (ressource) => dispatch(editRessourceAction(ressource));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  const [ressourcedate, setRessourcedate] = useState(initialRessourceState);\r\n\r\n  const { matricule } = match.params.id;\r\n\r\n  useEffect(() => {\r\n    console.log(\"matricule\", match.params.id);\r\n    clienteAxios\r\n      .get(`http://localhost:9000/DXC/ressource/${match.params.id}`)\r\n      .then((resp) => {\r\n        console.log(\"resp.data\", resp.data);\r\n        setRessourcedate(resp.data);\r\n        console.log(ressourcedate);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // dispatch(getRessourceAction(matricule));\r\n  }, [matricule]);\r\n\r\n  // const ressource = useSelector((state) => state.Ressources.Ressource);\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  const submitEditRessource = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      ressourcedate.matricule.trim() === \"\" ||\r\n      ressourcedate.firstName.trim() === \"\" ||\r\n      ressourcedate.lastName.trim() === \"\" ||\r\n      ressourcedate.dateAmbauche.trim() === \"\" ||\r\n      ressourcedate.dateNaissance.trim() === \"\" ||\r\n      ressourcedate.status.trim() === \"\" ||\r\n      ressourcedate.genre.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n\r\n    let ressource = {\r\n      Matricule: ressourcedate.matricule,\r\n      Prenom: ressourcedate.firstName,\r\n      Nom: ressourcedate.lastName,\r\n      DateAmbauche: ressourcedate.dateAmbauche,\r\n      DateNaissance: ressourcedate.dateNaissance,\r\n      Status: ressourcedate.status,\r\n      Genre: ressourcedate.genre,\r\n    };\r\n    console.log(\"ressource\", ressource);\r\n\r\n    editRessource(ressource);\r\n\r\n    history.push(\"/app/prestations/ressources\");\r\n  };\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setRessourcedate({ ...ressourcedate, [name]: value });\r\n  };\r\n  const annuler = () => {\r\n    let path = `/app/prestations/ressources`;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer Ressource\" />\r\n      <form onSubmit={submitEditRessource}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Matricule\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"matricule\"\r\n              value={ressourcedate.matricule}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Status\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"status\"\r\n              value={ressourcedate.status}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Prénom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"firstName\"\r\n              value={ressourcedate.firstName}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Nom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"lastName\"\r\n              value={ressourcedate.lastName}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Genre\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"genre\"\r\n              // ressourcedate.genre[0].toUpperCase() +\r\n              //   ressourcedate.genre.slice(1)\r\n              value={ressourcedate.genre}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem key=\"1\" value=\"Homme\">\r\n                Homme\r\n              </MenuItem>\r\n              <MenuItem key=\"2\" value=\"Femme\">\r\n                Femme\r\n              </MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date d'ambauche</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              name=\"dateAmbauche\"\r\n              value={ressourcedate.dateAmbauche}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Naissance</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"dateNaissance\"\r\n              value={ressourcedate.dateNaissance}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Modifer\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["335"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["336","337","338"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { editPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nexport default function ModiferPrestation({ match }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  //state\r\n  const initialPrestationState = {\r\n    id: null,\r\n    type: \"\",\r\n    etat: \"\",\r\n    dateDebut: \"\",\r\n    dateFin: \"\",\r\n    titre: \"\",\r\n    market: \"\",\r\n  };\r\n  // prestation\r\n  const dispatch = useDispatch();\r\n  const editPrestation = (prestation) =>\r\n    dispatch(editPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    console.log(\"id\", id);\r\n    clienteAxios\r\n      .get(`http://localhost:8081/DXC/prestations/Prestation/${id}`)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setPrestationdate(resp.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // dispatch(getPrestationAction(id));\r\n  }, [id]);\r\n\r\n  const prestation = useSelector((state) => state.prestations.prestation);\r\n  const [prestationdate, setPrestationdate] = useState(initialPrestationState);\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  const submitEditPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      prestationdate.titre.trim() === \"\" ||\r\n      prestationdate.etat.trim() === \"\" ||\r\n      prestationdate.market.trim() === \"\" ||\r\n      prestationdate.type.trim() === \"\" ||\r\n      prestationdate.dateDebut.trim() === \"\" ||\r\n      prestationdate.dateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n\r\n    let prestation = {\r\n      id: id,\r\n      titre: prestationdate.titre,\r\n      etat: prestationdate.etat,\r\n      market: prestationdate.market,\r\n      type: prestationdate.type,\r\n      dateDebut: prestationdate.dateDebut,\r\n      dateFin: prestationdate.dateFin,\r\n    };\r\n    console.log(\"prestation\", prestation);\r\n\r\n    editPrestation(prestation);\r\n\r\n    history.push(\"/app/prestations/ListePrestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPrestationdate({ ...prestationdate, [name]: value });\r\n  };\r\n\r\n  const dates = {\r\n    dateFin: moment(prestationdate.dateFin).format(\"L\"),\r\n    dateDebut: moment(prestationdate.dateDebut).format(\"L\"),\r\n  };\r\n\r\n  const annuler = () => {\r\n    let path = `/app/prestations/ListePrestations`;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer une prestation\" />\r\n      <form onSubmit={submitEditPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"titre\"\r\n              value={prestationdate.titre}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"etat\"\r\n              value={prestationdate.etat}\r\n              onChange={handleInputChange}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem key={etat.value} value={etat.value}>\r\n                  {etat.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"type\"\r\n              value={prestationdate.type}\r\n              onChange={handleInputChange}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem key={etat.value} value={etat.value}>\r\n                  {etat.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"market\"\r\n              value={prestationdate.market}\r\n              onChange={handleInputChange}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem key={market.value} value={market.value}>\r\n                  {market.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              name=\"dateDebut\"\r\n              value={prestationdate.dateDebut}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"dateFin\"\r\n              value={prestationdate.dateFin}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Modifer\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["339"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewClientAction } from \"../../services/Actions/clientActions\";\r\nimport {\r\n  validacionError,\r\n  validationSuccess,\r\n  validarFormularioAction,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteClient() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [market, getMarket] = useState(\"\");\r\n\r\n  // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const addClient = (client) => dispatch(createNewClientAction(client));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Client\r\n  const submitNewClient = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (nomClient.trim() === \"\" || market.trim() === \"\") {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Client\r\n    let client = {\r\n      nomClient: nomClient,\r\n      market: market,\r\n    };\r\n    addClient(client);\r\n    history.push(\"/app/prestations/clients\");\r\n  };\r\n  function AnnulerClient() {\r\n    history.push(\"/app/prestations/clients\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Client\" path=\"/app/prestations/clients\" />\r\n      </div>\r\n      <form onSubmit={submitNewClient}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={market}\r\n              onChange={(e) => getMarket(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          className={classes.btnAjouter}\r\n          color=\"primary\"\r\n          onClick={submitNewClient}\r\n        >\r\n          Ajouter\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          className={classes.btnAnnuler}\r\n          color=\"secondary\"\r\n          onClick={AnnulerClient}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteClient;\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["340","341","342","343","344","345","346","347"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",["348"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["349","350","351"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["352"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewContratAction } from \"../../services/Actions/contratActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteContrat() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomContrat, getNomContrat] = useState(\"\");\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [description, getDescription] = useState(\"\");\r\n\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const addContrat = (contrat) =>\r\n    dispatch(createNewContratAction(contrat));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew contrat\r\n  const submitNewContrat = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomContrat.trim() === \"\" ||\r\n      nomClient.trim() === \"\" ||\r\n      description.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau contrat\r\n    let contrat = {\r\n      nomContrat : nomContrat,\r\n      nomClient : nomClient,\r\n      description :description,\r\n      \r\n    };\r\n    addContrat(contrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={submitNewContrat}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomContrat}\r\n              onChange={(e) => getNomContrat(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => getDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n      \r\n          {/* <Grid item xs={6}>\r\n            <label>Date de Debut</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid> */}\r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewContrat}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteContrat;\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\Competances.js",["353","354"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"./Tabs\";\r\nimport './Competances.css';\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport CompetencesTransversales from \"./CompetencesTransversales.js\";\r\nimport CompetencesTechniques from \"./CompetencesTechniques.js\";\r\nimport CompetencesLinguistiques from \"./CompetencesLinguistiques.js\";\r\n\r\nexport default function Competances() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  function AjouteCompetance() {\r\n    history.push(\"/app/competances/ajouteCompetance\");\r\n  }\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Competances\"  path=\"/app/dashboard\"/>\r\n      <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteCompetance}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter Competance\r\n          </Button>\r\n        </div>\r\n\r\n        <Tabs >\r\n        <div title=\"Competences Techniques \">\r\n       <CompetencesTechniques/>\r\n        </div>\r\n        <div title=\"Competences Transversales\">\r\n        <CompetencesTransversales/>\r\n        </div>\r\n        <div title=\"Competences Linguistiques\">\r\n        <CompetencesLinguistiques/>\r\n        </div>\r\n      </Tabs>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["355"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteCompetance() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomCompetance, getNomCompetance] = useState(\"\");\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [description, getDescription] = useState(\"\");\r\n\r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const addCompetance = (competance) =>\r\n    dispatch(createNewCompetanceAction(competance));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Competance\r\n  const submitNewCompetance = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomCompetance.trim() === \"\"\r\n      \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Competance\r\n    let competance = {\r\n      nomCompetance : nomCompetance,\r\n      \r\n      \r\n    };\r\n    addCompetance(competance);\r\n    history.push(\"/app/competances\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Competance\" path=\"/app/competances\" />\r\n      </div>\r\n      <form onSubmit={submitNewCompetance}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Competance\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomCompetance}\r\n              onChange={(e) => getNomCompetance(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => getDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n      \r\n          {/* <Grid item xs={6}>\r\n            <label>Date de Debut</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid> */}\r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewCompetance}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteCompetance;\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["356"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\parametres\\Parametres.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\Clients.js",["357","358","359"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\";\r\nexport default function Clients() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n    axios\r\n      .get(\"http://localhost:8080/DXC/clients/allClients\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setClients(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  function AjouteClient() {\r\n    history.push(\"/app/clients/AjouteClient\");\r\n  }\r\n\r\n  const AfficheClient = (e) => {\r\n    let path = `/app/clients/AffichageClient` + e;\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageTitle title=\"Liste des Clients\" path=\"/app/dashboard\" />\r\n      </div>\r\n      <div>\r\n        <div className={classes.Search}>\r\n          <Button variant=\"contained\" className={classes.ButtonSearch}>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Input\r\n            className={classes.InputSearch}\r\n            type=\"text\"\r\n            placeholder=\"Chercher un client par nom \"\r\n          />\r\n        </div>\r\n        <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteClient}\r\n          >\r\n            <AddIcon /> Ajouter Client\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow className={classes.TableRow}>\r\n                <TableCell>Nom de Client</TableCell>\r\n                <TableCell>Market</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {clients.map((client) => (\r\n                <TableRow key={client.nomClient}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {client.nomClient}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {client.market}\r\n                  </TableCell>\r\n                  <TableRow component=\"th\" scope=\"row\">\r\n                    <Button onClick={() => AfficheClient(client.id)}>\r\n                      <VisibilityIcon className={classes.icons} />\r\n                    </Button>\r\n                  </TableRow>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Header\\Header.js",["360","361","362"],"import React, { useState } from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Language,\r\n  Brightness6,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n              style={{ color: \"black\" }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <div>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/DXC-Logo.svg`}\r\n            alt=\"logo_dxc\"\r\n            className={classes.logoimage}\r\n          />\r\n        </div>\r\n        <div className={classes.grow} />\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          className={classes.headerMenuButton}\r\n        ></IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <i\r\n            className=\"pe-7s-bell\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          ></i>\r\n          {/* <NotificationsIcon\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          /> */}\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <i\r\n            className=\"pe-7s-global\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          ></i>\r\n        </IconButton>\r\n        {/* <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <Brightness6\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          />\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <i\r\n            className=\"pe-7s-user\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          ></i>\r\n        </IconButton>\r\n\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        ></Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Post Occupé\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",["363"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"competance 1\",\r\n      \"4\",\r\n      \"2\",\r\n    ),\r\n    createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n      createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n  ];\r\nfunction CompetencesTransversales(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTransversales;","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",["364"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"IBM\",\r\n      \" 1\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesTechniques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTechniques;","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",["365"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"Francais\",\r\n      \" 5\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"Arab\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"Anglais\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesLinguistiques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesLinguistiques;","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\competanceActions.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\contrats\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\contratActions.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\clientActions.js",["366","367","368","369"],"import {\r\n  ADD_CLIENT,\r\n  ADD_CLIENT_SUCCESS,\r\n  ADD_CLIENT_ERROR,\r\n  START_DOWNLOAD_CLIENTS,\r\n  CLIENT_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_CLIENT__ERROR,\r\n  GET_CLIENT_REMOVE,\r\n  DELETE_CLIENT_SUCCESS,\r\n  DELETE_CLIENT_ERROR,\r\n  GET_CLIENT_EDIT,\r\n  CLIENT_EDIT_SUCCESS,\r\n  CLIENT_EDIT_ERROR,\r\n  BEGIN_CLIENT_EDIT,\r\n  EDITION_CLIENT_SUCCESS,\r\n  EDIT_CLIENT_ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\n//créer un nouveau client - fonction principale\r\nexport function createNewClientAction(client) {\r\n  console.log(\"client\", client);\r\n  return (dispatch) => {\r\n    dispatch(newClient());\r\n\r\n    clienteAxios\r\n      .post(\"http://localhost:8080/DXC/clients/addClient\", client)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //si se inserta correctamente\r\n        dispatch(addNewClientSuccess(client));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewClientError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newClient = () => ({\r\n  type: ADD_CLIENT,\r\n});\r\n\r\nexport const addNewClientSuccess = (client) => ({\r\n  type: ADD_CLIENT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const addNewClientError = (error) => ({\r\n  type: ADD_CLIENT_ERROR,\r\n});\r\n\r\n//obtenir la liste des clients de clientsReducer (voir API)\r\nexport function getClientsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getClientsStart());\r\n\r\n    //interroger l'API\r\n    clienteAxios\r\n      .get(\"http://localhost:8080/DXC/clients/allClients\")\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(downloadClientsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaClientsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getClientsStart = () => ({\r\n  type: START_DOWNLOAD_CLIENTS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadClientsSuccessful = (client) => ({\r\n  type: CLIENT_DOWNLOAD_SUCCESSFUL,\r\n  payload: client,\r\n});\r\n\r\nexport const descargaClientsError = () => ({\r\n  type: DOWNLOAD_CLIENT__ERROR,\r\n});\r\n//fonction pour obtenir le client à modifier\r\nexport function getClientAcoution(id) {\r\n  return (dispatch) => {\r\n    dispatch(getEditClientAction());\r\n\r\n    //obtenir l'api de  le client\r\n    clienteAxios\r\n      .get(`/route/api/${id}`)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        dispatch(getClientEditSuccess(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(getClientEditError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getEditClientAction = (id) => ({\r\n  type: GET_CLIENT_EDIT,\r\n});\r\n\r\nexport const getClientEditSuccess = (client) => ({\r\n  type: CLIENT_EDIT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const getClientEditError = () => ({\r\n  type: CLIENT_EDIT_ERROR,\r\n});\r\n\r\n//MODIFIER un client DANS L'API ET L'ETAT\r\nexport function editClientAction(client) {\r\n  return (dispatch) => {\r\n    dispatch(startEditClient());\r\n\r\n    //interrogez l'API et envoyez une méthode put à mettre à jour\r\n    // clienteAxios\r\n    //   .put(`route/api/${client.id}`, client)\r\n    //   .then((resp) => {\r\n    //     //console.log(resp);\r\n    //     dispatch(editClientSuccess(resp.data));\r\n    //     Swal.fire(\"Stored\", \"le client été modifier avec succés \", \"success\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     //console.log(error);\r\n    //     dispatch(editClientError());\r\n    //   });\r\n  };\r\n}\r\n\r\nexport const startEditClient = () => ({\r\n  type: BEGIN_CLIENT_EDIT,\r\n});\r\n\r\nexport const editClientSuccess = (client) => ({\r\n  type: EDITION_CLIENT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const editClientError = () => ({\r\n  type: EDIT_CLIENT_ERROR,\r\n});\r\n","C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\ressources\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js",["370","371"],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\pages\\certifications\\styles.js",[],"C:\\Users\\Khalid Zennou\\Desktop\\DXC\\backend\\dxc-repo-back\\DXC-Repo-Backend\\dxc-repo\\src\\services\\Actions\\certificationsActions.js",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":2,"column":25,"nodeType":"378","messageId":"379","endLine":2,"endColumn":33},{"ruleId":"380","severity":1,"message":"381","line":23,"column":3,"nodeType":"382","endLine":99,"endColumn":4},{"ruleId":"380","severity":1,"message":"381","line":11,"column":1,"nodeType":"382","endLine":31,"endColumn":2},{"ruleId":"380","severity":1,"message":"381","line":24,"column":3,"nodeType":"382","endLine":104,"endColumn":4},{"ruleId":"380","severity":1,"message":"381","line":27,"column":1,"nodeType":"382","endLine":125,"endColumn":2},{"ruleId":"383","severity":1,"message":"384","line":84,"column":6,"nodeType":"385","endLine":84,"endColumn":8,"suggestions":"386"},{"ruleId":"376","severity":1,"message":"387","line":18,"column":8,"nodeType":"378","messageId":"379","endLine":18,"endColumn":14},{"ruleId":"383","severity":1,"message":"388","line":52,"column":6,"nodeType":"385","endLine":52,"endColumn":17,"suggestions":"389"},{"ruleId":"376","severity":1,"message":"390","line":55,"column":9,"nodeType":"378","messageId":"379","endLine":55,"endColumn":14},{"ruleId":"383","severity":1,"message":"384","line":67,"column":6,"nodeType":"385","endLine":67,"endColumn":8,"suggestions":"391"},{"ruleId":"376","severity":1,"message":"392","line":1,"column":28,"nodeType":"378","messageId":"379","endLine":1,"endColumn":34},{"ruleId":"376","severity":1,"message":"393","line":59,"column":9,"nodeType":"378","messageId":"379","endLine":59,"endColumn":19},{"ruleId":"376","severity":1,"message":"394","line":126,"column":9,"nodeType":"378","messageId":"379","endLine":126,"endColumn":14},{"ruleId":"376","severity":1,"message":"390","line":29,"column":9,"nodeType":"378","messageId":"379","endLine":29,"endColumn":14},{"ruleId":"376","severity":1,"message":"395","line":7,"column":23,"nodeType":"378","messageId":"379","endLine":7,"endColumn":34},{"ruleId":"376","severity":1,"message":"396","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":26},{"ruleId":"376","severity":1,"message":"397","line":16,"column":8,"nodeType":"378","messageId":"379","endLine":16,"endColumn":20},{"ruleId":"376","severity":1,"message":"398","line":28,"column":10,"nodeType":"378","messageId":"379","endLine":28,"endColumn":17},{"ruleId":"376","severity":1,"message":"399","line":47,"column":9,"nodeType":"378","messageId":"379","endLine":47,"endColumn":20},{"ruleId":"376","severity":1,"message":"400","line":48,"column":9,"nodeType":"378","messageId":"379","endLine":48,"endColumn":26},{"ruleId":"376","severity":1,"message":"401","line":49,"column":9,"nodeType":"378","messageId":"379","endLine":49,"endColumn":24},{"ruleId":"383","severity":1,"message":"402","line":52,"column":6,"nodeType":"385","endLine":52,"endColumn":29,"suggestions":"403"},{"ruleId":"376","severity":1,"message":"404","line":6,"column":10,"nodeType":"378","messageId":"379","endLine":6,"endColumn":18},{"ruleId":"376","severity":1,"message":"405","line":12,"column":8,"nodeType":"378","messageId":"379","endLine":12,"endColumn":25},{"ruleId":"376","severity":1,"message":"406","line":17,"column":8,"nodeType":"378","messageId":"379","endLine":17,"endColumn":18},{"ruleId":"376","severity":1,"message":"407","line":41,"column":9,"nodeType":"378","messageId":"379","endLine":41,"endColumn":13},{"ruleId":"376","severity":1,"message":"390","line":27,"column":9,"nodeType":"378","messageId":"379","endLine":27,"endColumn":14},{"ruleId":"376","severity":1,"message":"408","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"409","line":1,"column":28,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"390","line":27,"column":9,"nodeType":"378","messageId":"379","endLine":27,"endColumn":14},{"ruleId":"383","severity":1,"message":"384","line":82,"column":6,"nodeType":"385","endLine":82,"endColumn":8,"suggestions":"410"},{"ruleId":"376","severity":1,"message":"405","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":25},{"ruleId":"376","severity":1,"message":"411","line":18,"column":8,"nodeType":"378","messageId":"379","endLine":18,"endColumn":16},{"ruleId":"376","severity":1,"message":"407","line":42,"column":9,"nodeType":"378","messageId":"379","endLine":42,"endColumn":13},{"ruleId":"376","severity":1,"message":"412","line":5,"column":24,"nodeType":"378","messageId":"379","endLine":5,"endColumn":41},{"ruleId":"376","severity":1,"message":"413","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":11},{"ruleId":"376","severity":1,"message":"414","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":14},{"ruleId":"376","severity":1,"message":"408","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"408","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"408","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"415","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"416","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":24},{"ruleId":"376","severity":1,"message":"417","line":10,"column":3,"nodeType":"378","messageId":"379","endLine":10,"endColumn":22},{"ruleId":"376","severity":1,"message":"418","line":18,"column":8,"nodeType":"378","messageId":"379","endLine":18,"endColumn":12},{"ruleId":"376","severity":1,"message":"419","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":16},{"ruleId":"376","severity":1,"message":"420","line":21,"column":9,"nodeType":"378","messageId":"379","endLine":21,"endColumn":16},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["423"],"'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.id' and 'ressourcedate'. Either include them or remove the dependency array.",["424"],"'error' is assigned a value but never used.",["425"],"'useRef' is defined but never used.","'prestation' is assigned a value but never used.","'dates' is assigned a value but never used.","'useSelector' is defined but never used.","'getContratAction' is defined but never used.","'clienteAxios' is defined but never used.","'message' is assigned a value but never used.","'validarForm' is assigned a value but never used.","'SuccessValidation' is assigned a value but never used.","'errorValidation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getContrat'. Either include it or remove the dependency array.",["426"],"'contrats' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'Typography' is defined but never used.","'bull' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["427"],"'EditIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Language' is defined but never used.","'Brightness6' is defined but never used.","'GET_CLIENT_REMOVE' is defined but never used.","'DELETE_CLIENT_SUCCESS' is defined but never used.","'DELETE_CLIENT_ERROR' is defined but never used.","'Swal' is defined but never used.","'MenuItem' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"428","fix":"432"},{"desc":"433","fix":"434"},{"desc":"428","fix":"435"},"Update the dependencies array to be: [dispatch]",{"range":"436","text":"437"},"Update the dependencies array to be: [match.params.id, matricule, ressourcedate]",{"range":"438","text":"439"},{"range":"440","text":"437"},"Update the dependencies array to be: [getContrat, props.match.params.id]",{"range":"441","text":"442"},{"range":"443","text":"437"},[2777,2779],"[dispatch]",[1877,1888],"[match.params.id, matricule, ressourcedate]",[2255,2257],[1822,1845],"[getContrat, props.match.params.id]",[2655,2657]]