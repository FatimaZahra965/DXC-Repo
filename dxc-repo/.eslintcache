[{"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js":"3","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js":"4","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js":"5","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js":"7","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js":"8","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js":"9","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js":"10","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js":"11","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js":"12","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"13","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"14","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"15","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"16","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"17","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"18","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"19","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js":"20","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js":"21","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"22","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"23","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js":"24","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js":"25","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js":"26","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"27","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"28","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"29","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"30","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js":"31","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"32","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"33","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"34","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"35","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"36","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"37","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"38","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js":"39","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"40","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js":"41","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"42","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"43","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"44","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"45","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js":"46","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js":"47","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js":"48","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js":"49","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"50","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"51","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"52","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js":"53","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js":"54","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"55","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js":"56","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\certificationsActions.js":"57","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js":"58","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js":"59","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"60","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js":"61","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"62","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js":"63","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js":"64","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js":"65","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"66","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"67","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"68","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"69","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\styles.js":"70","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"71","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js":"72","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"73","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js":"74","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"75","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js":"76","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"77","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"78","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\styles.js":"79","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\index.js":"80","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\serviceWorker.js":"81","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\App.js":"82","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js":"83","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js":"84","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\themes\\index.js":"85","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\store\\store.js":"86","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js":"87","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js":"88","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js":"89","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\themes\\default.js":"90","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js":"91","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js":"92","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js":"93","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"94","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"95","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"96","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"97","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"98","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"99","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js":"100","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"101","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"102","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js":"103","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js":"104","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"105","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js":"106","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"107","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"108","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"109","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"110","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"111","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"112","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js":"113","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"114","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"115","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"116","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"117","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"118","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"119","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"120","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"121","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js":"122","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js":"123","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"124","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js":"125","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js":"126","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"127","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js":"128","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"129","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"130","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"131","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\styles.js":"132","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"133","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js":"134","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"135","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"136","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js":"137","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\certificationsActions.js":"138","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\config\\axios.js":"139","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"140","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js":"141","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js":"142","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js":"143","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"144","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"145","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js":"146","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js":"147","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js":"148","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"149","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js":"150","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js":"151","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js":"152","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"153","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\styles.js":"154","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"155","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"156","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"157","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"158","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\settingsPassword.js":"159","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\profil.js":"160","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\styles.js":"161","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\SettingsPassword.js":"162","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\Profil.js":"163","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\SettingsNotifications.js":"164","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\CompetencesProfil.js":"165","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\CertificationProfil.js":"166","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\InformationsProfil.js":"167","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\Tabs.js":"168"},{"size":896,"mtime":1654295117075,"results":"169","hashOfConfig":"170"},{"size":5083,"mtime":1652819574101,"results":"171","hashOfConfig":"170"},{"size":1444,"mtime":1652819574042,"results":"172","hashOfConfig":"170"},{"size":2058,"mtime":1652819574042,"results":"173","hashOfConfig":"170"},{"size":1959,"mtime":1654201295739,"results":"174","hashOfConfig":"170"},{"size":541,"mtime":1653171299616,"results":"175","hashOfConfig":"170"},{"size":449,"mtime":1653648184922,"results":"176","hashOfConfig":"170"},{"size":1616,"mtime":1652819574068,"results":"177","hashOfConfig":"170"},{"size":8123,"mtime":1652819574072,"results":"178","hashOfConfig":"170"},{"size":9086,"mtime":1654252285742,"results":"179","hashOfConfig":"170"},{"size":2931,"mtime":1653046751472,"results":"180","hashOfConfig":"170"},{"size":696,"mtime":1653044546145,"results":"181","hashOfConfig":"170"},{"size":2311,"mtime":1653044546131,"results":"182","hashOfConfig":"170"},{"size":2472,"mtime":1653576033420,"results":"183","hashOfConfig":"170"},{"size":1538,"mtime":1653044546131,"results":"184","hashOfConfig":"170"},{"size":1477,"mtime":1653226854753,"results":"185","hashOfConfig":"170"},{"size":580,"mtime":1652819574111,"results":"186","hashOfConfig":"170"},{"size":1454,"mtime":1653046751466,"results":"187","hashOfConfig":"170"},{"size":2845,"mtime":1653046751467,"results":"188","hashOfConfig":"170"},{"size":5945,"mtime":1654201295774,"results":"189","hashOfConfig":"170"},{"size":8243,"mtime":1654202048442,"results":"190","hashOfConfig":"170"},{"size":6500,"mtime":1654201295748,"results":"191","hashOfConfig":"170"},{"size":1959,"mtime":1654202113052,"results":"192","hashOfConfig":"170"},{"size":2521,"mtime":1653573489971,"results":"193","hashOfConfig":"170"},{"size":1515,"mtime":1654263547026,"results":"194","hashOfConfig":"170"},{"size":7815,"mtime":1653640971700,"results":"195","hashOfConfig":"170"},{"size":12642,"mtime":1654257372936,"results":"196","hashOfConfig":"170"},{"size":161,"mtime":1654086277000,"results":"197","hashOfConfig":"170"},{"size":6360,"mtime":1654201295765,"results":"198","hashOfConfig":"170"},{"size":1718,"mtime":1653640872191,"results":"199","hashOfConfig":"170"},{"size":4068,"mtime":1653569694840,"results":"200","hashOfConfig":"170"},{"size":9710,"mtime":1654201305138,"results":"201","hashOfConfig":"170"},{"size":20678,"mtime":1654201295764,"results":"202","hashOfConfig":"170"},{"size":5741,"mtime":1654201295751,"results":"203","hashOfConfig":"170"},{"size":21185,"mtime":1654244890686,"results":"204","hashOfConfig":"170"},{"size":5975,"mtime":1654201295755,"results":"205","hashOfConfig":"170"},{"size":6266,"mtime":1654201295756,"results":"206","hashOfConfig":"170"},{"size":363,"mtime":1653044546114,"results":"207","hashOfConfig":"170"},{"size":521,"mtime":1653044546131,"results":"208","hashOfConfig":"170"},{"size":344,"mtime":1653044546131,"results":"209","hashOfConfig":"170"},{"size":264,"mtime":1653044546082,"results":"210","hashOfConfig":"170"},{"size":366,"mtime":1653044546082,"results":"211","hashOfConfig":"170"},{"size":7382,"mtime":1654201295761,"results":"212","hashOfConfig":"170"},{"size":11050,"mtime":1654201295760,"results":"213","hashOfConfig":"170"},{"size":9848,"mtime":1654201295759,"results":"214","hashOfConfig":"170"},{"size":710,"mtime":1652819574028,"results":"215","hashOfConfig":"170"},{"size":3242,"mtime":1652819574075,"results":"216","hashOfConfig":"170"},{"size":1920,"mtime":1652819574071,"results":"217","hashOfConfig":"170"},{"size":5647,"mtime":1654201295752,"results":"218","hashOfConfig":"170"},{"size":334,"mtime":1653046978158,"results":"219","hashOfConfig":"170"},{"size":382,"mtime":1653044546114,"results":"220","hashOfConfig":"170"},{"size":4713,"mtime":1654201295745,"results":"221","hashOfConfig":"170"},{"size":5606,"mtime":1654295823229,"results":"222","hashOfConfig":"170"},{"size":3026,"mtime":1654265479053,"results":"223","hashOfConfig":"170"},{"size":504,"mtime":1653231015585,"results":"224","hashOfConfig":"170"},{"size":2461,"mtime":1654265115853,"results":"225","hashOfConfig":"170"},{"size":4532,"mtime":1654201295768,"results":"226","hashOfConfig":"170"},{"size":4026,"mtime":1654201295769,"results":"227","hashOfConfig":"170"},{"size":3993,"mtime":1654201295771,"results":"228","hashOfConfig":"170"},{"size":4392,"mtime":1654201295772,"results":"229","hashOfConfig":"170"},{"size":1186,"mtime":1654201295762,"results":"230","hashOfConfig":"170"},{"size":888,"mtime":1654204106456,"results":"231","hashOfConfig":"170"},{"size":137,"mtime":1652819574041,"results":"232","hashOfConfig":"170"},{"size":1363,"mtime":1654201305137,"results":"233","hashOfConfig":"170"},{"size":3888,"mtime":1653402468280,"results":"234","hashOfConfig":"170"},{"size":4624,"mtime":1652819574035,"results":"235","hashOfConfig":"170"},{"size":3179,"mtime":1653601716527,"results":"236","hashOfConfig":"170"},{"size":3535,"mtime":1654265491798,"results":"237","hashOfConfig":"170"},{"size":3174,"mtime":1653601726448,"results":"238","hashOfConfig":"170"},{"size":982,"mtime":1654202166091,"results":"239","hashOfConfig":"170"},{"size":5732,"mtime":1654256098490,"results":"240","hashOfConfig":"170"},{"size":3006,"mtime":1654265134269,"results":"241","hashOfConfig":"170"},{"size":4883,"mtime":1653384769358,"results":"242","hashOfConfig":"170"},{"size":2241,"mtime":1654263704137,"results":"243","hashOfConfig":"170"},{"size":3976,"mtime":1652819574039,"results":"244","hashOfConfig":"170"},{"size":632,"mtime":1654204364962,"results":"245","hashOfConfig":"170"},{"size":902,"mtime":1652819574034,"results":"246","hashOfConfig":"170"},{"size":1474,"mtime":1652819574036,"results":"247","hashOfConfig":"170"},{"size":922,"mtime":1654202079105,"results":"248","hashOfConfig":"170"},{"size":887,"mtime":1654620716929,"results":"249","hashOfConfig":"250"},{"size":5083,"mtime":1652819574101,"results":"251","hashOfConfig":"250"},{"size":1959,"mtime":1654620734603,"results":"252","hashOfConfig":"250"},{"size":1444,"mtime":1652819574042,"results":"253","hashOfConfig":"250"},{"size":2058,"mtime":1652819574042,"results":"254","hashOfConfig":"250"},{"size":541,"mtime":1653171299616,"results":"255","hashOfConfig":"250"},{"size":449,"mtime":1653648184922,"results":"256","hashOfConfig":"250"},{"size":9208,"mtime":1654532003481,"results":"257","hashOfConfig":"250"},{"size":1616,"mtime":1652819574068,"results":"258","hashOfConfig":"250"},{"size":8123,"mtime":1652819574072,"results":"259","hashOfConfig":"250"},{"size":2931,"mtime":1653046751472,"results":"260","hashOfConfig":"250"},{"size":3242,"mtime":1652819574075,"results":"261","hashOfConfig":"250"},{"size":1920,"mtime":1652819574071,"results":"262","hashOfConfig":"250"},{"size":696,"mtime":1653044546145,"results":"263","hashOfConfig":"250"},{"size":2311,"mtime":1653044546131,"results":"264","hashOfConfig":"250"},{"size":2472,"mtime":1653576033420,"results":"265","hashOfConfig":"250"},{"size":1538,"mtime":1653044546131,"results":"266","hashOfConfig":"250"},{"size":1477,"mtime":1653226854753,"results":"267","hashOfConfig":"250"},{"size":580,"mtime":1652819574111,"results":"268","hashOfConfig":"250"},{"size":1454,"mtime":1653046751466,"results":"269","hashOfConfig":"250"},{"size":5945,"mtime":1654201295774,"results":"270","hashOfConfig":"250"},{"size":2845,"mtime":1653046751467,"results":"271","hashOfConfig":"250"},{"size":6500,"mtime":1654201295748,"results":"272","hashOfConfig":"250"},{"size":8243,"mtime":1654202048442,"results":"273","hashOfConfig":"250"},{"size":2521,"mtime":1653573489971,"results":"274","hashOfConfig":"250"},{"size":12642,"mtime":1654257372936,"results":"275","hashOfConfig":"250"},{"size":7815,"mtime":1653640971700,"results":"276","hashOfConfig":"250"},{"size":161,"mtime":1654086277000,"results":"277","hashOfConfig":"250"},{"size":20678,"mtime":1654201295764,"results":"278","hashOfConfig":"250"},{"size":21185,"mtime":1654244890686,"results":"279","hashOfConfig":"250"},{"size":1959,"mtime":1654202113052,"results":"280","hashOfConfig":"250"},{"size":6266,"mtime":1654201295756,"results":"281","hashOfConfig":"250"},{"size":5975,"mtime":1654201295755,"results":"282","hashOfConfig":"250"},{"size":4068,"mtime":1653569694840,"results":"283","hashOfConfig":"250"},{"size":1718,"mtime":1653640872191,"results":"284","hashOfConfig":"250"},{"size":9710,"mtime":1654201305138,"results":"285","hashOfConfig":"250"},{"size":5741,"mtime":1654201295751,"results":"286","hashOfConfig":"250"},{"size":6360,"mtime":1654201295765,"results":"287","hashOfConfig":"250"},{"size":11050,"mtime":1654201295760,"results":"288","hashOfConfig":"250"},{"size":7382,"mtime":1654201295761,"results":"289","hashOfConfig":"250"},{"size":9848,"mtime":1654201295759,"results":"290","hashOfConfig":"250"},{"size":968,"mtime":1654537849110,"results":"291","hashOfConfig":"250"},{"size":521,"mtime":1653044546131,"results":"292","hashOfConfig":"250"},{"size":1515,"mtime":1654263547026,"results":"293","hashOfConfig":"250"},{"size":344,"mtime":1653044546131,"results":"294","hashOfConfig":"250"},{"size":264,"mtime":1653044546082,"results":"295","hashOfConfig":"250"},{"size":710,"mtime":1652819574028,"results":"296","hashOfConfig":"250"},{"size":366,"mtime":1653044546082,"results":"297","hashOfConfig":"250"},{"size":5647,"mtime":1654201295752,"results":"298","hashOfConfig":"250"},{"size":3535,"mtime":1654265491798,"results":"299","hashOfConfig":"250"},{"size":3179,"mtime":1653601716527,"results":"300","hashOfConfig":"250"},{"size":3174,"mtime":1653601726448,"results":"301","hashOfConfig":"250"},{"size":922,"mtime":1654202079105,"results":"302","hashOfConfig":"250"},{"size":382,"mtime":1653044546114,"results":"303","hashOfConfig":"250"},{"size":5822,"mtime":1654620705195,"results":"304","hashOfConfig":"250"},{"size":4713,"mtime":1654201295745,"results":"305","hashOfConfig":"250"},{"size":334,"mtime":1653046978158,"results":"306","hashOfConfig":"250"},{"size":2461,"mtime":1654265115853,"results":"307","hashOfConfig":"250"},{"size":4532,"mtime":1654201295768,"results":"308","hashOfConfig":"250"},{"size":137,"mtime":1652819574041,"results":"309","hashOfConfig":"250"},{"size":504,"mtime":1653231015585,"results":"310","hashOfConfig":"250"},{"size":4026,"mtime":1654201295769,"results":"311","hashOfConfig":"250"},{"size":3993,"mtime":1654201295771,"results":"312","hashOfConfig":"250"},{"size":3026,"mtime":1654265479053,"results":"313","hashOfConfig":"250"},{"size":4392,"mtime":1654201295772,"results":"314","hashOfConfig":"250"},{"size":888,"mtime":1654204106456,"results":"315","hashOfConfig":"250"},{"size":1186,"mtime":1654201295762,"results":"316","hashOfConfig":"250"},{"size":2241,"mtime":1654263704137,"results":"317","hashOfConfig":"250"},{"size":3006,"mtime":1654265134269,"results":"318","hashOfConfig":"250"},{"size":5732,"mtime":1654256098490,"results":"319","hashOfConfig":"250"},{"size":1363,"mtime":1654201305137,"results":"320","hashOfConfig":"250"},{"size":3888,"mtime":1653402468280,"results":"321","hashOfConfig":"250"},{"size":632,"mtime":1654204364962,"results":"322","hashOfConfig":"250"},{"size":4624,"mtime":1652819574035,"results":"323","hashOfConfig":"250"},{"size":982,"mtime":1654202166091,"results":"324","hashOfConfig":"250"},{"size":4883,"mtime":1653384769358,"results":"325","hashOfConfig":"250"},{"size":3976,"mtime":1652819574039,"results":"326","hashOfConfig":"250"},{"size":902,"mtime":1652819574034,"results":"327","hashOfConfig":"250"},{"size":1474,"mtime":1652819574036,"results":"328","hashOfConfig":"250"},{"size":1651,"mtime":1654461943544,"results":"329","hashOfConfig":"250"},{"size":1055,"mtime":1654525635346,"results":"330","hashOfConfig":"250"},{"size":167,"mtime":1654540761267,"results":"331","hashOfConfig":"250"},{"size":2006,"mtime":1654537951784,"results":"332","hashOfConfig":"250"},{"size":1112,"mtime":1654542656836,"results":"333","hashOfConfig":"250"},{"size":2538,"mtime":1654538015942,"results":"334","hashOfConfig":"250"},{"size":3093,"mtime":1654542879170,"results":"335","hashOfConfig":"250"},{"size":196,"mtime":1654538651415,"results":"336","hashOfConfig":"250"},{"size":193,"mtime":1654538660346,"results":"337","hashOfConfig":"250"},{"size":2337,"mtime":1654556380266,"results":"338","hashOfConfig":"250"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"342"},"aoud2a",{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"342"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"342"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"342"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"342"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"342"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"342"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"342"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"342"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"342"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"342"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"342"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"342"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"342"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"342"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"342"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"342"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"342"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"342"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"342"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"342"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"342"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"342"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"342"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"342"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"342"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"342"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"342"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"342"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"342"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"342"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"342"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ovs82z",{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"535"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"535"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"535"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"535"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"535"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"535"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"535"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"535"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"535"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"535"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"535"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"535"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"535"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"535"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"535"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"535"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"535"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"535"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"535"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"535"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"535"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"535"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"535"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"535"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"535"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"535"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"535"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"535"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"535"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"535"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"535"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"535"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"535"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"695"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js",["714"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport \"./themes/style.css\";\r\nimport { lightTheme } from './themes/themes';\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { LayoutProvider } from \"./context/LayoutContext\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\n// import \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <LayoutProvider>\r\n    <UserProvider>\r\n      <ThemeProvider theme={lightTheme}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  </LayoutProvider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service w",["715","716"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js",[],["717","718"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js",["719"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Notifications from \"../../pages/notifications\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport Capabilites from \"../../pages/capabilites/Capabilites\";\r\nimport Competances from \"../../pages/competances/Competances\";\r\nimport Clients from \"../../pages/clients\";\r\n\r\nimport Ressources from \"../../pages/ressources/Ressources\";\r\nimport Activites from \"../../pages/activites/Activites\";\r\nimport Technologies from \"../../pages/technologies/Technologies\";\r\nimport Projets from \"../../pages/projets/Projets\";\r\nimport Parametres from \"../../pages/parametres/Parametres\";\r\nimport AjouterPrestation from \"../../pages/prestations/AjouterPrestation\";\r\nimport ModiferPrestation from \"../../pages/prestations/ModiferPrestation\";\r\nimport Prestations from \"../../pages/prestations/Prestations\";\r\nimport AjouteContrat from \"../../pages/contrats/AjouteContrat\";\r\nimport AjouteCompetance from \"../../pages/competances/AjouteCompetances\"\r\nimport Contrats from \"../../pages/contrats/Contrats\";\r\nimport EditContrat from \"../../pages/contrats/EditContrat\";\r\nimport ContratDetail from \"../../pages/contrats/ContratDetail\";\r\nimport AjouteClient from \"../../pages/clients/AjouteClient\";\r\nimport EditClient from \"../../pages/clients/EditClient\";\r\nimport AffichageClient from \"../../pages/clients/AffichageClient\";\r\nimport AjouterRessource from \"../../pages/ressources/AjouterRessource\";\r\nimport ModiferRessource from \"../../pages/ressources/ModiferRessource\";\r\nimport AfficherRessource from \"../../pages/ressources/AfficherRessource\";\r\nimport Certifications from \"../../pages/certifications/Certifications\";\r\nimport EditCompetance from \"../../pages/competances/EditCompetance\";\r\nimport CompetanceDetail from \"../../pages/competances/CompetanceDetail\";\r\nimport AjouterCertification from \"../../pages/certifications/AjouterCertification\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            {/*  route dashboard  */}\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/capabilites\" component={Capabilites} />\r\n            <Route path=\"/app/competances/allCompetances\" component={Competances} />\r\n            <Route\r\n              path=\"/app/competances/ajouteCompetance\"\r\n              component={AjouteCompetance}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/ListeCertifications\"\r\n              component={Certifications}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/AjouterCertification\"\r\n              component={AjouterCertification}\r\n            />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n\r\n            <Route\r\n              path=\"/app/prestations/ListePrestations\"\r\n              component={Prestations}\r\n            />\r\n            <Route path=\"/app/prestations/clients\" component={Clients} />\r\n            <Route path=\"/app/clients/AjouteClient\" component={AjouteClient} />\r\n            <Route\r\n              path=\"/app/clients/AffichageClients\"\r\n              component={AffichageClient}\r\n            />\r\n            <Route path=\"/app/prestations/Contrats\" component={Contrats} />\r\n            <Route\r\n              path=\"/app/Contrats/ContratDetail/:id\"\r\n              component={ContratDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/AjouteContrat\"\r\n              component={AjouteContrat}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/EditContrat/:id\"\r\n              component={EditContrat}\r\n            />\r\n            <Route path=\"/app/prestations/ressources\" component={Ressources} />\r\n\r\n            {/*  routes Competances  */}\r\n            <Route\r\n              path=\"/app/competances/allCompetances\"\r\n              component={Competances}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/ajouteCompetance\"\r\n              component={AjouteCompetance}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/CompetanceDetail/:id\"\r\n              component={CompetanceDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/EditCompetance/:id\"\r\n              component={EditCompetance}\r\n            />\r\n\r\n            {/*  routes prestations  */}\r\n            <Route\r\n              path=\"/app/prestations/allPrestation\"\r\n              component={Prestations}\r\n            />\r\n            <Route\r\n              path=\"/app/prestations/AjouterPrestation\"\r\n              component={AjouterPrestation}\r\n            />\r\n            {/* <Route path=\"/app/prestations/ModiferPrestation/:id\"  component={ModiferPrestation} />\r\n                <Route path=\"/app/prestations/AficherPrestation/:id\" component={AfficherPrestation}/> */}\r\n\r\n            {/*  routes clients  */}\r\n            <Route path=\"/app/prestations/clients\" component={Clients} />\r\n            <Route path=\"/app/clients/AjouteClient\" component={AjouteClient} />\r\n            <Route\r\n              path=\"/app/clients/AffichageClient/:id\"\r\n              component={AffichageClient}\r\n            />\r\n            <Route path=\"/app/clients/EditClient/:id\" component={EditClient} />\r\n\r\n            {/*  routes Contrats  */}\r\n            <Route path=\"/app/prestations/Contrats\" component={Contrats} />\r\n            <Route\r\n              path=\"/app/Contrats/ContratDetail/:id\"\r\n              component={ContratDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/AjouteContrat\"\r\n              component={AjouteContrat}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/EditContrat/:id\"\r\n              component={EditContrat}\r\n            />\r\n\r\n            {/*  routes Ressources  */}\r\n            <Route path=\"/app/prestations/ressources\" component={Ressources} />\r\n            <Route\r\n              path=\"/app/ressources/AjouterRessource\"\r\n              component={AjouterRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/ModiferRessource/:id\"\r\n              component={ModiferRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/AfficherRessource/:id\"\r\n              component={AfficherRessource}\r\n            />\r\n\r\n            <Route path=\"/app/prestations/activites\" component={Activites} />\r\n            <Route\r\n              path=\"/app/prestations/technologies\"\r\n              component={Technologies}\r\n            />\r\n            <Route path=\"/app/prestations/projets\" component={Projets} />\r\n            <Route path=\"/app/parametres\" component={Parametres} />\r\n            <Route\r\n              path=\"/app/ressources/AjouterRessource\"\r\n              component={AjouterRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/ModiferRessource/:id\"\r\n              component={ModiferRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/AfficherRessource/:id\"\r\n              component={AfficherRessource}\r\n            />\r\n\r\n            <Route\r\n              path=\"/app/prestations/AjouterPrestation\"\r\n              component={AjouterPrestation}\r\n            />\r\n            <Route\r\n              path=\"/app/prestations/ModiferPrestation/:id\"\r\n              component={ModiferPrestation}\r\n            />\r\n            {/* <Route\r\n              path=\"/app/prestations/AficherPrestation/:id\"\r\n              component={AfficherPrestation}\r\n            /> */}\r\n            <Route\r\n              path=\"/app/certifications/ListeCertifications\"\r\n              component={Certifications}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/AjouterCertification\"\r\n              component={AjouterCertification}\r\n            />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route path=\"/app/capabilites\" component={Capabilites} />\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <p>\r\n                {/* © Copyright 2022 DXC Technology Company. All rights reserved */}\r\n              </p>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["720"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    clients: [],\r\n    error: null,\r\n    loading: false,\r\n    client: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CLIENT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: [...state.clients, action.payload],\r\n        };\r\n      case ADD_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CLIENTS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          client: {},\r\n        };\r\n      case CLIENT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          clients: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          client: {},\r\n        };\r\n      case DOWNLOAD_CLIENT__ERROR:\r\n        return {\r\n          ...state,\r\n          clients: [],\r\n          loading: false,\r\n          error: true,\r\n          client: {},\r\n        };\r\n   \r\n      case CLIENT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          client: action.payload,\r\n        };\r\n      case CLIENT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CLIENT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: state.clients.map((client) =>\r\n            client.id === action.payload.id\r\n              ? (client = action.payload)\r\n              : client,\r\n          ),\r\n        };\r\n      case EDIT_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["721"],"import {\r\n    ADD_CONTRAT,\r\n    ADD_CONTRAT_SUCCESS,\r\n    ADD_CONTRAT_ERROR,\r\n    START_DOWNLOAD_CONTRATS,\r\n    CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CONTRAT__ERROR,\r\n    GET_CONTRAT_EDIT,\r\n    CONTRAT_EDIT_SUCCESS,\r\n    CONTRAT_EDIT_ERROR,\r\n    BEGIN_CONTRAT_EDIT,\r\n    EDITION_CONTRAT_SUCCESS,\r\n    EDIT_CONTRAT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    contrats: [],\r\n    error: null,\r\n    loading: false,\r\n    contrat: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CONTRAT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: [...state.contrats, action.payload],\r\n        };\r\n      case ADD_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CONTRATS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          contrat: {},\r\n        };\r\n      case CONTRAT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          contrats: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          contrat: {},\r\n        };\r\n      case DOWNLOAD_CONTRAT__ERROR:\r\n        return {\r\n          ...state,\r\n          contrats: [],\r\n          loading: false,\r\n          error: true,\r\n          contrat: {},\r\n        };\r\n      case GET_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case CONTRAT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrat: action.payload,\r\n        };\r\n      case CONTRAT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: state.contrats.map((contrat) =>\r\n            contrat.id === action.payload.id\r\n              ? (contrat = action.payload)\r\n              : contrat,\r\n          ),\r\n        };\r\n      case EDIT_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["722"],"import {\r\n  VALIDATE_FORM,\r\n  VALIDATE_FORM_SUCCESS,\r\n  VALIDATE_FORM_ERROR,\r\n} from \"../types\";\r\n\r\n//state principal\r\nconst initialState = {\r\n  error: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case VALIDATE_FORM:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["723"],"import {\r\n  ADD_RESSOURCE,\r\n  ADD_RESSOURCE_SUCCESS,\r\n  ADD_RESSOURCE_ERROR,\r\n  START_DOWNLOAD_RESSOURCES,\r\n  RESSOURCE_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_RESSOURCE__ERROR,\r\n  GET_RESSOURCE_REMOVE,\r\n  DELETE_RESSOURCE_SUCCESS,\r\n  DELETE_RESSOURCE_ERROR,\r\n  GET_RESSOURCE_EDIT,\r\n  RESSOURCE_EDIT_SUCCESS,\r\n  RESSOURCE_EDIT_ERROR,\r\n  BEGIN_RESSOURCE_EDIT,\r\n  EDITION_RESSOURCE_SUCCESS,\r\n  EDIT_RESSOURCE_ERROR,\r\n} from \"../types\";\r\n\r\n//chaque réducteur a son propre état\r\nconst initialState = {\r\n  ressources: [],\r\n  error: null,\r\n  loading: false,\r\n  ressource: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RESSOURCE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case ADD_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: [...state.ressources, action.payload],\r\n      };\r\n    case ADD_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case START_DOWNLOAD_RESSOURCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        //limpiar y reacrgar el productopara editar\r\n        ressource: {},\r\n      };\r\n    case RESSOURCE_DOWNLOAD_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        ressources: action.payload,\r\n        loading: false,\r\n        error: false,\r\n        ressource: {},\r\n      };\r\n    case DOWNLOAD_RESSOURCE__ERROR:\r\n      return {\r\n        ...state,\r\n        ressources: [],\r\n        loading: false,\r\n        error: true,\r\n        ressource: {},\r\n      };\r\n    case GET_RESSOURCE_REMOVE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case DELETE_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.filter(\r\n          (ressource) => ressource.id !== action.payload,\r\n        ),\r\n      };\r\n    case DELETE_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case GET_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case RESSOURCE_EDIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressource: action.payload,\r\n      };\r\n    case RESSOURCE_EDIT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case BEGIN_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDITION_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.map((ressource) =>\r\n          ressource.id === action.payload.id\r\n            ? (ressource = action.payload)\r\n            : ressource,\r\n        ),\r\n      };\r\n    case EDIT_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js",["724","725","726"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewcertificationAction } from \"../../services/Actions/certificationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AjouterCertification() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [code, setCode] = useState(\"\");\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [datecertification, setDatecertification] = useState(\"\");\r\n  const [niveau, setNiveau] = useState(\"\");\r\n  const [imageCertificat, setImageCertificat] = useState(\"\");\r\n  const [Img, setImg] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const [CodeEror, setCodeEror] = useState(\"\");\r\n  const [TitreEror, setTitreEror] = useState(\"\");\r\n  const [DateCertificationEror, setDateCertificationEror] = useState(\"\");\r\n  const [NiveauEror, setNiveauEror] = useState(\"\");\r\n  const [fileEror, setFileEror] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const addcertification = (certification) =>\r\n    dispatch(createNewcertificationAction(certification));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  //upload file\r\n  const uploadFile = (event) => {\r\n    event.preventDefault();\r\n    if (!file) {\r\n      setFileEror(\"Please upload a file.\");\r\n      return;\r\n    }\r\n\r\n    if (file.size >= 2000000) {\r\n      setFileEror(\"File size exceeds limit of 2MB.\");\r\n      return;\r\n    }\r\n    let data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"name\", file.name);\r\n    clienteAxios\r\n      .post(\"http://localhost:9001/files/addFile/1\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setFileEror(error);\r\n      });\r\n  };\r\n  // addnew certification\r\n  const submitNewCertification = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n    let codeEror = \"\";\r\n    let niveauEror = \"\";\r\n    let datecertificationEror = \"\";\r\n    let titreEror = \"\";\r\n\r\n    if (!code) {\r\n      codeEror = \"le champ code de la certification est obligatiore\";\r\n    }\r\n    if (!niveau) {\r\n      niveauEror = \"le champ Niveau de la certification est obligatiore\";\r\n    }\r\n    if (!datecertification) {\r\n      datecertificationEror = \"le champ date de certification est obligatiore\";\r\n    }\r\n    if (!titre) {\r\n      titreEror = \"le champ titre de la certification est obligatiore\";\r\n    }\r\n    if (codeEror || niveauEror || datecertificationEror || titreEror) {\r\n      setCodeEror(codeEror);\r\n      setTitreEror(titreEror);\r\n      setNiveauEror(niveauEror);\r\n      setDateCertificationEror(datecertificationEror);\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n    console.log(\"date\", datecertification.slice(0, 10));\r\n    const dates = {\r\n      dateCetification: moment(datecertification).format(\"yyyy-MM-DD\"),\r\n    };\r\n    let certification = {\r\n      code: code,\r\n      titre: titre,\r\n      niveau: niveau,\r\n      datecertification: dates.dateCetification,\r\n      ressourceid: 1,\r\n    };\r\n    uploadFile(e);\r\n    addcertification(certification);\r\n    // history.push(\"/app/certifications/ListeCertifications\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Ajouter une certification\" path=\"/app/certifications/ListeCertifications\"/>\r\n      <form onSubmit={submitNewCertification} className={classes.Form} >\r\n        <Grid container spacing={3} className={classes.GridForm}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Code\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={code}\r\n              onChange={(e) => {\r\n                setCode(e.target.value);\r\n                setCodeEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{CodeEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={titre}\r\n              onChange={(e) => {\r\n                setTitre(e.target.value);\r\n                setTitreEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{TitreEror}</div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              className={classes.textField}\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Niveau de maitrise\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"niveau\"\r\n              variant=\"outlined\"\r\n              value={niveau}\r\n              onChange={(e) => {\r\n                setNiveau(e.target.value);\r\n                setNiveauEror(\"\");\r\n              }}\r\n            >\r\n              <MenuItem key=\"0\" value=\"NE\">\r\n                NE - Non Exigé\r\n              </MenuItem>\r\n              <MenuItem key=\"1\" value=\"0\">\r\n                0 - pas de connaissances\r\n              </MenuItem>\r\n              <MenuItem key=\"2\" value=\"1\">\r\n                1 - connaissances théoriques\r\n              </MenuItem>\r\n              <MenuItem key=\"3\" value=\"2\">\r\n                2 - Basique\r\n              </MenuItem>\r\n              <MenuItem key=\"4\" value=\"3\">\r\n                3 - Maitrisé\r\n              </MenuItem>\r\n              <MenuItem key=\"5\" value=\"4\">\r\n                4 - Expert{\" \"}\r\n              </MenuItem>\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{NiveauEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}></Grid>\r\n          <Grid item xs={6}>\r\n            <label>Image de certification</label>\r\n            <TextField\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"file\"\r\n              id=\"upload-photo\"\r\n              selected={Img}\r\n              valur={imageCertificat}\r\n              onChange={(info) => {\r\n                setFile(info.target.files[0]);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{fileEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de certification</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              format=\"dd-MM-yyyy\"\r\n              type=\"date\"\r\n              valur={datecertification}\r\n              onChange={(e) => {\r\n                setDatecertification(e.target.value);\r\n                setDateCertificationEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateCertificationEror}</div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">La certif n'est pas ajouté!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["727","728","729"],"import React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport {\r\n  getCertificationAction,\r\n  getCertificationsAction,\r\n} from \"../../services/Actions/certificationsActions\";\r\n\r\nconst columns = [\r\n  { id: \"code\", label: \"Code\", minWidth: 100 },\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  {\r\n    id: \"datecertification\",\r\n    label: \"Date Certification\",\r\n    minWidth: 100,\r\n  },\r\n  { id: \"ressourceid\", label: \"Ressource id\", minWidth: 100 },\r\n  { id: \"niveau\", label: \"Niveau\", minWidth: 180 },\r\n  { id: \"validation\", label: \"Validation\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Certifications = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addCertification = () => {\r\n    let path = `/app/certifications/AjouterCertification`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadCertifications = () => dispatch(getCertificationsAction());\r\n    loadCertifications();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.certifications.loading);\r\n  const error = useSelector((state) => state.certifications.error);\r\n  const certifications = useSelector(\r\n    (state) => state.certifications.certifications,\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const EditCertif = (e) => {\r\n    let path = `/app/certifications/ModifierCertification/` + e;\r\n    history.push(path);\r\n  };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/certifications/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Certifications\" path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addCertification}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Certification\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {certifications\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              EditCertif(row.id);\r\n                            }}\r\n                          >\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={certifications.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js",["730","731"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"./Tabs\";\r\n// import './Competances.css';\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport CompetencesTransversales from \"./CompetencesTransversales.js\";\r\nimport CompetencesTechniques from \"./CompetencesTechniques.js\";\r\nimport CompetencesLinguistiques from \"./CompetencesLinguistiques.js\";\r\n\r\nexport default function Competances() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  function AjouteCompetance() {\r\n    history.push(\"/app/competances/ajouteCompetance\");\r\n  }\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Competances\"  path=\"/app/dashboard\"/>\r\n      <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteCompetance}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter Competance\r\n          </Button>\r\n        </div>\r\n        \r\n        <Tabs>\r\n        <div title=\"Competences Techniques \">\r\n       <CompetencesTechniques/>\r\n        </div>\r\n        <div title=\"Competences Transversales\">\r\n        <CompetencesTransversales/>\r\n        </div>\r\n        <div title=\"Competences Linguistiques\">\r\n        <CompetencesLinguistiques/>\r\n        </div>\r\n      </Tabs>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js",["732","733","734","735"],"import React, { useEffect, useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editCompetanceAction, getCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditCompetance(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialCompetanceState = {\r\n    id: null,\r\n    nomCompetance : \"\",\r\n    matriculeRessource : \"\",\r\n    nomRessource : \"\",\r\n    typeComp : \"\",\r\n    evaluationManager : \"\",\r\n    niveau : \"\"\r\n  };\r\n  const editCompetance = (Competance)=> dispatch(editCompetanceAction(Competance));\r\n  const [currentCompetance, setCurrentCompetance] = useState(initialCompetanceState);\r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const getCompetance = () => {\r\n    \r\n    axios\r\n    .get(`http://localhost:9005/DXC/competances/Competance/`+props.match.params.id)\r\n    .then((resp) => {\r\n      console.log(\"hhhhkldmdmmdm\",resp.data);\r\n      setCurrentCompetance(resp.data);\r\n      console.log(\"CurrentCompetance\",currentCompetance); })\r\n    .catch((error) => {\r\n      console.log(error);\r\n     \r\n    });\r\n  };\r\n\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidacion = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  useEffect(() => {\r\n    getCompetance(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentCompetance({ ...currentCompetance, [name]: value });\r\n  };\r\n\r\n\r\n  const updateContent = () => {\r\n    console.log(\"currentCompetance\",currentCompetance);\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      currentCompetance.nomCompetance.trim() === \"\" ||\r\n      currentCompetance.matriculeRessource.trim() === \"\" ||\r\n      currentCompetance.nomRessource.trim() === \"\" ||\r\n      currentCompetance.typeComp.trim() === \"\" ||\r\n      currentCompetance.evaluationManager.trim() === \"\" ||\r\n      currentCompetance.niveau.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidacion();\r\n\r\n    editCompetance(currentCompetance);\r\n         history.push(\"/app/competances/allCompetances\");\r\n      \r\n\r\n  };\r\n  function AnnulerCompetance() {\r\n    history.push(\"/app/competances/allCompetances\");\r\n  }\r\n  const niveaux = [\r\n   \r\n    {\r\n      label: \"NE - Non Exigé.\",\r\n      value: \"Non Exigé\",\r\n    },\r\n    {\r\n      label: \"0 - Pas de connaissances\",\r\n      value: \"Pas de connaissances\",\r\n    },\r\n    {\r\n      label: \"1 - Connaissances théoriques\",\r\n      value: \"Connaissances théoriques\",\r\n    },\r\n    {\r\n      label: \"2 - Basique\",\r\n      value: \"Basique\",\r\n    },\r\n    {\r\n      label: \"3 - Maitrisé \",\r\n      value: \"Maitrisé\",\r\n    },\r\n    {\r\n      label: \"4 - Expert\",\r\n      value: \"Expert\",\r\n    },\r\n  ];\r\n  const typesCompetances = [\r\n    {\r\n      label: \"Compétences techniques\",\r\n      value: \"Compétences techniques\",\r\n    },\r\n    {\r\n      label: \"Compétences transversales\",\r\n      value: \"Compétences transversales\",\r\n    },\r\n    {\r\n      label: \"Compétences linguistiques\",\r\n      value: \"Compétences linguistiques\",\r\n    },\r\n  \r\n  ];\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Modifier une Competance\" path=\"/app/competances/allCompetances\" />\r\n      </div>\r\n    \r\n      <form onSubmit={updateContent}className={classes.Form}>\r\n        <Grid container spacing={3}className={classes.GridForm}>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomRessource\"\r\n              label=\"Nom et prénom de ressource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"nomRessource\"\r\n              value={currentCompetance.nomRessource}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n    \r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-matriculeRessource\"\r\n              size=\"small\"\r\n              label=\"Matricule de ressource\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"matriculeRessource\"\r\n              value={currentCompetance.matriculeRessource}\r\n              onChange={handleInputChange}\r\n            \r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-typeComp\"\r\n              select\r\n              label=\"Type de compétence\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"typeComp\"\r\n              value={currentCompetance.typeComp}\r\n              onChange={handleInputChange}\r\n            >\r\n              {typesCompetances.map((typeCompetance) => (\r\n                <MenuItem value={typeCompetance.value}>{typeCompetance.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-nomCompetance\"\r\n              size=\"small\"\r\n              label=\"Intitulé de compétence\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"nomCompetance\"\r\n              value={currentCompetance.nomCompetance}\r\n              onChange={handleInputChange}\r\n             \r\n            />\r\n          </Grid>\r\n     \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-niveau\"\r\n              select\r\n              label=\"Niveau  de maitrise attendu\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"niveau\"\r\n              value={currentCompetance.niveau}\r\n              onChange={handleInputChange}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-evaluationManager\"\r\n              select\r\n              label=\"Evaluation de manager\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"evaluationManager\"\r\n              value={currentCompetance.evaluationManager}\r\n              onChange={handleInputChange}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={updateContent}\r\n            >\r\n              Modifier \r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\" \r\n              onClick={AnnulerCompetance}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCompetance;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["736","737","738","739"],"import React, { useEffect, useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nimport { getRessourceAction, getRessourcesAction } from \"../../services/Actions/ressourcesActions\";\r\nimport axios from \"axios\";\r\nfunction AjouteCompetance() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const loading = useSelector((state) => state.ressources.loading);\r\n  const ressources = useSelector((state) => state.ressources.ressources);\r\n  useEffect(() => {\r\n    const loadRessources = () => dispatch(getRessourcesAction());\r\n    loadRessources();\r\n  }, []);\r\n  const initialCompetanceState = {\r\n    id: null,\r\n    matriculeRessource: \"\",\r\n    nomRessource: \"\",\r\n    nomCompetance: \"\",\r\n    typeComp: \"\",\r\n    niveau: \"\",\r\n    evaluationManager: \"\",\r\n\r\n    matriculeRessourceEror: \"\",\r\n    nomRessourceEror: \"\",\r\n    nomCompetanceEror: \"\",\r\n    typeCompEror: \"\",\r\n    niveauEror: \"\",\r\n    evaluationManagerEror: \"\",\r\n  };\r\n  const [matriculeRessource, setMatriculeRessource] = useState(initialCompetanceState.matriculeRessource);\r\n  const [nomRessource, setNomRessource] = useState(initialCompetanceState.nomRessource);\r\n  const [nomCompetance, setNomCompetance] = useState(initialCompetanceState.nomCompetance);\r\n  const [typeComp, setTypeComp] = useState(initialCompetanceState.typeComp);\r\n  const [niveau, setNiveau] = useState(initialCompetanceState.niveau);\r\n  const [evaluationManager, setEvaluationManager] = useState(initialCompetanceState.evaluationManager);\r\n  \r\n  // Eror states\r\n  const [matriculeRessourceEror, setMatriculeRessourceEror] = useState(initialCompetanceState.matriculeRessourceEror);\r\n  const [nomRessourceEror, setNomRessourceEror] = useState(initialCompetanceState.nomRessourceEror);\r\n  const [nomCompetanceEror, setNomCompetanceEror] = useState(initialCompetanceState.nomCompetanceEror);\r\n  const [typeCompEror, setTypeCompEror] = useState(initialCompetanceState.typeCompEror);\r\n  const [niveauEror, setNiveauEror] = useState(initialCompetanceState.niveauEror);\r\n  const [evaluationManagerEror, setEvaluationManagerEror] = useState(initialCompetanceState.evaluationManagerEror);\r\n\r\n  \r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const addCompetance = (competance) =>\r\n    dispatch(createNewCompetanceAction(competance));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Competance\r\n  const submitNewCompetance = (e) => {\r\n    e.preventDefault();\r\n\r\n    let matriculeRessourceEror = \"\";\r\n    let nomRessourceEror = \"\";\r\n    let nomCompetanceEror = \"\";\r\n    let typeCompEror = \"\";\r\n    let niveauEror = \"\";\r\n    let evaluationManagerEror = \"\";\r\n\r\n\r\n    if (!matriculeRessource) {\r\n      matriculeRessourceEror = \"le champ de matricule ressource est obligatiore\";\r\n    }\r\n    if (!nomRessource) {\r\n      nomRessourceEror = \"le champ de nom de ressource  est obligatiore\";\r\n    }\r\n    if (!nomCompetance) {\r\n      nomCompetanceEror = \"le champ de nom competence est obligatiore\";\r\n    }\r\n    if (!typeComp) {\r\n      typeCompEror = \"le champ de type competence est obligatiore\";\r\n    }\r\n    if (!niveau) {\r\n      niveauEror = \"le champ  de nveau est obligatiore\";\r\n    }\r\n    if (!evaluationManager) {\r\n      evaluationManagerEror = \"le champ de evaluation Manager est obligatiore\";\r\n    }\r\n\r\n    if (\r\n      matriculeRessourceEror ||\r\n      nomRessourceEror ||\r\n      nomCompetanceEror ||\r\n      typeCompEror ||\r\n      niveauEror ||\r\n      evaluationManagerEror\r\n    ) {\r\n      setMatriculeRessourceEror(matriculeRessourceEror);\r\n      setNomRessourceEror(nomRessourceEror);\r\n      setNomCompetanceEror(nomCompetanceEror);\r\n      setTypeCompEror(typeCompEror);\r\n      setNiveauEror(niveauEror);\r\n      setEvaluationManagerEror(evaluationManagerEror);\r\n\r\n      errorValidacion();\r\n      return;\r\n    }\r\n\r\n\r\n    if (\r\n      matriculeRessource.trim() === \"\"||\r\n      nomRessource.trim() === \"\"||\r\n      nomCompetance.trim() === \"\"||\r\n      typeComp.trim() === \"\"||\r\n      nomCompetance.trim() === \"\"||\r\n      evaluationManager.trim() === \"\"||\r\n      niveau.trim() === \"\"\r\n   \r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Competance\r\n    let competance = {\r\n      nomCompetance : nomCompetance,\r\n      matriculeRessource : matriculeRessource,\r\n      nomRessource : nomRessource,\r\n      typeComp : typeComp,\r\n      evaluationManager : evaluationManager,\r\n      niveau : niveau\r\n      \r\n    };\r\n    addCompetance(competance);\r\n    history.push(\"/app/competances/allCompetances\");\r\n  };\r\n  \r\n  const niveaux = [\r\n   \r\n    {\r\n      label: \"NE - Non Exigé.\",\r\n      value: \"Non Exigé\",\r\n    },\r\n    {\r\n      label: \"0 - Pas de connaissances\",\r\n      value: \"Pas de connaissances\",\r\n    },\r\n    {\r\n      label: \"1 - Connaissances théoriques\",\r\n      value: \"Connaissances théoriques\",\r\n    },\r\n    {\r\n      label: \"2 - Basique\",\r\n      value: \"Basique\",\r\n    },\r\n    {\r\n      label: \"3 - Maitrisé \",\r\n      value: \"Maitrisé\",\r\n    },\r\n    {\r\n      label: \"4 - Expert\",\r\n      value: \"Expert\",\r\n    },\r\n  ];\r\n  const typesCompetances = [\r\n    {\r\n      label: \"Compétences techniques\",\r\n      value: \"Compétences techniques\",\r\n    },\r\n    {\r\n      label: \"Compétences transversales\",\r\n      value: \"Compétences transversales\",\r\n    },\r\n    {\r\n      label: \"Compétences linguistiques\",\r\n      value: \"Compétences linguistiques\",\r\n    },\r\n  \r\n  ];\r\n  const GetMatricul = (e) => {\r\n    console.log(\"fonction -----GetMatricul\")\r\n    axios\r\n      .get(\r\n        `http://localhost:9000/DXC/ressource/${e}`,\r\n      )\r\n      .then((resp) => {\r\n        console.log(\"matricule\", resp.data.matricule);\r\n        setMatriculeRessource(resp.data.matricule);\r\n        console.log(\"MatriculeRessource\", matriculeRessource);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  // const GetMatricul= (e)=>{\r\n  //   // e.preventDefault();\r\n  //   console.log(\"get matricul \", e);\r\n  //   getRessourceAction()\r\n  // //   .then((resp) => {\r\n  // //   setMatriculeRessource(resp.data.matricule);\r\n  // //   console.log(\"matriculeRessource------->\", matriculeRessource);\r\n  // // })\r\n  // }\r\n  const annuler = () => {\r\n    setNomRessource(initialCompetanceState.nomRessource);\r\n    setNomCompetance(initialCompetanceState.nomCompetance);\r\n    setMatriculeRessource(initialCompetanceState.matriculeRessource);\r\n    setNiveau(initialCompetanceState.niveau);\r\n    setEvaluationManager(initialCompetanceState.evaluationManager);\r\n    setTypeComp(initialCompetanceState.typeComp);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajouter une nouvelle compétence\" path=\"/app/competances/allCompetances\" />\r\n      </div>\r\n      {error ? (\r\n        <Alert severity=\"error\">La competance n'est pas ajouté!</Alert>\r\n      ) : null}\r\n      <form onSubmit={submitNewCompetance} className={classes.Form}>\r\n        <Grid container spacing={3}className={classes.GridForm}>\r\n          <Grid item xs={6}>\r\n          <TextField\r\n           id=\"outlined-nomRessource\"\r\n           label=\"Nom et prénom de ressource\"\r\n           select\r\n           size=\"small\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n           value={nomRessource}\r\n           onChange={(e) =>{ setNomRessource(e.target.value);\r\n            GetMatricul(e.target.value);\r\n            setNomRessourceEror(initialCompetanceState.nomRessourceEror);}}\r\n          >\r\n          {ressources.map((ressource) => (\r\n            <MenuItem value={ressource.matricule}>{ressource.firstName}{ressource.lastName}</MenuItem>\r\n          ))}\r\n          </TextField>\r\n            <div style={{ color: \"red\" }}>{nomRessourceEror}</div>\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-matriculeRessource\"\r\n              label=\"Matricule de ressource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={matriculeRessource}\r\n              onChange={(e) =>{ setMatriculeRessource(e.target.value);\r\n                setMatriculeRessourceEror(initialCompetanceState.matriculeRessourceEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{matriculeRessourceEror}</div>\r\n            \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-typeComp\"\r\n              label=\"Type de compétence\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={typeComp}\r\n              onChange={(e) =>{ setTypeComp(e.target.value);\r\n                setTypeCompEror(initialCompetanceState.typeCompEror);}}\r\n            >\r\n              {typesCompetances.map((typeCompetance) => (\r\n                <MenuItem value={typeCompetance.value}>{typeCompetance.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{typeCompEror}</div>\r\n          </Grid>\r\n          \r\n\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-nomCompetance\"\r\n              label=\"Intitulé de compétence\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nomCompetance}\r\n            onChange={(e) =>{ setNomCompetance(e.target.value);\r\n                setNomCompetanceEror(initialCompetanceState.nomCompetanceEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{nomCompetanceEror}</div>\r\n          </Grid>\r\n\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-niveau\"\r\n              select\r\n              label=\"Niveau  de maitrise attendu \"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={niveau}\r\n           \r\n               onChange={(e) =>{ setNiveau(e.target.value);\r\n              setNiveauEror(initialCompetanceState.niveauEror);}}\r\n            >\r\n           \r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{niveauEror}</div>\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-evaluationManager\"\r\n              select\r\n              label=\"Evaluation de manager\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={evaluationManager}\r\n              onChange={(e) =>{ setEvaluationManager(e.target.value);\r\n                setEvaluationManagerEror(initialCompetanceState.nevaluationManagerEror);}}\r\n              >\r\n             \r\n          \r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{evaluationManagerEror}</div>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </form>\r\n      <div className={classes.buttons}  >\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewCompetance}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteCompetance;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["740"],"import React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getRessourcesAction } from \"../../services/Actions/ressourcesActions\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  // { id: \"matricule\", label: \"Matricule\", minWidth: 100 },\r\n  { id: \"status\", label: \"Status\", minWidth: 80 },\r\n  { id: \"firstName\", label: \"Nom\", minWidth: 80 },\r\n  { id: \"lastName\", label: \"Prénom\", minWidth: 80 },\r\n  { id: \"genre\", label: \"Genre\", minWidth: 80 },\r\n  { id: \"dateAmbauche\", label: \"Date d'ambauche\", minWidth: 180 },\r\n  { id: \"dateNaissance\", label: \"Date de naissance\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Ressources = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addRessource = () => {\r\n    let path = `/app/ressources/AjouterRessource`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    //productos cuando el componente este listo\r\n    const loadRessours = () => dispatch(getRessourcesAction());\r\n    loadRessours();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.ressources.loading);\r\n  const error = useSelector((state) => state.ressources.error);\r\n  const ressources = useSelector((state) => state.ressources.ressources);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const EditRessource = (e) => {\r\n    console.log(\"------>\", e);\r\n    let path = `/app/ressources/ModiferRessource/` + e;\r\n    history.push(path);\r\n  };\r\n  // const ViewRessource = (e) => {\r\n  //   let path = `/app/ressources/AfficherRessurce/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connexion...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Ressources\" path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addRessource}\r\n          >\r\n            <AddIcon></AddIcon>\r\n            Ajouter Ressource\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ressources\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              EditRessource(row.matricule);\r\n                            }}\r\n                          >\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={ressources.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ressources;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js",["741","742"],"import React, { useEffect, useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { editClientAction } from \"../../services/Actions/clientActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction EditClient(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialClientState = {\r\n    id: null,\r\n    nomClient: \"\",\r\n    market: \"\"\r\n  };\r\n  const editClient = (Client)=> dispatch(editClientAction(Client));\r\n  const [currentClient, setCurrentClient] = useState(initialClientState);\r\n\r\n\r\n // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const getClient = () => {\r\n    axios\r\n    .get(`http://localhost:9004/DXC/clients/Client/`+props.match.params.id)\r\n    .then((resp) => {\r\n      console.log(\"hhhhkldmdmmdm\",resp.data);\r\n      setCurrentClient(resp.data);\r\n      console.log(\"CurrentClient\",currentClient); })\r\n    .catch((error) => {\r\n      console.log(error);\r\n     \r\n    });\r\n  };\r\n\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidacion = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  useEffect(() => {\r\n    getClient(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentClient({ ...currentClient, [name]: value });\r\n  };\r\n\r\n\r\n  const updateContent = () => {\r\n    console.log(\"currentClient\",currentClient);\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      currentClient.nomClient.trim() === \"\" ||\r\n      currentClient.market.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidacion();\r\n\r\n    editClient(currentClient);\r\n         history.push(\"/app/prestations/clients\");\r\n      \r\n\r\n  };\r\n  function AnnulerClient() {\r\n    history.push(\"/app/prestations/clients\");\r\n  }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div>\r\n          <PageTitle title=\"Modifier un client\" path=\"/app/prestations/clients\"/>\r\n        </div>\r\n        \r\n        <form onSubmit={updateContent}className={classes.Form}>\r\n        <Grid container spacing={3} className={classes.GridForm}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Client\"\r\n              name=\"nomClient\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentClient.nomClient}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"market\"\r\n              name=\"market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentClient.market}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n           \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={updateContent}\r\n            >\r\n              Modifier \r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\" \r\n              onClick={AnnulerClient}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EditClient;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["743","744","745","746"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, MenuItem } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewContratAction } from \"../../services/Actions/contratActions\";\r\nimport { getClientsAction } from \"../../services/Actions/clientActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteContrat() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const loading = useSelector((state) => state.clients.loading);\r\n  const clients = useSelector((state) => state.clients.clients);\r\n  useEffect(() => {\r\n    const loadClients = () => dispatch(getClientsAction());\r\n    loadClients();\r\n  }, []);\r\n  const initialContratState = {\r\n    id: null,\r\n    nomContrat: \"\",\r\n    nomClient: \"\",\r\n    type: \"\",\r\n    description: \"\",\r\n    dateDebut:\"\",\r\n    dateFin:\"\",\r\n  \r\n    nomClientEror: \"\",\r\n    nomContrateEror: \"\",\r\n    typeEror: \"\",\r\n    descriptionEror: \"\",\r\n    dateDebutEror:\"\",\r\n    dateFinEror:\"\",\r\n   };\r\n   \r\n  const [nomContrat, setNomContrat] = useState(initialContratState.nomContrat);\r\n  const [nomClient, setNomClient] = useState(initialContratState.nomClient);\r\n  const [type, setType] = useState(initialContratState.type);\r\n  const [description, setDescription] = useState(initialContratState.description);\r\n  const [dateDebut, setDateDebut] =useState(initialContratState.dateDebut);\r\n  const [dateFin, setDateFin] = useState(initialContratState);\r\n\r\n  // Eror states\r\n  const [nomContratEror, setNomContratEror] = useState(initialContratState.nomContratEror);\r\n  const [nomClientEror, setNomClientEror] = useState(initialContratState.nomClientEror);\r\n  const [typeEror, setTypeEror] = useState(initialContratState.typeEror);\r\n  const [descriptionEror, setDescriptionEror] = useState(initialContratState.descriptionEror);\r\n  const [dateDebutEror, setDateDebutEror] = useState(initialContratState.dateDebutEror);\r\n  const [dateFinEror, setDateFinEror] = useState(initialContratState.dateFinEror);\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const addContrat = (contrat) =>\r\n    dispatch(createNewContratAction(contrat));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew contrat\r\n  const submitNewContrat = (e) => {\r\n    e.preventDefault();\r\n    validarForm();\r\n    let nomContratEror = \"\";\r\n    let nomClientEror = \"\";\r\n    let typeEror = \"\";\r\n    let descriptionEror = \"\";\r\n    let dateDebutEror =\"\";\r\n    let dateFinEror =\"\";\r\n    \r\n\r\n\r\n    if (!nomContrat) {\r\n      nomContratEror = \"le champ de nom de contrat est obligatiore\";\r\n    }\r\n    if (!nomClient) {\r\n      nomClientEror = \"le champ de nom de client  est obligatiore\";\r\n    }\r\n    if (!type) {\r\n      typeEror = \"le champ de type de contrat  est obligatiore\";\r\n    }\r\n    if (!description) {\r\n      descriptionEror = \"le champ de description est obligatiore\";\r\n    }\r\n    if (!dateDebut) {\r\n      dateDebutEror = \"le champ de date Debut de le contrat est obligatiore\";\r\n    }\r\n    if (!dateFin) {\r\n      dateFinEror = \"le champ de date fin de le contrat  est obligatiore\";\r\n    }\r\n\r\n   \r\n\r\n    if (\r\n      nomContratEror ||\r\n      nomClientEror ||\r\n      typeEror ||\r\n      descriptionEror ||\r\n      dateDebutEror ||\r\n      dateFinEror \r\n       \r\n    ) {\r\n      setNomContratEror(nomContratEror);\r\n      setNomClientEror(nomClientEror);\r\n      setTypeEror(typeEror);\r\n      setDescriptionEror(descriptionEror);\r\n      setDateDebutEror(dateDebutEror);\r\n      setDateFinEror(dateFinEror);\r\n    }\r\n    if (\r\n      nomContrat.trim() === \"\" ||\r\n      nomClient.trim() === \"\" ||\r\n      type.trim() === \"\" ||\r\n      description.trim() === \"\" ||\r\n      dateDebut.trim() === \"\" ||\r\n      dateFin.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau contrat\r\n    let contrat = {\r\n      nomContrat : nomContrat,\r\n      nomClient : nomClient,\r\n      type : type,\r\n      description :description,\r\n      dateDebut :dateDebut,\r\n      dateFin :dateFin,\r\n      \r\n    };\r\n    \r\n    addContrat(contrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n \r\n  const AnnulerContrat = () => {\r\n    setNomContrat(initialContratState.nomContrat);\r\n    setNomClient(initialContratState.nomClient);\r\n    setType(initialContratState.type);\r\n    setDescription(initialContratState.description);\r\n    setDateDebut(initialContratState.dateDebut);\r\n    setDateFin(initialContratState.dateFin);\r\n  \r\n    \r\n  };\r\n  const types = [\r\n    {\r\n      label: \"Run\",\r\n      value: \"Run\",\r\n    },\r\n    {\r\n      label: \"Projet\",\r\n      value: \"Projet\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajouter un nouveau contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={submitNewContrat} className={classes.Form} >\r\n        <Grid container spacing={3} className={classes.GridForm}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nomContrat}\r\n                   onChange={(e) =>{ setNomContrat(e.target.value);\r\n                setNomContratEror(initialContratState.nomContratEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{nomContratEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={type}\r\n              onChange={(e) => {\r\n                setType(e.target.value);\r\n                setTypeEror(initialContratState.typeEror);\r\n              }}\r\n            >\r\n              {types.map((type) => (\r\n                <MenuItem key={type.value} value={type.value}>\r\n                  {type.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{typeEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <TextField\r\n          id=\"outlined-nomClient\"\r\n          label=\"Nom de Client\"\r\n          select\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={nomClient}\r\n          onChange={(e) =>{ setNomClient(e.target.value);\r\n            setNomClientEror(initialContratState.nomClientEror);}}\r\n          >\r\n          {clients.map((client) => (\r\n            <MenuItem value={client.id}>{client.nomClient}</MenuItem>\r\n          ))}\r\n          </TextField>\r\n          <div style={{ color: \"red\" }}>{nomClientEror}</div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={description}\r\n              onChange={(e) =>{ setDescription(e.target.value);\r\n                setDescriptionEror(initialContratState.descriptionEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{descriptionEror}</div>\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              format=\"MM/dd/yyyy\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              value={dateDebut}\r\n              onChange={(e) =>{ setDateDebut(e.target.value);\r\n                setDateDebutEror(initialContratState.dateDebutEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{dateDebutEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              format=\"MM/dd/yyyy\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={dateFin}\r\n              onChange={(e) =>{ setDateFin(e.target.value);\r\n                setDateFinEror(initialContratState.dateFinEror);}}\r\n              />\r\n              <div style={{ color: \"red\" }}>{dateFinEror}</div>\r\n            \r\n          </Grid>\r\n          \r\n        \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewContrat}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",["747","748","749"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editRessourceAction } from \"../../services/Actions/ressourcesActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function ModiferRessource({ match }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialRessourceState = {\r\n    matricule: \"\",\r\n    prenom: \"\",\r\n    nom: \"\",\r\n    dateAmbauche: \"\",\r\n    dateNaissance: \"\",\r\n    status: \"\",\r\n    genre: \"\",\r\n    profil: \"\",\r\n  };\r\n  // Ressource\r\n  const dispatch = useDispatch();\r\n  const editRessource = (ressource) => dispatch(editRessourceAction(ressource));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  const [ressourcedate, setRessourcedate] = useState(initialRessourceState);\r\n\r\n  const [MatriculeEror, setMatriculeEror] = useState(\"\");\r\n  const [StatusEror, setStatusEror] = useState(\"\");\r\n  const [PrenomEror, setPrenomEror] = useState(\"\");\r\n  const [NomEror, setNomEror] = useState(\"\");\r\n  const [GenreEror, setGenreEror] = useState(\"\");\r\n  const [DateAmbaucheEror, setDateAmbaucheEror] = useState(\"\");\r\n  const [DateNaissanceEror, setDateNaissanceEror] = useState(\"\");\r\n  const [ProfilEror, setProfilEror] = useState(\"\");\r\n\r\n  const { matricule } = match.params.id;\r\n\r\n  useEffect(() => {\r\n    clienteAxios\r\n      .get(`http://localhost:9000/DXC/ressource/${match.params.id}`)\r\n      .then((resp) => {\r\n        setRessourcedate(resp.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // dispatch(getRessourceAction(matricule));\r\n  }, [matricule]);\r\n\r\n  // const ressource = useSelector((state) => state.Ressources.Ressource);\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  const submitEditRessource = (e) => {\r\n    e.preventDefault();\r\n\r\n    let matriculeEror = \"\";\r\n    let statusEror = \"\";\r\n    let genreEror = \"\";\r\n    let nomEror = \"\";\r\n    let prenomEror = \"\";\r\n    let profilEror = \"\";\r\n    let dateNaissanceEror = \"\";\r\n    let dateAmbaucheEror = \"\";\r\n\r\n    if (!ressourcedate.matricule) {\r\n      matriculeEror = \"le champ Matricule de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.status) {\r\n      statusEror = \"le champ Status de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.genre) {\r\n      genreEror = \"le champ Genre de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.dateAmbauche) {\r\n      dateAmbaucheEror =\r\n        \"le champ Date d'ambauche de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.dateNaissance) {\r\n      dateNaissanceEror =\r\n        \"le champ Date de naissance de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.profil) {\r\n      profilEror = \"le champ Profil de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.firstName) {\r\n      nomEror = \"le champ Nom de la ressource est obligatiore\";\r\n    }\r\n    if (!ressourcedate.lastName) {\r\n      prenomEror = \"le champ Prénom de la ressource est obligatiore\";\r\n    }\r\n\r\n    if (\r\n      matriculeEror ||\r\n      nomEror ||\r\n      statusEror ||\r\n      dateAmbaucheEror ||\r\n      dateNaissanceEror ||\r\n      genreEror ||\r\n      profilEror ||\r\n      prenomEror\r\n    ) {\r\n      setMatriculeEror(matriculeEror);\r\n      setNomEror(nomEror);\r\n      setPrenomEror(prenomEror);\r\n      setDateAmbaucheEror(dateAmbaucheEror);\r\n      setDateNaissanceEror(dateNaissanceEror);\r\n      setStatusEror(statusEror);\r\n      setGenreEror(genreEror);\r\n      setProfilEror(profilEror);\r\n\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n    let ressource = {\r\n      matricule: ressourcedate.matricule,\r\n      status: ressourcedate.status,\r\n      genre: ressourcedate.genre,\r\n      dateNaissance: ressourcedate.dateNaissance,\r\n      lastName: ressourcedate.nom,\r\n      firstName: ressourcedate.prenom,\r\n      dateAmbauche: ressourcedate.dateAmbauche,\r\n      techno: forms,\r\n      methodes: formsMethodes,\r\n      outils: formsOutils,\r\n    };\r\n    console.log(\"ressource\", ressource);\r\n    editRessource(ressource);\r\n\r\n    history.push(\"/app/prestations/ressources\");\r\n  };\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setRessourcedate({ ...ressourcedate, [name]: value });\r\n  };\r\n  const annuler = () => {\r\n    let path = `/app/prestations/ressources`;\r\n    history.push(path);\r\n  };\r\n\r\n  const status = [\r\n    {\r\n      label: \"recrutement\",\r\n      value: \"recrutement\",\r\n    },\r\n    {\r\n      label: \"Salarié\",\r\n      value: \"Salarié\",\r\n    },\r\n    {\r\n      label: \"Contractant\",\r\n      value: \"Contractant\",\r\n    },\r\n    {\r\n      label: \"inactif\",\r\n      value: \"inactif\",\r\n    },\r\n  ];\r\n\r\n  const profiles = [\r\n    {\r\n      label: \"Entry\",\r\n      value: \"Entry\",\r\n    },\r\n    {\r\n      label: \"Intermediate\",\r\n      value: \"Intermediate\",\r\n    },\r\n    {\r\n      label: \"Specialist\",\r\n      value: \"Specialist\",\r\n    },\r\n    {\r\n      label: \"Referent\",\r\n      value: \"Referent\",\r\n    },\r\n    {\r\n      label: \"Expert\",\r\n      value: \"Expert\",\r\n    },\r\n    {\r\n      label: \"Master\",\r\n      value: \"Master\",\r\n    },\r\n  ];\r\n  const technosForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n  const methodesForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n  const outilsForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n\r\n  const [forms, setForms] = useState([]);\r\n  const [formsMethodes, setFormsMethodes] = useState([]);\r\n  const [formsOutils, setFormsOutils] = useState([]);\r\n\r\n  const handleInputChangeForms = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setForms(\r\n      forms.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n\r\n  const addForm = () => {\r\n    setForms([...forms, technosForm]);\r\n  };\r\n\r\n  const handleInputChangeMethodes = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setFormsMethodes(\r\n      formsMethodes.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n  const addFormMethodes = () => {\r\n    setFormsMethodes([...formsMethodes, methodesForm]);\r\n  };\r\n\r\n  const handleInputChangeOutils = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setFormsOutils(\r\n      formsOutils.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n  const addFormOutils = () => {\r\n    setFormsOutils([...formsOutils, outilsForm]);\r\n  };\r\n\r\n  const remove = (i) => {\r\n    console.log(forms);\r\n    setForms(forms.filter((el, id) => id !== i));\r\n  };\r\n  const removeOutil = (i) => {\r\n    setFormsOutils(formsOutils.filter((el, id) => id !== i));\r\n  };\r\n  const removeMethode = (i) => {\r\n    setFormsMethodes(formsMethodes.filter((el, id) => id !== i));\r\n  };\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer Ressource\" path=\"/app/prestations/ressources\" />\r\n      <form onSubmit={submitEditRessource}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Matricule\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"matricule\"\r\n              value={ressourcedate.matricule}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setMatriculeEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{MatriculeEror}</div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Prénom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"firstName\"\r\n              value={ressourcedate.firstName}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setNomEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{NomEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Nom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"lastName\"\r\n              value={ressourcedate.lastName}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setPrenomEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{PrenomEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              select\r\n              label=\"Genre\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"genre\"\r\n              variant=\"outlined\"\r\n              value={ressourcedate.genre}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setGenreEror(\"\");\r\n              }}\r\n            >\r\n              <MenuItem key=\"1\" value=\"homme\">\r\n                Homme\r\n              </MenuItem>\r\n              <MenuItem key=\"2\" value=\"femme\">\r\n                Femme\r\n              </MenuItem>\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{GenreEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              select\r\n              label=\"Status\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              valur={ressourcedate.profil}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setStatusEror(\"\");\r\n              }}\r\n            >\r\n              {status.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{StatusEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              select\r\n              label=\"Profil de facturation\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"profil\"\r\n              variant=\"outlined\"\r\n              valur={ressourcedate.profil}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setProfilEror(\"\");\r\n              }}\r\n            >\r\n              {profiles.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{ProfilEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date d'ambauche</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              format=\"MM/DD/YYYY\"\r\n              fullWidth\r\n              type=\"date\"\r\n              name=\"dateAmbauche\"\r\n              value={ressourcedate.dateAmbauche}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setDateAmbaucheEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateAmbaucheEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Naissance</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"dateNaissance\"\r\n              value={ressourcedate.dateNaissance}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setDateNaissanceEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateNaissanceEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addForm}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter une Technologie\r\n          </Grid>\r\n\r\n          {forms.map((form, i) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <b className={classes.Btext}> Technologie {i + 1}:</b>\r\n                <br />\r\n                <hr className={classes.hr}></hr>\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Technologies\"\r\n                  size=\"small\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={form.name}\r\n                  onChange={(e) => handleInputChangeForms(e, i)}\r\n                />\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  label=\"Niveau de maitrise\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"niveau\"\r\n                  variant=\"outlined\"\r\n                  value={form.niveau}\r\n                  onChange={(e) => handleInputChangeForms(e, i)}\r\n                >\r\n                  <MenuItem key=\"0\" value=\"NE\">\r\n                    NE - Non Exigé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"1\" value=\"0\">\r\n                    0 - pas de connaissances\r\n                  </MenuItem>\r\n                  <MenuItem key=\"2\" value=\"1\">\r\n                    1 - connaissances théoriques\r\n                  </MenuItem>\r\n                  <MenuItem key=\"3\" value=\"2\">\r\n                    2 - Basique\r\n                  </MenuItem>\r\n                  <MenuItem key=\"4\" value=\"3\">\r\n                    3 - Maitrisé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"5\" value=\"4\">\r\n                    4 - Expert{\" \"}\r\n                  </MenuItem>\r\n                </TextField>\r\n                <br />\r\n                <IconButton aria-label=\"delete\" onClick={() => remove(i)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addFormMethodes}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter une Méthode\r\n          </Grid>\r\n\r\n          {formsMethodes.map((form, i) => {\r\n            return (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <b className={classes.Btext}> Méthodes {i + 1}:</b>\r\n                  <br />\r\n                  <hr className={classes.hr}></hr>\r\n                  <br />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Méthode\"\r\n                    size=\"small\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={form.name}\r\n                    onChange={(e) => handleInputChangeMethodes(e, i)}\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    label=\"Niveau de maitrise\"\r\n                    size=\"small\"\r\n                    name=\"niveau\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={form.niveau}\r\n                    onChange={(e) => handleInputChangeMethodes(e, i)}\r\n                  >\r\n                    <MenuItem key=\"0\" value=\"NE\">\r\n                      NE - Non Exigé\r\n                    </MenuItem>\r\n                    <MenuItem key=\"1\" value=\"0\">\r\n                      0 - pas de connaissances\r\n                    </MenuItem>\r\n                    <MenuItem key=\"2\" value=\"1\">\r\n                      1 - connaissances théoriques\r\n                    </MenuItem>\r\n                    <MenuItem key=\"3\" value=\"2\">\r\n                      2 - Basique\r\n                    </MenuItem>\r\n                    <MenuItem key=\"4\" value=\"3\">\r\n                      3 - Maitrisé\r\n                    </MenuItem>\r\n                    <MenuItem key=\"5\" value=\"4\">\r\n                      4 - Expert{\" \"}\r\n                    </MenuItem>\r\n                  </TextField>\r\n                  <br />\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => removeMethode(i)}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            );\r\n          })}\r\n\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addFormOutils}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter un outil\r\n          </Grid>\r\n\r\n          {formsOutils.map((form, i) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <b className={classes.Btext}> Outil {i + 1}:</b>\r\n                <br />\r\n                <hr className={classes.hr}></hr>\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Outil\"\r\n                  size=\"small\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={form.name}\r\n                  onChange={(e) => handleInputChangeOutils(e, i)}\r\n                />\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  label=\"Niveau de maitrise\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"niveau\"\r\n                  variant=\"outlined\"\r\n                  value={form.niveau}\r\n                  onChange={(e) => handleInputChangeOutils(e, i)}\r\n                >\r\n                  <MenuItem key=\"0\" value=\"NE\">\r\n                    NE - Non Exigé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"1\" value=\"0\">\r\n                    0 - pas de connaissances\r\n                  </MenuItem>\r\n                  <MenuItem key=\"2\" value=\"1\">\r\n                    1 - connaissances théoriques\r\n                  </MenuItem>\r\n                  <MenuItem key=\"3\" value=\"2\">\r\n                    2 - Basique\r\n                  </MenuItem>\r\n                  <MenuItem key=\"4\" value=\"3\">\r\n                    3 - Maitrisé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"5\" value=\"4\">\r\n                    4 - Expert\r\n                  </MenuItem>\r\n                </TextField>\r\n                <br />\r\n                <IconButton aria-label=\"delete\" onClick={() => removeOutil(i)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            );\r\n          })}\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Modifer\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["750"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, MenuItem } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewClientAction } from \"../../services/Actions/clientActions\";\r\nimport {\r\n  validacionError,\r\n  validationSuccess,\r\n  validarFormularioAction,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteClient() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialClientState = {\r\n    id: null,\r\n    nomClient: \"\",\r\n    label: \"\",\r\n    market: \"\",\r\n\r\n    nomClientEror: \"\",\r\n    labelEror: \"\",\r\n    marketEror: \"\",\r\n  };\r\n  const [nomClient, setNomClient] = useState(initialClientState.nomClient);\r\n  const [market, setMarket] = useState(initialClientState.market);\r\n  const [label, setLabel] = useState(initialClientState.label);\r\n\r\n  // Eror states\r\n  const [nomClientEror, setNomClientEror] = useState(\r\n    initialClientState.nomClientEror,\r\n  );\r\n  const [marketEror, setMarketEror] = useState(initialClientState.marketEror);\r\n  const [labelEror, setLabelEror] = useState(initialClientState.labelEror);\r\n  // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const addClient = (client) => dispatch(createNewClientAction(client));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Client\r\n  const submitNewClient = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n    let nomClientEror = \"\";\r\n    let labelEror = \"\";\r\n    let marketEror = \"\";\r\n\r\n    if (!nomClient) {\r\n      nomClientEror = \"le champ de nom de client  est obligatiore\";\r\n    }\r\n    if (!label) {\r\n      labelEror = \"le champ de label  est obligatiore\";\r\n    }\r\n    if (!market) {\r\n      marketEror = \"le champ de market est obligatiore\";\r\n    }\r\n\r\n    if (nomClientEror || labelEror || marketEror) {\r\n      setNomClientEror(nomClientEror);\r\n      setLabelEror(labelEror);\r\n      setMarketEror(marketEror);\r\n    }\r\n    if (\r\n      nomClient.trim() === \"\" ||\r\n      market.trim() === \"\" ||\r\n      label.trim() === \"\"\r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Client\r\n    let client = {\r\n      nomClient: nomClient,\r\n      market: market,\r\n      label: label,\r\n    };\r\n    addClient(client);\r\n    history.push(\"/app/prestations/clients\");\r\n  };\r\n  const AnnulerClient = () => {\r\n    setNomClient(initialClientState.nomClient);\r\n    setLabel(initialClientState.label);\r\n    setMarket(initialClientState.market);\r\n  };\r\n\r\n  const markets = [\r\n    {\r\n      label: \"Offshore \",\r\n      value: \"offshore \",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Client\" path=\"/app/prestations/clients\" />\r\n      </div>\r\n      <form onSubmit={submitNewClient} className={classes.Form}>\r\n        <Grid container spacing={3} className={classes.GridForm}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nomClient}\r\n              onChange={(e) => {\r\n                setNomClient(e.target.value);\r\n                setNomClientEror(initialClientState.nomClientEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{nomClientEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-market\"\r\n              label=\"Market\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={market}\r\n              onChange={(e) => {\r\n                setMarket(e.target.value);\r\n                setMarketEror(initialClientState.marketEror);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{marketEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-label\"\r\n              label=\"Label\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={label}\r\n              onChange={(e) => {\r\n                setLabel(e.target.value);\r\n                setLabelEror(initialClientState.labelEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{labelEror}</div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          className={classes.btnAjouter}\r\n          color=\"primary\"\r\n          onClick={submitNewClient}\r\n        >\r\n          Ajouter\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          className={classes.btnAnnuler}\r\n          color=\"secondary\"\r\n          onClick={AnnulerClient}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteClient;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",["751","752"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Box, Button, IconButton } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewRessourceAction } from \"../../services/Actions/ressourcesActions\";\r\nimport {\r\n  validacionError,\r\n  validationSuccess,\r\n  validarFormularioAction,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function AjouterRessource() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Matricule, setMatricule] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Prenom, setPrenom] = useState(\"\");\r\n  const [Nom, setNom] = useState(\"\");\r\n  const [Genre, setGenre] = useState(\"\");\r\n  const [DateAmbauche, setDateAmbauche] = useState(\"\");\r\n  const [DateNaissance, setDateNaissance] = useState(\"\");\r\n  const [Profil, setProfil] = useState(\"\");\r\n\r\n  const [MatriculeEror, setMatriculeEror] = useState(\"\");\r\n  const [StatusEror, setStatusEror] = useState(\"\");\r\n  const [PrenomEror, setPrenomEror] = useState(\"\");\r\n  const [NomEror, setNomEror] = useState(\"\");\r\n  const [GenreEror, setGenreEror] = useState(\"\");\r\n  const [DateAmbaucheEror, setDateAmbaucheEror] = useState(\"\");\r\n  const [DateNaissanceEror, setDateNaissanceEror] = useState(\"\");\r\n  const [ProfilEror, setProfilEror] = useState(\"\");\r\n\r\n  const [FormsEror, setFormsEror] = useState(\"\");\r\n  const [FormsMethodesEror, setFormsMethodesEror] = useState(\"\");\r\n  const [FormsOutilsEror, setFormsOutilsEror] = useState(\"\");\r\n\r\n  const [forms, setForms] = useState([]);\r\n  const [formsMethodes, setFormsMethodes] = useState([]);\r\n  const [formsOutils, setFormsOutils] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const addRessource = (ressource) =>\r\n    dispatch(createNewRessourceAction(ressource));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  const error = useSelector((state) => state.error.error);\r\n  const submitNewRessource = (e) => {\r\n    e.preventDefault();\r\n    let matriculeEror = \"\";\r\n    let statusEror = \"\";\r\n    let genreEror = \"\";\r\n    let nomEror = \"\";\r\n    let prenomEror = \"\";\r\n    let profilEror = \"\";\r\n    let dateNaissanceEror = \"\";\r\n    let dateAmbaucheEror = \"\";\r\n    let formsEror = \"\";\r\n    let formsMethodesEror = \"\";\r\n    let formsOutilsEror = \"\";\r\n\r\n    if (!Matricule) {\r\n      matriculeEror = \"le champ Matricule de la ressource est obligatiore\";\r\n    }\r\n    if (!Status) {\r\n      statusEror = \"le champ Status de la ressource est obligatiore\";\r\n    }\r\n    if (!Genre) {\r\n      genreEror = \"le champ Genre de la ressource est obligatiore\";\r\n    }\r\n    if (!DateAmbauche) {\r\n      dateAmbaucheEror =\r\n        \"le champ Date d'ambauche de la ressource est obligatiore\";\r\n    }\r\n    if (!DateNaissance) {\r\n      dateNaissanceEror =\r\n        \"le champ Date de naissance de la ressource est obligatiore\";\r\n    }\r\n    if (!Profil) {\r\n      profilEror = \"le champ Profil de la ressource est obligatiore\";\r\n    }\r\n    if (!Nom) {\r\n      nomEror = \"le champ Nom de la ressource est obligatiore\";\r\n    }\r\n    if (!Prenom) {\r\n      prenomEror = \"le champ Prénom de la ressource est obligatiore\";\r\n    }\r\n    if (!forms) {\r\n      formsEror = \"le champ Technologie de la ressource est obligatiore\";\r\n    }\r\n    if (!formsMethodes) {\r\n      formsMethodesEror = \"le champ Méthode de la ressource est obligatiore\";\r\n    }\r\n    if (!formsOutils) {\r\n      formsOutilsEror = \"le champ Outils de la ressource est obligatiore\";\r\n    }\r\n\r\n    if (\r\n      matriculeEror ||\r\n      nomEror ||\r\n      statusEror ||\r\n      dateAmbaucheEror ||\r\n      dateNaissanceEror ||\r\n      genreEror ||\r\n      profilEror ||\r\n      prenomEror ||\r\n      formsEror ||\r\n      formsMethodesEror ||\r\n      formsOutilsEror\r\n    ) {\r\n      setMatriculeEror(matriculeEror);\r\n      setNomEror(nomEror);\r\n      setPrenomEror(prenomEror);\r\n      setDateAmbaucheEror(dateAmbaucheEror);\r\n      setDateNaissanceEror(dateNaissanceEror);\r\n      setStatusEror(statusEror);\r\n      setGenreEror(genreEror);\r\n      setProfilEror(profilEror);\r\n      setFormsEror(formsEror);\r\n      setFormsMethodesEror(formsMethodesEror);\r\n      setFormsOutilsEror(formsOutilsEror);\r\n\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n    let ressource = {\r\n      matricule: Matricule,\r\n      status: Status,\r\n      genre: Genre,\r\n      dateNaissance: DateNaissance,\r\n      lastName: Nom,\r\n      firstName: Prenom,\r\n      dateAmbauche: DateAmbauche,\r\n      technologies: forms,\r\n      methodes: formsMethodes,\r\n      outils: formsOutils,\r\n    };\r\n    console.log(\"ressource\", ressource);\r\n    addRessource(ressource);\r\n\r\n    history.push(\"/app/prestations/ressources\");\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      label: \"Homme\",\r\n      value: \"homme\",\r\n    },\r\n    {\r\n      label: \"Femme\",\r\n      value: \"femme\",\r\n    },\r\n  ];\r\n\r\n  const status = [\r\n    {\r\n      label: \"recrutement\",\r\n      value: \"recrutement\",\r\n    },\r\n    {\r\n      label: \"Salarié\",\r\n      value: \"Salarié\",\r\n    },\r\n    {\r\n      label: \"Contractant\",\r\n      value: \"Contractant\",\r\n    },\r\n    {\r\n      label: \"inactif\",\r\n      value: \"inactif\",\r\n    },\r\n  ];\r\n\r\n  const profiles = [\r\n    {\r\n      label: \"Entry\",\r\n      value: \"Entry\",\r\n    },\r\n    {\r\n      label: \"Intermediate\",\r\n      value: \"Intermediate\",\r\n    },\r\n    {\r\n      label: \"Specialist\",\r\n      value: \"Specialist\",\r\n    },\r\n    {\r\n      label: \"Referent\",\r\n      value: \"Referent\",\r\n    },\r\n    {\r\n      label: \"Expert\",\r\n      value: \"Expert\",\r\n    },\r\n    {\r\n      label: \"Master\",\r\n      value: \"Master\",\r\n    },\r\n  ];\r\n\r\n  const annuler = () => {\r\n    let path = `/app/prestations/ressources`;\r\n    history.push(path);\r\n  };\r\n  const technosForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n  const methodesForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n  const outilsForm = {\r\n    titre: \"\",\r\n    niveau: \"\",\r\n  };\r\n\r\n  const handleInputChange = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setForms(\r\n      forms.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n\r\n  const addForm = () => {\r\n    setForms([...forms, technosForm]);\r\n  };\r\n\r\n  const handleInputChangeMethodes = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setFormsMethodes(\r\n      formsMethodes.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n  const addFormMethodes = () => {\r\n    setFormsMethodes([...formsMethodes, methodesForm]);\r\n  };\r\n\r\n  const handleInputChangeOutils = (e, idform) => {\r\n    const { name, value } = e.target;\r\n    setFormsOutils(\r\n      formsOutils.map((form, i) => {\r\n        if (i === idform) {\r\n          return {\r\n            ...form,\r\n            [name]: value,\r\n          };\r\n        }\r\n        return form;\r\n      }),\r\n    );\r\n  };\r\n  const addFormOutils = () => {\r\n    setFormsOutils([...formsOutils, outilsForm]);\r\n  };\r\n\r\n  const remove = (i) => {\r\n    console.log(forms);\r\n    setForms(forms.filter((el, id) => id !== i));\r\n  };\r\n  const removeOutil = (i) => {\r\n    setFormsOutils(formsOutils.filter((el, id) => id !== i));\r\n  };\r\n  const removeMethode = (i) => {\r\n    setFormsMethodes(formsMethodes.filter((el, id) => id !== i));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Ajouter Ressource\" path=\"/app/prestations/ressources\" />\r\n      <Grid item xs={12} className={classes.Alert}>\r\n        {error ? (\r\n          <Alert severity=\"error\">La ressource n'est pas ajouté!</Alert>\r\n        ) : null}\r\n      </Grid>\r\n\r\n      <form onSubmit={submitNewRessource}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Prénom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={Prenom}\r\n              onChange={(e) => {\r\n                setPrenom(e.target.value);\r\n                setPrenomEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{PrenomEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Nom\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={Nom}\r\n              onChange={(e) => {\r\n                setNom(e.target.value);\r\n                setNomEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{NomEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Matricule\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={Matricule}\r\n              onChange={(e) => {\r\n                setMatricule(e.target.value);\r\n                setMatriculeEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{MatriculeEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              select\r\n              label=\"Status\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={Status}\r\n              onChange={(e) => {\r\n                setStatus(e.target.value);\r\n                setStatusEror(\"\");\r\n              }}\r\n            >\r\n              {status.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{StatusEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Genre\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={Genre}\r\n              onChange={(e) => {\r\n                setGenre(e.target.value);\r\n                setGenreEror(\"\");\r\n              }}\r\n            >\r\n              {options.map((option) => (\r\n                <MenuItem value={option.value}>{option.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{GenreEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              select\r\n              label=\"Profil de facturation\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={Profil}\r\n              onChange={(e) => {\r\n                setProfil(e.target.value);\r\n                setProfilEror(\"\");\r\n              }}\r\n            >\r\n              {profiles.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{ProfilEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date d'ambauche</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              value={DateAmbauche}\r\n              onChange={(e) => {\r\n                setDateAmbauche(e.target.value);\r\n                setDateAmbaucheEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateAmbaucheEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Naissance</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={DateNaissance}\r\n              onChange={(e) => {\r\n                setDateNaissance(e.target.value);\r\n                setDateAmbaucheEror(\"\");\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateNaissanceEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addForm}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter une Technologie\r\n            <div style={{ color: \"red\" }}>{FormsEror}</div>\r\n          </Grid>\r\n\r\n          {forms.map((form, i) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <b className={classes.Btext}> Technologie {i + 1}:</b>\r\n                <br />\r\n                <hr className={classes.hr}></hr>\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Technologies\"\r\n                  size=\"small\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={form.name}\r\n                  onChange={(e) => {\r\n                    handleInputChange(e, i);\r\n                    setFormsEror(\"\");\r\n                  }}\r\n                />\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  label=\"Niveau de maitrise\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"niveau\"\r\n                  variant=\"outlined\"\r\n                  value={form.niveau}\r\n                  onChange={(e) => handleInputChange(e, i)}\r\n                >\r\n                  <MenuItem key=\"0\" value=\"NE\">\r\n                    NE - Non Exigé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"1\" value=\"0\">\r\n                    0 - pas de connaissances\r\n                  </MenuItem>\r\n                  <MenuItem key=\"2\" value=\"1\">\r\n                    1 - connaissances théoriques\r\n                  </MenuItem>\r\n                  <MenuItem key=\"3\" value=\"2\">\r\n                    2 - Basique\r\n                  </MenuItem>\r\n                  <MenuItem key=\"4\" value=\"3\">\r\n                    3 - Maitrisé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"5\" value=\"4\">\r\n                    4 - Expert{\" \"}\r\n                  </MenuItem>\r\n                </TextField>\r\n                <br />\r\n                <IconButton aria-label=\"delete\" onClick={() => remove(i)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            );\r\n          })}\r\n\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addFormMethodes}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter une Méthode\r\n            <div style={{ color: \"red\" }}>{FormsMethodesEror}</div>\r\n          </Grid>\r\n\r\n          {formsMethodes.map((form, i) => {\r\n            return (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <b className={classes.Btext}> Méthode {i + 1} :</b>\r\n                  <br />\r\n                  <hr className={classes.hr}></hr>\r\n                  <br />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Méthode\"\r\n                    size=\"small\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={form.name}\r\n                    onChange={(e) => {\r\n                      handleInputChangeMethodes(e, i);\r\n                      setFormsMethodesEror(\"\");\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    label=\"Niveau de maitrise\"\r\n                    size=\"small\"\r\n                    name=\"niveau\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={form.niveau}\r\n                    onChange={(e) => handleInputChangeMethodes(e, i)}\r\n                  >\r\n                    <MenuItem key=\"0\" value=\"NE\">\r\n                      NE - Non Exigé\r\n                    </MenuItem>\r\n                    <MenuItem key=\"1\" value=\"0\">\r\n                      0 - pas de connaissances\r\n                    </MenuItem>\r\n                    <MenuItem key=\"2\" value=\"1\">\r\n                      1 - connaissances théoriques\r\n                    </MenuItem>\r\n                    <MenuItem key=\"3\" value=\"2\">\r\n                      2 - Basique\r\n                    </MenuItem>\r\n                    <MenuItem key=\"4\" value=\"3\">\r\n                      3 - Maitrisé\r\n                    </MenuItem>\r\n                    <MenuItem key=\"5\" value=\"4\">\r\n                      4 - Expert{\" \"}\r\n                    </MenuItem>\r\n                  </TextField>\r\n                  <br />\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => removeMethode(i)}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            );\r\n          })}\r\n\r\n          <Grid item xs={6}>\r\n            <IconButton aria-label=\"delete\" onClick={addFormOutils}>\r\n              <AddIcon />\r\n            </IconButton>\r\n            Ajouter un outil\r\n            <div style={{ color: \"red\" }}>{FormsOutilsEror}</div>\r\n          </Grid>\r\n\r\n          {formsOutils.map((form, i) => {\r\n            return (\r\n              <Grid item xs={12}>\r\n                <b className={classes.Btext}> outil {i + 1} :</b>\r\n                <br />\r\n                <hr className={classes.hr}></hr>\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Outil\"\r\n                  size=\"small\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={form.name}\r\n                  onChange={(e) => {\r\n                    handleInputChangeOutils(e, i);\r\n                    setFormsOutilsEror(\"\");\r\n                  }}\r\n                />\r\n                <br />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  label=\"Niveau de maitrise\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  name=\"niveau\"\r\n                  variant=\"outlined\"\r\n                  value={form.niveau}\r\n                  onChange={(e) => handleInputChangeOutils(e, i)}\r\n                >\r\n                  <MenuItem key=\"0\" value=\"NE\">\r\n                    NE - Non Exigé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"1\" value=\"0\">\r\n                    0 - pas de connaissances\r\n                  </MenuItem>\r\n                  <MenuItem key=\"2\" value=\"1\">\r\n                    1 - connaissances théoriques\r\n                  </MenuItem>\r\n                  <MenuItem key=\"3\" value=\"2\">\r\n                    2 - Basique\r\n                  </MenuItem>\r\n                  <MenuItem key=\"4\" value=\"3\">\r\n                    3 - Maitrisé\r\n                  </MenuItem>\r\n                  <MenuItem key=\"5\" value=\"4\">\r\n                    4 - Expert\r\n                  </MenuItem>\r\n                </TextField>\r\n                <br />\r\n                <IconButton aria-label=\"delete\" onClick={() => removeOutil(i)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            );\r\n          })}\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["753","754","755","756","757","758","759","760"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  TablePagination,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getContratsAction } from \"../../services/Actions/contratActions\";\r\n// import './contrat.css';\r\nexport default function Contrats() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [val, setVal] = useState(\"\");\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.contrats.loading);\r\n  const error = useSelector((state) => state.contrats.error);\r\n  const contrats = useSelector((state) => state.contrats.contrats);\r\n  useEffect(() => {\r\n    const loadContrats = () => dispatch(getContratsAction());\r\n    loadContrats();\r\n  }, []);\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  function AjouteContrat() {\r\n    history.push(\"/app/Contrats/AjouteContrat\");\r\n  }\r\n  function EditContrat(id) {\r\n    history.push(\"/app/Contrats/EditContrat/\" + id);\r\n  }\r\n  const AfficheContrat = (e) => {\r\n    let path = `/app/Contrats/ContratDetail/` + e;\r\n    history.push(path);\r\n  };\r\n  const RechercheContrat = (e) => {\r\n    var lowerCase = e.target.value.toLowerCase();\r\n    setVal(lowerCase);\r\n  };\r\n  const filteredData = contrats.filter((el) => {\r\n    if (val === \"\") {\r\n      return el;\r\n    } else {\r\n      return el.nomContrat.toLowerCase().includes(val);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"  Liste des contrats\" path=\"/app/dashboard\" />\r\n      </div>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid xs={8} className={classes.Search}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            onChange={RechercheContrat}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Recherche\"\r\n            className={classes.searchTextField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <IconButton className={classes.addBtn}>\r\n                    <SearchIcon className={classes.addBtn} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.Bajoute}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.Button}\r\n            onClick={AjouteContrat}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Contrat\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n\r\n      <Paper>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow className={classes.TableRow}>\r\n                <TableCell>Nom de Contrat</TableCell>\r\n                <TableCell>Nom de Client</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredData\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((contrat) => (\r\n                  <TableRow key={contrat.nomContrat}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {contrat.nomContrat}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {contrat.nomClient}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {contrat.description}\r\n                    </TableCell>\r\n                    <TableRow component=\"th\" scope=\"row\">\r\n                      <Button onClick={() => AfficheContrat(contrat.id)}>\r\n                        <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                      <Button onClick={() => EditContrat(contrat.id)}>\r\n                        <EditIcon className={classes.icons} />\r\n                      </Button>\r\n                    </TableRow>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[8, 10, 25, 100]}\r\n          component=\"div\"\r\n          count={contrats.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["761","762","763","764","765"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, MenuItem } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  editContratAction,\r\n  getContratAction,\r\n} from \"../../services/Actions/contratActions\";\r\nimport {\r\n  validacionError,\r\n  validationSuccess,\r\n  validarFormularioAction,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditContrat(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialContratState = {\r\n    id: null,\r\n    nomClient: \"\",\r\n    nomContrat: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    dateDebut: \"\",\r\n    dateFin: \"\",\r\n  };\r\n  const editContrat = (Contrat) => dispatch(editContratAction(Contrat));\r\n  const [currentContrat, setCurrentContrat] = useState(initialContratState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const getContrat = () => {\r\n    axios\r\n      .get(\r\n        `http://localhost:9003/DXC/contrats/Contrat/` + props.match.params.id,\r\n      )\r\n      .then((resp) => {\r\n        console.log(\"hhhhkldmdmmdm\", resp.data);\r\n        setCurrentContrat(resp.data);\r\n        console.log(\"CurrentContrat\", currentContrat);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidacion = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  useEffect(() => {\r\n    getContrat(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentContrat({ ...currentContrat, [name]: value });\r\n  };\r\n\r\n  const updateContent = () => {\r\n    console.log(\"currentContrat\", currentContrat);\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      currentContrat.nomClient.trim() === \"\" ||\r\n      currentContrat.nomContrat.trim() === \"\" ||\r\n      currentContrat.description.trim() === \"\" ||\r\n      currentContrat.type.trim() === \"\" ||\r\n      currentContrat.dateDebut.trim() === \"\" ||\r\n      currentContrat.dateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidacion();\r\n\r\n    editContrat(currentContrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n  const types = [\r\n    {\r\n      label: \"Run\",\r\n      value: \"Run\",\r\n    },\r\n    {\r\n      label: \"Projet\",\r\n      value: \"Projet\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle\r\n          title=\"Modifier un contrat\"\r\n          path=\"/app/prestations/Contrats\"\r\n        />\r\n      </div>\r\n      <form onSubmit={updateContent}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              name=\"nomContrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.nomContrat}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={currentContrat.type}\r\n              onChange={handleInputChange}\r\n            >\r\n              {types.map((type) => (\r\n                <MenuItem key={type.value} value={type.value}>\r\n                  {type.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              name=\"nomClient\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.nomClient}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.description}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              format=\"MM/dd/yyyy\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              value={currentContrat.dateDebut}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              format=\"MM/dd/yyyy\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.dateFin}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          className={classes.btnAjouter}\r\n          color=\"primary\"\r\n          onClick={updateContent}\r\n        >\r\n          Modifier\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          className={classes.btnAnnuler}\r\n          color=\"secondary\"\r\n          onClick={AnnulerContrat}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["766","767","768","769"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useStyles from \"./styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst columns = [\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"etat\", label: \"Etat\", minWidth: 100 },\r\n  { id: \"market\", label: \"Market\", minWidth: 100 },\r\n  { id: \"type\", label: \"Type\", minWidth: 100 },\r\n  { id: \"dateDebut\", label: \"Date de Début\", minWidth: 180 },\r\n  { id: \"dateFin\", label: \"Date de Fin\", minWidth: 180 },\r\n];\r\n\r\nconst Prestations = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addPrestation = () => {\r\n    let path = `/app/prestations/AjouterPrestation`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [val, setVal] = useState(\"\");\r\n  const [listFilter, setListFilter] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadProducts = () => dispatch(getPrestationsAction());\r\n    loadProducts();\r\n  }, []);\r\n\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.prestations.loading);\r\n  const error = useSelector((state) => state.prestations.error);\r\n  const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const EditPrestation = (e) => {\r\n    let path = `/app/prestations/ModiferPrestation/` + e;\r\n    history.push(path);\r\n  };\r\n  const ViewPrestation = (e) => {\r\n    let path = `/app/prestations/AficherPrestation/` + e;\r\n    history.push(path);\r\n  };\r\n\r\n  const Recherche = (e) => {\r\n    var lowerCase = e.target.value.toLowerCase();\r\n    setVal(lowerCase);\r\n  };\r\n\r\n  const filteredData = prestations.filter((el) => {\r\n    if (val === \"\") {\r\n      return el;\r\n    } else {\r\n      return el.titre.toLowerCase().includes(val);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} className={classes.grid}>\r\n          <PageTitle title=\"Prestations\" path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.grid}></Grid>\r\n        <Grid xs={6} className={classes.grid}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            onChange={Recherche}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Recherche\"\r\n            className={classes.searchTextField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <IconButton>\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addPrestation}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Prestation\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredData\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button\r\n                            onClick={() => {\r\n                              ViewPrestation(row.id);\r\n                            }}\r\n                          >\r\n                            {/* <i className=\"pe-7s-look\"></i> */}\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => {\r\n                              EditPrestation(row.id);\r\n                            }}\r\n                          >\r\n                            {/* <i className=\"pe-7s-note\"></i> */}\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={prestations.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prestations;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["770","771","772","773","774"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { editPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nexport default function ModiferPrestation({ match }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  //state\r\n  const initialPrestationState = {\r\n    id: null,\r\n    type: \"\",\r\n    etat: \"\",\r\n    dateDebut: \"\",\r\n    dateFin: \"\",\r\n    titre: \"\",\r\n    market: \"\",\r\n\r\n    typeEror: \"\",\r\n    etatEror: \"\",\r\n    dateDebutEror: \"\",\r\n    dateFinEror: \"\",\r\n    titreEror: \"\",\r\n    marketEror: \"\",\r\n  };\r\n  // prestation\r\n  const dispatch = useDispatch();\r\n  const editPrestation = (prestation) =>\r\n    dispatch(editPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  // Eror states\r\n  const [TitreEror, setTitreEror] = useState(initialPrestationState.titreEror);\r\n  const [EtatEror, setEtatEror] = useState(initialPrestationState.etatEror);\r\n  const [TypeEror, setTypeEror] = useState(initialPrestationState.typeEror);\r\n  const [MarketEror, setMarketEror] = useState(\r\n    initialPrestationState.marketEror,\r\n  );\r\n  const [DateDebutEror, setDateDebutEror] = useState(\r\n    initialPrestationState.dateDebutEror,\r\n  );\r\n  const [DateFinEror, setDateFinEror] = useState(\r\n    initialPrestationState.dateFinEror,\r\n  );\r\n\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    console.log(\"id\", id);\r\n    clienteAxios\r\n      .get(`http://localhost:9002/DXC/prestations/Prestation/${id}`)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setPrestationdate(resp.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // dispatch(getPrestationAction(id));\r\n  }, [id]);\r\n\r\n  const prestation = useSelector((state) => state.prestations.prestation);\r\n  const [prestationdate, setPrestationdate] = useState(initialPrestationState);\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  const submitEditPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    let typeEror = \"\";\r\n    let etatEror = \"\";\r\n    let dateDebutEror = \"\";\r\n    let dateFinEror = \"\";\r\n    let titreEror = \"\";\r\n    let marketEror = \"\";\r\n\r\n    if (!prestationdate.type) {\r\n      typeEror = \"le champ Type de la prestation est obligatiore\";\r\n    }\r\n    if (!prestationdate.titre) {\r\n      titreEror = \"le champ Titre de la prestation est obligatiore\";\r\n    }\r\n    if (!prestationdate.market) {\r\n      marketEror = \"le champ Market de la prestation est obligatiore\";\r\n    }\r\n    if (!prestationdate.dateDebut) {\r\n      dateDebutEror = \"le champ Date de début de la prestation est obligatiore\";\r\n    }\r\n    if (!prestationdate.dateFin) {\r\n      dateFinEror = \"le champ Date de fin de la prestation est obligatiore\";\r\n    }\r\n    if (!prestationdate.etat) {\r\n      etatEror = \"le champ Etat de la prestation est obligatiore\";\r\n    }\r\n\r\n    if (\r\n      typeEror ||\r\n      titreEror ||\r\n      marketEror ||\r\n      dateDebutEror ||\r\n      dateFinEror ||\r\n      etatEror\r\n    ) {\r\n      setTitreEror(titreEror);\r\n      setTypeEror(typeEror);\r\n      setEtatEror(etatEror);\r\n      setDateDebutEror(dateDebutEror);\r\n      setDateFinEror(dateFinEror);\r\n      setMarketEror(marketEror);\r\n\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n    const dates = {\r\n      dateDebut: moment(prestationdate.dateDebut).format(\"yyyy-MM-DD\"),\r\n      dateFin: moment(prestationdate.dateFin).format(\"yyyy-MM-DD\"),\r\n    };\r\n    let prestation = {\r\n      id: id,\r\n      titre: prestationdate.titre,\r\n      etat: prestationdate.etat,\r\n      market: prestationdate.market,\r\n      type: prestationdate.type,\r\n      dateDebut: dates.dateDebut,\r\n      dateFin: dates.dateFin,\r\n    };\r\n    console.log(\"prestation\", prestation);\r\n\r\n    editPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations/ListePrestations\");\r\n  };\r\n  // const submitEditPrestation = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   validarForm();\r\n\r\n  //   if (\r\n  //     prestationdate.titre.trim() === \"\" ||\r\n  //     prestationdate.etat.trim() === \"\" ||\r\n  //     prestationdate.market.trim() === \"\" ||\r\n  //     prestationdate.type.trim() === \"\" ||\r\n  //     prestationdate.dateDebut.trim() === \"\" ||\r\n  //     prestationdate.dateFin.trim() === \"\"\r\n  //   ) {\r\n  //     errorValidacion();\r\n  //     return;\r\n  //   }\r\n  //   SuccessValidation();\r\n\r\n  //   let prestation = {\r\n  //     id: id,\r\n  //     titre: prestationdate.titre,\r\n  //     etat: prestationdate.etat,\r\n  //     market: prestationdate.market,\r\n  //     type: prestationdate.type,\r\n  //     dateDebut: prestationdate.dateDebut,\r\n  //     dateFin: prestationdate.dateFin,\r\n  //   };\r\n  //   console.log(\"prestation\", prestation);\r\n\r\n  //   editPrestation(prestation);\r\n\r\n  //   history.push(\"/app/prestations/ListePrestations\");\r\n  // };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n  const types = [\r\n    {\r\n      label: \"Interne\",\r\n      value: \"Interne\",\r\n    },\r\n    {\r\n      label: \"Externe\",\r\n      value: \"Externe\",\r\n    },\r\n  ];\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPrestationdate({ ...prestationdate, [name]: value });\r\n  };\r\n\r\n  const dates = {\r\n    dateFin: moment(prestationdate.dateFin).format(\"L\"),\r\n    dateDebut: moment(prestationdate.dateDebut).format(\"L\"),\r\n  };\r\n\r\n  const annuler = () => {\r\n    setPrestationdate(initialPrestationState);\r\n  };\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Modifer une prestation\"\r\n        path=\"/app/prestations/ListePrestations\"\r\n      />\r\n      <form onSubmit={submitEditPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"titre\"\r\n              value={prestationdate.titre}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setTitreEror(initialPrestationState.titreEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{TitreEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"etat\"\r\n              value={prestationdate.etat}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                setEtatEror(initialPrestationState.etatEror);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem key={etat.value} value={etat.value}>\r\n                  {etat.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{EtatEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"type\"\r\n              variant=\"outlined\"\r\n              value={prestationdate.type}\r\n              onChange={handleInputChange}\r\n            >\r\n              {types.map((type) => (\r\n                <MenuItem key={type.value} value={type.value}>\r\n                  {type.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{TypeEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              variant=\"outlined\"\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"market\"\r\n              value={prestationdate.market}\r\n              onChange={handleInputChange}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem key={market.value} value={market.value}>\r\n                  {market.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{MarketEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              name=\"dateDebut\"\r\n              value={prestationdate.dateDebut}\r\n              onChange={handleInputChange}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateDebutEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"dateFin\"\r\n              value={prestationdate.dateFin}\r\n              onChange={handleInputChange}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateFinEror}</div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Modifer\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">La prestation n'est pas modifié!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",["775"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AjouterPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const initialPrestationState = {\r\n    id: null,\r\n    type: \"\",\r\n    etat: \"\",\r\n    dateDebut: \"\",\r\n    dateFin: \"\",\r\n    titre: \"\",\r\n    market: \"\",\r\n\r\n    typeEror: \"\",\r\n    etatEror: \"\",\r\n    dateDebutEror: \"\",\r\n    dateFinEror: \"\",\r\n    titreEror: \"\",\r\n    marketEror: \"\",\r\n  };\r\n  const [Titre, setTitre] = useState(initialPrestationState.titre);\r\n  const [Etat, setEtat] = useState(initialPrestationState.etat);\r\n  const [Type, setType] = useState(initialPrestationState.type);\r\n  const [Market, setMarket] = useState(initialPrestationState.market);\r\n  const [DateDebut, setDateDebut] = useState(initialPrestationState.dateDebut);\r\n  const [DateFin, setDateFin] = useState(initialPrestationState.dateFin);\r\n\r\n  // Eror states\r\n  const [TitreEror, setTitreEror] = useState(initialPrestationState.titreEror);\r\n  const [EtatEror, setEtatEror] = useState(initialPrestationState.etatEror);\r\n  const [TypeEror, setTypeEror] = useState(initialPrestationState.typeEror);\r\n  const [MarketEror, setMarketEror] = useState(\r\n    initialPrestationState.marketEror,\r\n  );\r\n  const [DateDebutEror, setDateDebutEror] = useState(\r\n    initialPrestationState.dateDebutEror,\r\n  );\r\n  const [DateFinEror, setDateFinEror] = useState(\r\n    initialPrestationState.dateFinEror,\r\n  );\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const addPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  const submitNewPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    let typeEror = \"\";\r\n    let etatEror = \"\";\r\n    let dateDebutEror = \"\";\r\n    let dateFinEror = \"\";\r\n    let titreEror = \"\";\r\n    let marketEror = \"\";\r\n\r\n    if (!Type) {\r\n      typeEror = \"le champ Type de la prestation est obligatiore\";\r\n    }\r\n    if (!Titre) {\r\n      titreEror = \"le champ Titre de la prestation est obligatiore\";\r\n    }\r\n    if (!Market) {\r\n      marketEror = \"le champ Market de la prestation est obligatiore\";\r\n    }\r\n    if (!DateDebut) {\r\n      dateDebutEror = \"le champ Date de début de la prestation est obligatiore\";\r\n    }\r\n    if (!DateFin) {\r\n      dateFinEror = \"le champ Date de fin de la prestation est obligatiore\";\r\n    }\r\n    if (!Etat) {\r\n      etatEror = \"le champ Etat de la prestation est obligatiore\";\r\n    }\r\n\r\n    if (\r\n      typeEror ||\r\n      titreEror ||\r\n      marketEror ||\r\n      dateDebutEror ||\r\n      dateFinEror ||\r\n      etatEror\r\n    ) {\r\n      setTitreEror(titreEror);\r\n      setTypeEror(typeEror);\r\n      setEtatEror(etatEror);\r\n      setDateDebutEror(dateDebutEror);\r\n      setDateFinEror(dateFinEror);\r\n      setMarketEror(marketEror);\r\n\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    SuccessValidation();\r\n\r\n    const dates = {\r\n      dateDebut: moment(DateDebut).format(\"yyyy-MM-DD\"),\r\n      dateFin: moment(DateFin).format(\"yyyy-MM-DD\"),\r\n    };\r\n    let prestation = {\r\n      titre: Titre,\r\n      etat: Etat,\r\n      market: Market,\r\n      type: Type,\r\n      dateDebut: dates.dateDebut,\r\n      dateFin: dates.dateFin,\r\n    };\r\n    addPrestation(prestation);\r\n\r\n    history.push(\"/app/prestations/ListePrestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n  const types = [\r\n    {\r\n      label: \"Interne\",\r\n      value: \"Interne\",\r\n    },\r\n    {\r\n      label: \"Externe\",\r\n      value: \"Externe\",\r\n    },\r\n  ];\r\n  const annuler = () => {\r\n    setTitre(initialPrestationState.titre);\r\n    setDateDebut(initialPrestationState.dateDebut);\r\n    setDateFin(initialPrestationState.dateFin);\r\n    setEtat(initialPrestationState.etat);\r\n    setMarket(initialPrestationState.market);\r\n    setType(initialPrestationState.type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Ajouter une prestation\"\r\n        path=\"/app/prestations/ListePrestations\"\r\n      />\r\n      <form onSubmit={submitNewPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={Titre}\r\n              onChange={(e) => {\r\n                setTitre(e.target.value);\r\n                setTitreEror(initialPrestationState.titreEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{TitreEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={Etat}\r\n              onChange={(e) => {\r\n                setEtat(e.target.value);\r\n                setEtatEror(initialPrestationState.etatEror);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem key={etat.value} value={etat.value}>\r\n                  {etat.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{EtatEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={Type}\r\n              onChange={(e) => {\r\n                setType(e.target.value);\r\n                setTypeEror(initialPrestationState.typeEror);\r\n              }}\r\n            >\r\n              {types.map((type) => (\r\n                <MenuItem key={type.value} value={type.value}>\r\n                  {type.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{TypeEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={Market}\r\n              onChange={(e) => {\r\n                setMarket(e.target.value);\r\n                setMarketEror(initialPrestationState.marketEror);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem key={market.value} value={market.value}>\r\n                  {market.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div style={{ color: \"red\" }}>{MarketEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              value={DateDebut}\r\n              onChange={(e) => {\r\n                setDateDebut(e.target.value);\r\n                setDateDebutEror(initialPrestationState.dateDebutEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateDebutEror}</div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={DateFin}\r\n              onChange={(e) => {\r\n                setDateFin(e.target.value);\r\n                setDateFinEror(initialPrestationState.dateFinEror);\r\n              }}\r\n            />\r\n            <div style={{ color: \"red\" }}>{DateFinEror}</div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                annuler();\r\n              }}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">La prestation n'est pas ajouté!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js",["776","777","778","779","780","781"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  TablePagination,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { getClientsAction } from \"../../services/Actions/clientActions\";\r\nexport default function Clients() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [val, setVal] = useState(\"\");\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.clients.loading);\r\n  const error = useSelector((state) => state.clients.error);\r\n  const clients = useSelector((state) => state.clients.clients);\r\n  useEffect(() => {\r\n    const loadClients = () => dispatch(getClientsAction());\r\n    loadClients();\r\n  }, []);\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  function AjouteClient() {\r\n    history.push(\"/app/clients/AjouteClient\");\r\n  }\r\n  function EditClient(id) {\r\n    history.push(\"/app/clients/EditClient/\" + id);\r\n  }\r\n  const AfficheClient = (e) => {\r\n    let path = `/app/clients/AffichageClient/` + e;\r\n    history.push(path);\r\n  };\r\n  const RechercheClient = (e) => {\r\n    var lowerCase = e.target.value.toLowerCase();\r\n    setVal(lowerCase);\r\n  };\r\n\r\n  const filteredData = clients.filter((el) => {\r\n    if (val === \"\") {\r\n      return el;\r\n    } else {\r\n      return el.nomClient.toLowerCase().includes(val);\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageTitle title=\"  Liste des clients\" path=\"/app/dashboard\" />\r\n      </div>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid xs={8} className={classes.Search}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            onChange={RechercheClient}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Recherche\"\r\n            className={classes.searchTextField}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <IconButton className={classes.addBtn}>\r\n                    <SearchIcon className={classes.addBtn} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.Bajoute}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.Button}\r\n            onClick={AjouteClient}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Client\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Paper>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow className={classes.TableRow}>\r\n                <TableCell>Nom de Client</TableCell>\r\n                <TableCell>Market</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredData\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((client) => (\r\n                  <TableRow key={client.nomClient}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {client.nomClient}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {client.market}\r\n                    </TableCell>\r\n                    <TableRow component=\"th\" scope=\"row\">\r\n                      <Button onClick={() => AfficheClient(client.id)}>\r\n                        <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                      <Button onClick={() => EditClient(client.id)}>\r\n                        <EditIcon className={classes.icons} />\r\n                      </Button>\r\n                    </TableRow>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[8, 10, 25, 100]}\r\n          component=\"div\"\r\n          count={clients.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",["782"],"import React from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\n// styles\r\n// import useStyles from \"./styles\";\r\n\r\nexport default function Dashboard(props) {\r\n  // var classes = useStyles();\r\n  // var theme = useTheme();\r\n  // local\r\n\r\n  return (\r\n    <>\r\n     \r\n      <h1>Accueil</h1>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",["783","784","785","786","787","788","789"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  BorderAll as TableIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Subject,\r\n  Work,\r\n  Settings,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport CardMembershipIcon from \"@material-ui/icons/CardMembership\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  {\r\n    id: 0,\r\n    label: \"Accueil\",\r\n    link: \"/app/dashboard\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-home\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n  {\r\n    id: 1,\r\n    label: \"Capabilités\",\r\n    link: \"/app/capabilites\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-photo-gallery\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Compétances\",\r\n    link: \"/app/competances/allCompetances\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-medal\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-bell\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Prestations\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-folder\" />\r\n      </IconButton>\r\n    ),\r\n    children: [\r\n      {\r\n        label: \"Liste des Prestations\",\r\n        link: \"/app/prestations/ListePrestations\",\r\n      },\r\n      { label: \"Contrats\", link: \"/app/prestations/Contrats\" },\r\n      { label: \"Clients\", link: \"/app/prestations/clients\" },\r\n      { label: \"Ressources\", link: \"/app/prestations/ressources\" },\r\n      { label: \"Activités\", link: \"/app/prestations/activites\" },\r\n      { label: \"Téchnologies\", link: \"/app/prestations/technologies\" },\r\n      { label: \"Projets\", link: \"/app/prestations/projets\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Parametres\",\r\n    link: \"/app/parametres\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-tools\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Certifications\",\r\n    link: \"/app/certifications/ListeCertifications\",\r\n    icon: (\r\n      <IconButton>\r\n        <i className=\"pe-7s-ribbon\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js",["790","791"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js",["792"],"\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 300,\r\n        minHeight: 200,\r\n        maxHeight: 350,\r\n        border: \"2px solid #741F82\",\r\n      },\r\n      GridForm: {\r\n        marginLeft: \"70px\",\r\n        margin: \"20px 0px 20px 0px\",\r\n        backgroundColor: \"transparent\",\r\n        maxWidth: 1000,\r\n        \r\n      },\r\n      Form: {\r\n        marginLeft: \"60px\",\r\n        backgroundColor: \"transparent\",\r\n        maxWidth: 1100,\r\n      },\r\n      bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\",\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n      Bajoute: {\r\n        textAlign: \"end\",\r\n        marginLeft: \"800px\",\r\n      },\r\n      labelDonnes: {\r\n        color: \"#000000\",\r\n        Stroke: \"Solid\",\r\n        marginTop: \"inherit\",\r\n      },\r\n      \r\n      labelinformation: {\r\n        color: \"#7978BB\",\r\n        Stroke: \"Solid\",\r\n        textAlign:\"center\",\r\n        marginTop: \"inherit\",\r\n      },\r\n      \r\n      forminformation: {\r\n        backgroundColor: \"transparent\",\r\n        maxWidth: 700,\r\n        border: \"3px solid #FFFFFF\",\r\n      },\r\n      label: {\r\n        color: \"#741F82\",\r\n        Stroke: \"Solid\",\r\n        textAlign:\"center\",\r\n        marginTop: \"inherit\",\r\n      },\r\n      Button: {\r\n        background: \"#741F82\",\r\n        color: \"#FFFFFF\",\r\n        padding: \"6px\",\r\n        marginTop: -\"6px\",\r\n      },\r\n      ButtonAction: {\r\n        background: \"#741F82\",\r\n        Width: 10,\r\n        Height: 5,\r\n      },\r\n      InputSearch: {\r\n        background: \"#FFFFFF\",\r\n        minWidth: 260,\r\n        Height: 26,\r\n        display: \"flex\",\r\n        marginRight: 1,\r\n        border: \"2px solid #741F82\",\r\n        borderRadius: \"10px\",\r\n      },\r\n      ButtonSearch: {\r\n        background: \"#741F82\",\r\n        Stroke: \"Solid\",\r\n        Align: \"Inside\",\r\n        minWidth: 22,\r\n        height: 35,\r\n        color: \"#FFFFFF\",\r\n        borderRadius: \"10px\",\r\n      },\r\n      Search: {\r\n        textAlign: \"initial\",\r\n        display: \"flex\",\r\n        padding: 10,\r\n        position: \"absolute\",\r\n        marginLeft: \"75px\",\r\n      },\r\n      Visibility: {\r\n        textAlign: \"end\",\r\n        color: \"#FFFFFF\",\r\n        fontSize: \"medium\",\r\n      },\r\n      Visib: {\r\n        background: \"#741F82\",\r\n        minWidth: 30,\r\n        height: 30,\r\n      },\r\n      title: {\r\n        fontSize: \"9\",\r\n      },\r\n      btnAjouter: {\r\n        margin: \"5px\",\r\n        float: \"right\",\r\n        background: \"#741F82\",\r\n        color: \"#FFFFFF\",\r\n      },\r\n      btnAnnuler: {\r\n        margin: \"5px\",\r\n        float: \"right\",\r\n        background: \"black\",\r\n        color: \"white\",\r\n      }, \r\n      addBtn: {\r\n        marginLeft: \"8px\",\r\n      },\r\n      Search: {\r\n        textAlign: \"initial\",\r\n        display: \"flex\",\r\n        padding: 1,\r\n        position: \"absolute\",\r\n        marginLeft: \"8px\",\r\n      },\r\n      searchTextField: {\r\n        marginLeft: \"8px\",\r\n      },\r\n\r\n}));\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\certificationsActions.js",["793"],"import {\r\n  ADD_CERTIFICATION,\r\n  ADD_CERTIFICATION_SUCCESS,\r\n  ADD_CERTIFICATION_ERROR,\r\n  BEGIN_CERTIFICATION_EDIT,\r\n  EDITION_CERTIFICATION_SUCCESS,\r\n  EDIT_CERTIFICATION_ERROR,\r\n  START_DOWNLOAD_CERTIFICATIONS,\r\n  CERTIFICATION_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_CERTIFICATION__ERROR,\r\n  GET_CERTIFICATION_EDIT,\r\n  CERTIFICATION_EDIT_SUCCESS,\r\n  CERTIFICATION_EDIT_ERROR,\r\n} from \"../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment\";\r\n\r\nexport function createNewcertificationAction(CERTIFICATION) {\r\n  console.log(\"CERTIFICATION\", CERTIFICATION);\r\n  return (dispatch) => {\r\n    dispatch(newCERTIFICATION());\r\n    clienteAxios\r\n      .post(\"http://localhost:9001/dxc/certifications/addcertif\", CERTIFICATION)\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch(addNewCERTIFICATIONSuccess(CERTIFICATION));\r\n        Swal.fire({\r\n          timer: 3000,\r\n          text: \"La certif est ajouter avec succés\",\r\n          timeerProgressBar: true,\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewCERTIFICATIONError());\r\n        Swal.fire({\r\n          timer: 3000,\r\n          text: \"La ressource n'est pas ajouté\",\r\n          timeerProgressBar: true,\r\n          icon: \"error\",\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport const newCERTIFICATION = () => ({\r\n  type: ADD_CERTIFICATION,\r\n});\r\n\r\nexport const addNewCERTIFICATIONSuccess = (CERTIFICATION) => ({\r\n  type: ADD_CERTIFICATION_SUCCESS,\r\n  payload: CERTIFICATION,\r\n});\r\n\r\nexport const addNewCERTIFICATIONError = (error) => ({\r\n  type: ADD_CERTIFICATION_ERROR,\r\n});\r\n\r\n//obtenir la liste des produits de productsReducer (voir API)\r\nexport function getCertificationsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getCertficationStart());\r\n    let id = 1;\r\n    axios\r\n      .get(\"http://localhost:9001/dxc/certifications/certificats/\" + 1)\r\n      .then((resp) => {\r\n        resp.data.forEach((element) => {\r\n          element.datecertification = moment(element.datecertification).format(\r\n            \"L\",\r\n          );\r\n        });\r\n\r\n        dispatch(downloadCertificationsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaCertificationsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getCertficationStart = () => ({\r\n  type: START_DOWNLOAD_CERTIFICATIONS,\r\n});\r\n\r\nexport const downloadCertificationsSuccessful = (certifications) => ({\r\n  type: CERTIFICATION_DOWNLOAD_SUCCESSFUL,\r\n  payload: certifications,\r\n});\r\n\r\nexport const descargaCertificationsError = () => ({\r\n  type: DOWNLOAD_CERTIFICATION__ERROR,\r\n});\r\n\r\nexport function editcertificationAction(CERTIFICATION) {\r\n  return (dispatch) => {\r\n    dispatch(startEditCERTIFICATION());\r\n\r\n    clienteAxios\r\n      .put(\r\n        `http://localhost:9001/dxc/certifications/updatecertif`,\r\n        CERTIFICATION,\r\n      )\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(editCERTIFICATIONSuccess(resp.data));\r\n        Swal.fire(\r\n          \"Stored\",\r\n          \"The Certificate was successfully updated\",\r\n          \"success\",\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(editCERTIFICATIONError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const startEditCERTIFICATION = () => ({\r\n  type: BEGIN_CERTIFICATION_EDIT,\r\n});\r\n\r\nexport const editCERTIFICATIONSuccess = (CERTIFICATION) => ({\r\n  type: EDITION_CERTIFICATION_SUCCESS,\r\n  payload: CERTIFICATION,\r\n});\r\n\r\nexport const editCERTIFICATIONError = () => ({\r\n  type: EDIT_CERTIFICATION_ERROR,\r\n});\r\nexport function getCertificationAction() {\r\n  return (dispatch) => {\r\n    dispatch(getEditCertificationsAction());\r\n    let id = 1;\r\n    clienteAxios\r\n      .get(`http://localhost:9001/dxc/certifications/certificats/${id}`)\r\n      .then((resp) => {\r\n        console.log(\"get Certification by id\", resp.data);\r\n        dispatch(getCertificationEditExito(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(getCertificationEditError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getEditCertificationsAction = (id) => ({\r\n  type: GET_CERTIFICATION_EDIT,\r\n});\r\n\r\nexport const getCertificationEditExito = (certifications) => ({\r\n  type: CERTIFICATION_EDIT_SUCCESS,\r\n  payload: certifications,\r\n});\r\n\r\nexport const getCertificationEditError = () => ({\r\n  type: CERTIFICATION_EDIT_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js",["794","795","796","797","798"],"import {\r\n  ADD_CLIENT,\r\n  ADD_CLIENT_SUCCESS,\r\n  ADD_CLIENT_ERROR,\r\n  START_DOWNLOAD_CLIENTS,\r\n  CLIENT_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_CLIENT__ERROR,\r\n  GET_CLIENT_REMOVE,\r\n  DELETE_CLIENT_SUCCESS,\r\n  DELETE_CLIENT_ERROR,\r\n  GET_CLIENT_EDIT,\r\n  CLIENT_EDIT_SUCCESS,\r\n  CLIENT_EDIT_ERROR,\r\n  BEGIN_CLIENT_EDIT,\r\n  EDITION_CLIENT_SUCCESS,\r\n  EDIT_CLIENT_ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\n//créer un nouveau client - fonction principale\r\nexport function createNewClientAction(client) {\r\n  console.log(\"client\", client);\r\n  return (dispatch) => {\r\n    dispatch(newClient());\r\n\r\n    clienteAxios\r\n      .post(\"http://localhost:9004/DXC/clients/addClient\", client)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //si se inserta correctamente\r\n        dispatch(addNewClientSuccess(client));\r\n        Swal.fire({\r\n          text: \"le Client été ajouter avec succés\",\r\n          timer: 1500,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewClientError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newClient = () => ({\r\n  type: ADD_CLIENT,\r\n});\r\n\r\nexport const addNewClientSuccess = (client) => ({\r\n  type: ADD_CLIENT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const addNewClientError = (error) => ({\r\n  type: ADD_CLIENT_ERROR,\r\n});\r\n\r\n//obtenir la liste des clients de clientsReducer (voir API)\r\nexport function getClientsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getClientsStart());\r\n\r\n    //interroger l'API\r\n    clienteAxios\r\n      .get(\"http://localhost:9004/DXC/clients/allClients\")\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(downloadClientsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaClientsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getClientsStart = () => ({\r\n  type: START_DOWNLOAD_CLIENTS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadClientsSuccessful = (client) => ({\r\n  type: CLIENT_DOWNLOAD_SUCCESSFUL,\r\n  payload: client,\r\n});\r\n\r\nexport const descargaClientsError = () => ({\r\n  type: DOWNLOAD_CLIENT__ERROR,\r\n});\r\n//fonction pour obtenir le client à modifier\r\nexport function getClientAcoution(id) {\r\n  return (dispatch) => {\r\n    dispatch(getEditClientAction());\r\n\r\n    //obtenir l'api de  le client\r\n    clienteAxios\r\n      .get(`http://localhost:9004/DXC/clients/Client/${id}`)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        dispatch(getClientEditSuccess(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(getClientEditError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getEditClientAction = (id) => ({\r\n  type: GET_CLIENT_EDIT,\r\n});\r\n\r\nexport const getClientEditSuccess = (client) => ({\r\n  type: CLIENT_EDIT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const getClientEditError = () => ({\r\n  type: CLIENT_EDIT_ERROR,\r\n});\r\n\r\n//MODIFIER un client DANS L'API ET L'ETAT\r\nexport function editClientAction(client) {\r\n  return (dispatch) => {\r\n    dispatch(startEditClient());\r\n\r\n    //interrogez l'API et envoyez une méthode put à mettre à jour\r\n    clienteAxios\r\n\r\n      .put(`http://localhost:9004/DXC/clients/updateClient`, client)\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(editClientSuccess(resp.data));\r\n        Swal.fire({\r\n          text: \"le client été modifier avec succés\",\r\n          timer: 1500,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(editClientError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const startEditClient = () => ({\r\n  type: BEGIN_CLIENT_EDIT,\r\n});\r\n\r\nexport const editClientSuccess = (client) => ({\r\n  type: EDITION_CLIENT_SUCCESS,\r\n  payload: client,\r\n});\r\n\r\nexport const editClientError = () => ({\r\n  type: EDIT_CLIENT_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js",["799"],"import {\r\n  ADD_CONTRAT,\r\n  ADD_CONTRAT_SUCCESS,\r\n  ADD_CONTRAT_ERROR,\r\n  START_DOWNLOAD_CONTRATS,\r\n  CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_CONTRAT__ERROR,\r\n  GET_CONTRAT_EDIT,\r\n  CONTRAT_EDIT_SUCCESS,\r\n  CONTRAT_EDIT_ERROR,\r\n  BEGIN_CONTRAT_EDIT,\r\n  EDITION_CONTRAT_SUCCESS,\r\n  EDIT_CONTRAT_ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\n//créer un nouveau contrat - fonction principale\r\nexport function createNewContratAction(contrat) {\r\n  console.log(\"contrat\", contrat);\r\n  return (dispatch) => {\r\n    dispatch(newContrat());\r\n\r\n    clienteAxios\r\n      .post(\"http://localhost:9003/DXC/contrats/addContrat\", contrat)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //si se inserta correctamente\r\n        dispatch(addNewContratSuccess(contrat));\r\n        Swal.fire({\r\n          text: \"le Contrat été ajouter avec succés\",\r\n          timer: 1500,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewContratError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newContrat = () => ({\r\n  type: ADD_CONTRAT,\r\n});\r\n\r\nexport const addNewContratSuccess = (contrat) => ({\r\n  type: ADD_CONTRAT_SUCCESS,\r\n  payload: contrat,\r\n});\r\n\r\nexport const addNewContratError = (error) => ({\r\n  type: ADD_CONTRAT_ERROR,\r\n});\r\n\r\n//obtenir la liste des contrats de contratsReducer (voir API)\r\nexport function getContratsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getContratsStart());\r\n\r\n    // interroger l'API\r\n    clienteAxios\r\n      .get(\"http://localhost:9003/DXC/contrats/allContrats\")\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(downloadContratsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaContratsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getContratsStart = () => ({\r\n  type: START_DOWNLOAD_CONTRATS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadContratsSuccessful = (contrat) => ({\r\n  type: CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n  payload: contrat,\r\n});\r\n\r\nexport const descargaContratsError = () => ({\r\n  type: DOWNLOAD_CONTRAT__ERROR,\r\n});\r\n//fonction pour obtenir le contrat à modifier\r\nexport function getContratAction(id) {\r\n  return (dispatch) => {\r\n    dispatch(getEditContratAction());\r\n\r\n    //obtenir l'api de  le Contrat\r\n    clienteAxios\r\n      .get(`http://localhost:9003/DXC/contrats/Contrat/${id}`)\r\n      .then((resp) => {\r\n        // console.log(\"reponse data\",resp.data);\r\n        dispatch(getContratEditSuccess(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(getContratEditError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getEditContratAction = (id) => ({\r\n  type: GET_CONTRAT_EDIT,\r\n});\r\n\r\nexport const getContratEditSuccess = (contrat) => ({\r\n  type: CONTRAT_EDIT_SUCCESS,\r\n  payload: contrat,\r\n});\r\n\r\nexport const getContratEditError = () => ({\r\n  type: CONTRAT_EDIT_ERROR,\r\n});\r\n\r\n//MODIFIER un contrat DANS L'API ET L'ETAT\r\nexport function editContratAction(contrat) {\r\n  return (dispatch) => {\r\n    dispatch(startEditContrat());\r\n\r\n    //interrogez l'API et envoyez une méthode put à mettre à jour\r\n    clienteAxios\r\n      .put(`http://localhost:9003/DXC/contrats/updateContrat`, contrat)\r\n      .then((resp) => {\r\n        //console.log(resp);\r\n        dispatch(editContratSuccess(resp.data));\r\n        Swal.fire({\r\n          text: \"le Contrat été modifier avec succés\",\r\n          timer: 1500,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(editContratError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const startEditContrat = () => ({\r\n  type: BEGIN_CONTRAT_EDIT,\r\n});\r\n\r\nexport const editContratSuccess = (contrat) => ({\r\n  type: EDITION_CONTRAT_SUCCESS,\r\n  payload: contrat,\r\n});\r\n\r\nexport const editContratError = () => ({\r\n  type: EDIT_CONTRAT_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",["800"],"import React, { useEffect } from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../Wrappers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nexport default function PageTitle(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n  });\r\n  return (\r\n    <div className={classes.pageTitleContainer}>\r\n      <Button\r\n        className={classes.headerIcon}\r\n        onClick={() => {\r\n          history.push(props.path);\r\n        }}\r\n      >\r\n        <i className=\"pe-7s-left-arrow\" style={{ color: \"black\" }} />\r\n      </Button>\r\n\r\n      <Typography className={classes.typo} variant=\"h3\" size=\"sm\">\r\n        {props.title}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js",["801","802"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  dashedBorder: {\r\n    border: \"1px dashed\",\r\n    borderColor: theme.palette.primary.main,\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  root: {\r\n    backgroundColor:\"#FFFFFF\",\r\n    minWidth: 300,\r\n    minHeight: 200,\r\n    maxHeight: 300,\r\n    border: \"3px solid #FFFFFF\",\r\n    marginBottom: \"10px\",\r\n   \r\n\r\n  },\r\n  addBtn: {\r\n    marginLeft: \"8px\",\r\n  },\r\n  Search: {\r\n    textAlign: \"initial\",\r\n    display: \"flex\",\r\n    padding: 1,\r\n    position: \"absolute\",\r\n    marginLeft: \"8px\",\r\n  },\r\n  searchTextField: {\r\n    marginLeft: \"8px\",\r\n  },\r\n  // Tabs: {\r\n  //   marginLeft: \"-50px\",\r\n  //   margiRright: \"18px\",\r\n  // },\r\n \r\n  GridForm: {\r\n    marginLeft: \"70px\",\r\n    margin: \"20px 0px 20px 0px\",\r\n    backgroundColor: \"transparent\",\r\n    maxWidth: 1000,\r\n    \r\n  },\r\n  Form: {\r\n    marginLeft: \"60px\",\r\n    backgroundColor: \"transparent\",\r\n    maxWidth: 1100,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  Bajoute: {\r\n    textAlign: \"end\",\r\n  },\r\n  Button: {\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"6px\",\r\n    marginTop: -\"6px\",\r\n  },\r\n  \r\n  text: {\r\n    color: \"#5C59E9\",\r\n    marginLeft: \"8px\",\r\n  },\r\n  ButtonAction: {\r\n    background: \"#741F82\",\r\n    Width: 10,\r\n    Height: 5,\r\n  },\r\n  InputSearch: {\r\n    background: \"#FFFFFF\",\r\n    minWidth: 260,\r\n    Height: 26,\r\n    display: \"flex\",\r\n    marginRight: 1,\r\n    border: \"2px solid #741F82\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  ButtonSearch: {\r\n    background: \"#741F82\",\r\n    Stroke: \"Solid\",\r\n    Align: \"Inside\",\r\n    minWidth: 22,\r\n    height: 35,\r\n    color: \"#FFFFFF\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  Search: {\r\n    textAlign: \"initial\",\r\n    display: \"flex\",\r\n    padding: 8,\r\n    position: \"absolute\",\r\n  },\r\n  Visibility: {\r\n    textAlign: \"end\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: \"medium\",\r\n  },\r\n  labelDonnes: {\r\n    color: \"#000000\",\r\n    Stroke: \"Solid\",\r\n    marginTop: \"inherit\",\r\n  },\r\n\r\n  \r\n  labelinformation: {\r\n    color: \"#7978BB\",\r\n    Stroke: \"Solid\",\r\n    textAlign:\"center\",\r\n    marginTop: \"inherit\",\r\n  },\r\n  label: {\r\n    color: \"#741F82\",\r\n    Stroke: \"Solid\",\r\n    textAlign:\"center\",\r\n    marginTop: \"inherit\",\r\n  },\r\n  buttons: {\r\n    textAlign:\"center\",\r\n  },\r\n  Visib: {\r\n    background: \"#741F82\",\r\n    minWidth: 30,\r\n    height: 30,\r\n  },\r\n  title: {\r\n    fontSize: \"9\",\r\n  },\r\n  table: {\r\n    textAlign: \"centre\",\r\n  },\r\n  Bajoute: {\r\n    textAlign: \"end\",\r\n    marginLeft: \"800px\",\r\n  },\r\n  btnAjouter: {\r\n    margin: \"5px\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  tabscompt: {\r\n    textAlign:\"centre\",\r\n    \r\n  },\r\n  btnAnnuler: {\r\n    margin: \"5px\",\r\n    float: \"right\",\r\n    background: \"black\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js",["803"],"import {\r\n    ADD_COMPETANCE,\r\n    ADD_COMPETANCE_SUCCESS,\r\n    ADD_COMPETANCE_ERROR,\r\n    START_DOWNLOAD_COMPETANCES,\r\n    COMPETANCE_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_COMPETANCE__ERROR,\r\n    GET_COMPETANCE_EDIT,\r\n    COMPETANCE_EDIT_SUCCESS,\r\n    COMPETANCE_EDIT_ERROR,\r\n    BEGIN_COMPETANCE_EDIT,\r\n    EDITION_COMPETANCE_SUCCESS,\r\n    EDIT_COMPETANCE_ERROR,\r\n  } from \"../types\";\r\n  import Swal from \"sweetalert2\";\r\n  \r\n  import clienteAxios from \"../../config/axios\";\r\n  \r\n  //créer un nouveau Competance - fonction principale\r\n  export function createNewCompetanceAction(competance) {\r\n    console.log(\"competance\", competance);\r\n    return (dispatch) => {\r\n      dispatch(newCompetance());\r\n  \r\n          clienteAxios\r\n            .post(\"http://localhost:9005/DXC/competances/addCompetance\", competance)\r\n            .then((res) => {\r\n              console.log(res);\r\n              //si se inserta correctamente\r\n              dispatch(addNewCompetanceSuccess(competance));\r\n              Swal.fire({\r\n                text: 'la Competance été ajouter avec succés',\r\n                 timer: 1500 ,\r\n                  timer: 3000,\r\n                  timerProgressBar: true,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              //si hay un error\r\n              dispatch(addNewCompetanceError());\r\n            });\r\n    };\r\n  }\r\n  \r\n  export const newCompetance = () => ({\r\n    type: ADD_COMPETANCE,\r\n  });\r\n  \r\n  export const addNewCompetanceSuccess = (competance) => ({\r\n    type: ADD_COMPETANCE_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const addNewCompetanceError = (error) => ({\r\n    type: ADD_COMPETANCE_ERROR,\r\n  });\r\n  \r\n  //obtenir la liste des Competances de CompetancesReducer (voir API)\r\n  export function getCompetancesAction() {\r\n    return (dispatch) => {\r\n      dispatch(getCompetancesStart());\r\n  \r\n      // interroger l'API\r\n        clienteAxios\r\n          .get(\"http://localhost:9005/DXC/competances/allCompetances\")\r\n          .then((resp) => {\r\n            //console.log(resp);\r\n            dispatch(downloadCompetancesSuccessful(resp.data));\r\n          })\r\n          .catch((error) => {\r\n            //console.log(error);\r\n            dispatch(descargaCompetancesError());\r\n          });\r\n    };\r\n  }\r\n  \r\n  export const getCompetancesStart = () => ({\r\n    type: START_DOWNLOAD_COMPETANCES,\r\n  });\r\n  \r\n  //API de requête\r\n  export const downloadCompetancesSuccessful = (competance) => ({\r\n    type: COMPETANCE_DOWNLOAD_SUCCESSFUL,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const descargaCompetancesError = () => ({\r\n    type: DOWNLOAD_COMPETANCE__ERROR,\r\n  });\r\n  //fonction pour obtenir la Competance à modifier\r\n  export function getCompetanceAction(id) {\r\n    return (dispatch) => {\r\n      dispatch(getEditCompetanceAction());\r\n  \r\n      //obtenir l'api de  la Competance\r\n      clienteAxios\r\n        .get(`http://localhost:9005/DXC/competances/competance/${id}`)\r\n        .then((resp) => {\r\n          console.log(resp.data);\r\n          dispatch(getCompetanceEditSuccess(resp.data));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          dispatch(getCompetanceEditError());\r\n        });\r\n    };\r\n  }\r\n\r\n  \r\n  \r\n  export const getEditCompetanceAction = (id) => ({\r\n    type: GET_COMPETANCE_EDIT,\r\n  });\r\n  \r\n  export const getCompetanceEditSuccess = (competance) => ({\r\n    type: COMPETANCE_EDIT_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const getCompetanceEditError = () => ({\r\n    type: COMPETANCE_EDIT_ERROR,\r\n  });\r\n  \r\n  //MODIFIER une Competance DANS L'API ET L'ETAT\r\n  export function editCompetanceAction(competance) {\r\n    return (dispatch) => {\r\n      dispatch(startEditCompetance());\r\n  \r\n      //interrogez l'API et envoyez une méthode put à mettre à jour\r\n      clienteAxios\r\n        .put(`http://localhost:9005/DXC/competances/updateCompetance`, competance)\r\n        .then((resp) => {\r\n          //console.log(resp);\r\n          dispatch(editCompetanceSuccess(resp.data));\r\n          Swal.fire({\r\n            text: 'la Competance été modifier avec succés',\r\n              timer: 3000,\r\n              timerProgressBar: true,\r\n            })\r\n          \r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n          dispatch(editCompetanceError());\r\n          Swal.fire({\r\n            timer: 3000,\r\n            text: \"La competence n'est pas modifié\",\r\n            timeerProgressBar: true,\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const startEditCompetance = () => ({\r\n    type: BEGIN_COMPETANCE_EDIT,\r\n  });\r\n  \r\n  export const editCompetanceSuccess = (competance) => ({\r\n    type: EDITION_COMPETANCE_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const editCompetanceError = () => ({\r\n    type: EDIT_COMPETANCE_ERROR,\r\n  });\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\index.js",["804"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\serviceWorker.js",[],["805","806"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\themes\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js",["807"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Notifications from \"../../pages/notifications\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport Capabilites from \"../../pages/capabilites/Capabilites\";\r\nimport Competances from \"../../pages/competances/Competances\";\r\nimport Clients from \"../../pages/clients\";\r\n\r\nimport Ressources from \"../../pages/ressources/Ressources\";\r\nimport Activites from \"../../pages/activites/Activites\";\r\nimport Technologies from \"../../pages/technologies/Technologies\";\r\nimport Projets from \"../../pages/projets/Projets\";\r\nimport Parametres from \"../../pages/parametres/Parametres\";\r\nimport AjouterPrestation from \"../../pages/prestations/AjouterPrestation\";\r\nimport ModiferPrestation from \"../../pages/prestations/ModiferPrestation\";\r\nimport Prestations from \"../../pages/prestations/Prestations\";\r\nimport AjouteContrat from \"../../pages/contrats/AjouteContrat\";\r\nimport AjouteCompetance from \"../../pages/competances/AjouteCompetances\"\r\nimport Contrats from \"../../pages/contrats/Contrats\";\r\nimport EditContrat from \"../../pages/contrats/EditContrat\";\r\nimport ContratDetail from \"../../pages/contrats/ContratDetail\";\r\nimport AjouteClient from \"../../pages/clients/AjouteClient\";\r\nimport EditClient from \"../../pages/clients/EditClient\";\r\nimport AffichageClient from \"../../pages/clients/AffichageClient\";\r\nimport AjouterRessource from \"../../pages/ressources/AjouterRessource\";\r\nimport ModiferRessource from \"../../pages/ressources/ModiferRessource\";\r\nimport AfficherRessource from \"../../pages/ressources/AfficherRessource\";\r\nimport Certifications from \"../../pages/certifications/Certifications\";\r\nimport EditCompetance from \"../../pages/competances/EditCompetance\";\r\nimport CompetanceDetail from \"../../pages/competances/CompetanceDetail\";\r\nimport AjouterCertification from \"../../pages/certifications/AjouterCertification\";\r\nimport Profil from \"../../pages/profil/Profil\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            {/*  route dashboard  */}\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/prestations/profil\" component={Profil} />\r\n            <Route path=\"/app/capabilites\" component={Capabilites} />\r\n            <Route path=\"/app/competances/allCompetances\" component={Competances} />\r\n            <Route\r\n              path=\"/app/competances/ajouteCompetance\"\r\n              component={AjouteCompetance}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/ListeCertifications\"\r\n              component={Certifications}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/AjouterCertification\"\r\n              component={AjouterCertification}\r\n            />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n\r\n            <Route\r\n              path=\"/app/prestations/ListePrestations\"\r\n              component={Prestations}\r\n            />\r\n            <Route path=\"/app/prestations/clients\" component={Clients} />\r\n            <Route path=\"/app/clients/AjouteClient\" component={AjouteClient} />\r\n            <Route\r\n              path=\"/app/clients/AffichageClients\"\r\n              component={AffichageClient}\r\n            />\r\n            <Route path=\"/app/prestations/Contrats\" component={Contrats} />\r\n            <Route\r\n              path=\"/app/Contrats/ContratDetail/:id\"\r\n              component={ContratDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/AjouteContrat\"\r\n              component={AjouteContrat}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/EditContrat/:id\"\r\n              component={EditContrat}\r\n            />\r\n            <Route path=\"/app/prestations/ressources\" component={Ressources} />\r\n\r\n            {/*  routes Competances  */}\r\n            <Route\r\n              path=\"/app/competances/allCompetances\"\r\n              component={Competances}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/ajouteCompetance\"\r\n              component={AjouteCompetance}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/CompetanceDetail/:id\"\r\n              component={CompetanceDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/competances/EditCompetance/:id\"\r\n              component={EditCompetance}\r\n            />\r\n\r\n            {/*  routes prestations  */}\r\n            <Route\r\n              path=\"/app/prestations/allPrestation\"\r\n              component={Prestations}\r\n            />\r\n            <Route\r\n              path=\"/app/prestations/AjouterPrestation\"\r\n              component={AjouterPrestation}\r\n            />\r\n            {/* <Route path=\"/app/prestations/ModiferPrestation/:id\"  component={ModiferPrestation} />\r\n                <Route path=\"/app/prestations/AficherPrestation/:id\" component={AfficherPrestation}/> */}\r\n\r\n            {/*  routes clients  */}\r\n            <Route path=\"/app/prestations/clients\" component={Clients} />\r\n            <Route path=\"/app/clients/AjouteClient\" component={AjouteClient} />\r\n            <Route\r\n              path=\"/app/clients/AffichageClient/:id\"\r\n              component={AffichageClient}\r\n            />\r\n            <Route path=\"/app/clients/EditClient/:id\" component={EditClient} />\r\n\r\n            {/*  routes Contrats  */}\r\n            <Route path=\"/app/prestations/Contrats\" component={Contrats} />\r\n            <Route\r\n              path=\"/app/Contrats/ContratDetail/:id\"\r\n              component={ContratDetail}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/AjouteContrat\"\r\n              component={AjouteContrat}\r\n            />\r\n            <Route\r\n              path=\"/app/Contrats/EditContrat/:id\"\r\n              component={EditContrat}\r\n            />\r\n\r\n            {/*  routes Ressources  */}\r\n            <Route path=\"/app/prestations/ressources\" component={Ressources} />\r\n            <Route\r\n              path=\"/app/ressources/AjouterRessource\"\r\n              component={AjouterRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/ModiferRessource/:id\"\r\n              component={ModiferRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/AfficherRessource/:id\"\r\n              component={AfficherRessource}\r\n            />\r\n\r\n            <Route path=\"/app/prestations/activites\" component={Activites} />\r\n            <Route\r\n              path=\"/app/prestations/technologies\"\r\n              component={Technologies}\r\n            />\r\n            <Route path=\"/app/prestations/projets\" component={Projets} />\r\n            <Route path=\"/app/parametres\" component={Parametres} />\r\n            <Route\r\n              path=\"/app/ressources/AjouterRessource\"\r\n              component={AjouterRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/ModiferRessource/:id\"\r\n              component={ModiferRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/AfficherRessource/:id\"\r\n              component={AfficherRessource}\r\n            />\r\n\r\n            <Route\r\n              path=\"/app/prestations/AjouterPrestation\"\r\n              component={AjouterPrestation}\r\n            />\r\n            <Route\r\n              path=\"/app/prestations/ModiferPrestation/:id\"\r\n              component={ModiferPrestation}\r\n            />\r\n            {/* <Route\r\n              path=\"/app/prestations/AficherPrestation/:id\"\r\n              component={AfficherPrestation}\r\n            /> */}\r\n            <Route\r\n              path=\"/app/certifications/ListeCertifications\"\r\n              component={Certifications}\r\n            />\r\n            <Route\r\n              path=\"/app/certifications/AjouterCertification\"\r\n              component={AjouterCertification}\r\n            />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route path=\"/app/capabilites\" component={Capabilites} />\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <p>\r\n                {/* © Copyright 2022 DXC Technology Company. All rights reserved */}\r\n              </p>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["808"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["809"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["810"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["811"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["812","813","814"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\AjouterCertification.js",["815","816","817"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["818","819","820","821"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js",["822","823","824","825"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",["826","827","828"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",["829","830"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["831","832","833","834","835"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["836","837","838","839","840","841","842","843"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js",["844","845"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["846","847","848","849"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["850"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["851"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["852","853","854","855","856"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["857","858","859","860"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",["861"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js",["862","863","864","865","866","867","868","869","870","871","872"],"import React, { useState } from 'react';\r\nimport { Button, Card, CardContent, CardHeader, Container, Divider, TextField, Typography } from '@material-ui/core';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { styled } from '@material-ui/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SettingsPassword from './SettingsPassword';\r\nimport SettingsNotifications from './SettingsNotifications';\r\nexport default function Parametres() {\r\n  return (\r\n  <>\r\n    <PageTitle title=\"Parametres\"  path=\"/app/dashboard\"/>\r\n      <Box\r\n      component=\"main\"\r\n      sx={{\r\n        flexGrow: 1,\r\n        py: 8\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <SettingsNotifications />\r\n        <Box sx={{ pt: 3 }}>\r\n           <SettingsPassword/>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n    \r\n     \r\n   </>  \r\n   \r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js",["873","874"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js",["875","876","877","878","879","880"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js",["881","882"],"import React, { useState } from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport { DarkModeContext } from \"../../context/darkModeContext\";\r\nimport { useContext } from \"react\";\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  let history = useHistory();\r\n  const { dispatch } = useContext(DarkModeContext);\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  function Profil() {\r\n    history.push(\"/app/prestations/profil\");\r\n  }\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <i\r\n              className=\"pe-7s-left-arrow\"\r\n              classes={{ root: classes.headerIcon }}\r\n              style={{ color: \"black\" }}\r\n            ></i>\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <div>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/DXC-Logo.svg`}\r\n            alt=\"logo_dxc\"\r\n            className={classes.logoimage}\r\n          />\r\n        </div>\r\n        <div className={classes.grow} />\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          className={classes.headerMenuButton}\r\n        ></IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <i\r\n            className=\"pe-7s-bell\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          ></i>\r\n          {/* <NotificationsIcon\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          /> */}\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <i\r\n            className=\"pe-7s-global\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n            onClick={() => dispatch({ type: \"TOGGLE\" })}\r\n          ></i>\r\n        </IconButton>\r\n        {/* <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n        >\r\n          <Brightness6\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          />\r\n        </IconButton> */}\r\n\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <i\r\n            className=\"pe-7s-user\"\r\n            classes={{ root: classes.headerIcon }}\r\n            style={{ color: \"black\" }}\r\n          ></i>\r\n        </IconButton>\r\n\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        ></Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Post Occupé\r\n            </Typography>\r\n          </div>\r\n          <Button onClick={Profil}>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n                      <AccountIcon className={classes.profileMenuIcon}  /> Profile\r\n          </MenuItem>\r\n </Button> \r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",["883","884","885","886","887","888","889"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",["890"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\certificationsActions.js",["891"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js",["892","893","894","895","896"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js",["897"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js",["898"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",["899"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js",["900","901"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js",["902"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\settingsPassword.js",[],["903","904"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\profil.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\SettingsPassword.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\Profil.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\SettingsNotifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\CompetencesProfil.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\CertificationProfil.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\InformationsProfil.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\SECOUR V\\MOI Localhost\\dxc-repo\\dxc-repo\\src\\pages\\profil\\Tabs.js",[],{"ruleId":"905","severity":1,"message":"906","line":8,"column":13,"nodeType":"907","messageId":"908","endLine":8,"endColumn":26},{"ruleId":"909","replacedBy":"910"},{"ruleId":"911","replacedBy":"912"},{"ruleId":"909","replacedBy":"913"},{"ruleId":"911","replacedBy":"914"},{"ruleId":"905","severity":1,"message":"915","line":2,"column":25,"nodeType":"907","messageId":"908","endLine":2,"endColumn":33},{"ruleId":"916","severity":1,"message":"917","line":23,"column":3,"nodeType":"918","endLine":99,"endColumn":4},{"ruleId":"916","severity":1,"message":"917","line":24,"column":3,"nodeType":"918","endLine":104,"endColumn":4},{"ruleId":"916","severity":1,"message":"917","line":11,"column":1,"nodeType":"918","endLine":31,"endColumn":2},{"ruleId":"916","severity":1,"message":"917","line":27,"column":1,"nodeType":"918","endLine":125,"endColumn":2},{"ruleId":"905","severity":1,"message":"919","line":23,"column":9,"nodeType":"907","messageId":"908","endLine":23,"endColumn":16},{"ruleId":"905","severity":1,"message":"920","line":29,"column":27,"nodeType":"907","messageId":"908","endLine":29,"endColumn":45},{"ruleId":"905","severity":1,"message":"921","line":30,"column":15,"nodeType":"907","messageId":"908","endLine":30,"endColumn":21},{"ruleId":"905","severity":1,"message":"922","line":5,"column":10,"nodeType":"907","messageId":"908","endLine":5,"endColumn":30},{"ruleId":"905","severity":1,"message":"923","line":21,"column":3,"nodeType":"907","messageId":"908","endLine":21,"endColumn":25},{"ruleId":"924","severity":1,"message":"925","line":75,"column":6,"nodeType":"926","endLine":75,"endColumn":8,"suggestions":"927"},{"ruleId":"905","severity":1,"message":"928","line":1,"column":17,"nodeType":"907","messageId":"908","endLine":1,"endColumn":26},{"ruleId":"905","severity":1,"message":"929","line":1,"column":28,"nodeType":"907","messageId":"908","endLine":1,"endColumn":36},{"ruleId":"905","severity":1,"message":"930","line":8,"column":23,"nodeType":"907","messageId":"908","endLine":8,"endColumn":34},{"ruleId":"905","severity":1,"message":"931","line":9,"column":32,"nodeType":"907","messageId":"908","endLine":9,"endColumn":51},{"ruleId":"905","severity":1,"message":"932","line":12,"column":8,"nodeType":"907","messageId":"908","endLine":12,"endColumn":20},{"ruleId":"924","severity":1,"message":"933","line":50,"column":6,"nodeType":"926","endLine":50,"endColumn":29,"suggestions":"934"},{"ruleId":"905","severity":1,"message":"935","line":13,"column":10,"nodeType":"907","messageId":"908","endLine":13,"endColumn":28},{"ruleId":"905","severity":1,"message":"936","line":18,"column":9,"nodeType":"907","messageId":"908","endLine":18,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":23,"column":6,"nodeType":"926","endLine":23,"endColumn":8,"suggestions":"937"},{"ruleId":"905","severity":1,"message":"938","line":60,"column":9,"nodeType":"907","messageId":"908","endLine":60,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":67,"column":6,"nodeType":"926","endLine":67,"endColumn":8,"suggestions":"939"},{"ruleId":"905","severity":1,"message":"930","line":7,"column":23,"nodeType":"907","messageId":"908","endLine":7,"endColumn":34},{"ruleId":"924","severity":1,"message":"940","line":44,"column":6,"nodeType":"926","endLine":44,"endColumn":29,"suggestions":"941"},{"ruleId":"905","severity":1,"message":"942","line":7,"column":8,"nodeType":"907","messageId":"908","endLine":7,"endColumn":14},{"ruleId":"905","severity":1,"message":"936","line":16,"column":9,"nodeType":"907","messageId":"908","endLine":16,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":21,"column":6,"nodeType":"926","endLine":21,"endColumn":8,"suggestions":"943"},{"ruleId":"905","severity":1,"message":"944","line":62,"column":9,"nodeType":"907","messageId":"908","endLine":62,"endColumn":14},{"ruleId":"905","severity":1,"message":"938","line":36,"column":9,"nodeType":"907","messageId":"908","endLine":36,"endColumn":20},{"ruleId":"924","severity":1,"message":"945","line":62,"column":6,"nodeType":"926","endLine":62,"endColumn":17,"suggestions":"946"},{"ruleId":"905","severity":1,"message":"944","line":65,"column":9,"nodeType":"907","messageId":"908","endLine":65,"endColumn":14},{"ruleId":"905","severity":1,"message":"944","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":14},{"ruleId":"905","severity":1,"message":"947","line":6,"column":10,"nodeType":"907","messageId":"908","endLine":6,"endColumn":13},{"ruleId":"905","severity":1,"message":"938","line":53,"column":9,"nodeType":"907","messageId":"908","endLine":53,"endColumn":20},{"ruleId":"905","severity":1,"message":"948","line":20,"column":8,"nodeType":"907","messageId":"908","endLine":20,"endColumn":25},{"ruleId":"905","severity":1,"message":"949","line":22,"column":8,"nodeType":"907","messageId":"908","endLine":22,"endColumn":13},{"ruleId":"905","severity":1,"message":"950","line":25,"column":8,"nodeType":"907","messageId":"908","endLine":25,"endColumn":18},{"ruleId":"905","severity":1,"message":"951","line":27,"column":8,"nodeType":"907","messageId":"908","endLine":27,"endColumn":13},{"ruleId":"905","severity":1,"message":"936","line":39,"column":9,"nodeType":"907","messageId":"908","endLine":39,"endColumn":16},{"ruleId":"905","severity":1,"message":"944","line":40,"column":9,"nodeType":"907","messageId":"908","endLine":40,"endColumn":14},{"ruleId":"924","severity":1,"message":"925","line":45,"column":6,"nodeType":"926","endLine":45,"endColumn":8,"suggestions":"952"},{"ruleId":"905","severity":1,"message":"953","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":13},{"ruleId":"905","severity":1,"message":"930","line":7,"column":23,"nodeType":"907","messageId":"908","endLine":7,"endColumn":34},{"ruleId":"905","severity":1,"message":"954","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":19},{"ruleId":"905","severity":1,"message":"955","line":34,"column":10,"nodeType":"907","messageId":"908","endLine":34,"endColumn":17},{"ruleId":"905","severity":1,"message":"956","line":34,"column":19,"nodeType":"907","messageId":"908","endLine":34,"endColumn":29},{"ruleId":"924","severity":1,"message":"957","line":58,"column":6,"nodeType":"926","endLine":58,"endColumn":29,"suggestions":"958"},{"ruleId":"905","severity":1,"message":"959","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":13},{"ruleId":"905","severity":1,"message":"960","line":51,"column":10,"nodeType":"907","messageId":"908","endLine":51,"endColumn":20},{"ruleId":"905","severity":1,"message":"961","line":51,"column":22,"nodeType":"907","messageId":"908","endLine":51,"endColumn":35},{"ruleId":"924","severity":1,"message":"925","line":56,"column":6,"nodeType":"926","endLine":56,"endColumn":8,"suggestions":"962"},{"ruleId":"905","severity":1,"message":"963","line":1,"column":28,"nodeType":"907","messageId":"908","endLine":1,"endColumn":34},{"ruleId":"905","severity":1,"message":"919","line":23,"column":9,"nodeType":"907","messageId":"908","endLine":23,"endColumn":16},{"ruleId":"905","severity":1,"message":"938","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":20},{"ruleId":"905","severity":1,"message":"964","line":80,"column":9,"nodeType":"907","messageId":"908","endLine":80,"endColumn":19},{"ruleId":"905","severity":1,"message":"965","line":224,"column":9,"nodeType":"907","messageId":"908","endLine":224,"endColumn":14},{"ruleId":"905","severity":1,"message":"938","line":65,"column":9,"nodeType":"907","messageId":"908","endLine":65,"endColumn":20},{"ruleId":"905","severity":1,"message":"951","line":14,"column":8,"nodeType":"907","messageId":"908","endLine":14,"endColumn":13},{"ruleId":"905","severity":1,"message":"949","line":16,"column":8,"nodeType":"907","messageId":"908","endLine":16,"endColumn":13},{"ruleId":"905","severity":1,"message":"936","line":38,"column":9,"nodeType":"907","messageId":"908","endLine":38,"endColumn":16},{"ruleId":"905","severity":1,"message":"944","line":39,"column":9,"nodeType":"907","messageId":"908","endLine":39,"endColumn":14},{"ruleId":"924","severity":1,"message":"925","line":44,"column":6,"nodeType":"926","endLine":44,"endColumn":8,"suggestions":"966"},{"ruleId":"905","severity":1,"message":"953","line":45,"column":9,"nodeType":"907","messageId":"908","endLine":45,"endColumn":13},{"ruleId":"905","severity":1,"message":"967","line":2,"column":8,"nodeType":"907","messageId":"908","endLine":2,"endColumn":17},{"ruleId":"905","severity":1,"message":"968","line":4,"column":11,"nodeType":"907","messageId":"908","endLine":4,"endColumn":19},{"ruleId":"905","severity":1,"message":"969","line":5,"column":24,"nodeType":"907","messageId":"908","endLine":5,"endColumn":41},{"ruleId":"905","severity":1,"message":"970","line":6,"column":16,"nodeType":"907","messageId":"908","endLine":6,"endColumn":25},{"ruleId":"905","severity":1,"message":"971","line":8,"column":3,"nodeType":"907","messageId":"908","endLine":8,"endColumn":10},{"ruleId":"905","severity":1,"message":"972","line":9,"column":3,"nodeType":"907","messageId":"908","endLine":9,"endColumn":7},{"ruleId":"905","severity":1,"message":"973","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":11},{"ruleId":"905","severity":1,"message":"974","line":15,"column":8,"nodeType":"907","messageId":"908","endLine":15,"endColumn":26},{"ruleId":"905","severity":1,"message":"969","line":5,"column":24,"nodeType":"907","messageId":"908","endLine":5,"endColumn":41},{"ruleId":"905","severity":1,"message":"975","line":7,"column":16,"nodeType":"907","messageId":"908","endLine":7,"endColumn":29},{"ruleId":"976","severity":1,"message":"977","line":122,"column":7,"nodeType":"978","messageId":"979","endLine":122,"endColumn":13},{"ruleId":"905","severity":1,"message":"980","line":68,"column":9,"nodeType":"907","messageId":"908","endLine":68,"endColumn":11},{"ruleId":"905","severity":1,"message":"981","line":8,"column":3,"nodeType":"907","messageId":"908","endLine":8,"endColumn":20},{"ruleId":"905","severity":1,"message":"982","line":9,"column":3,"nodeType":"907","messageId":"908","endLine":9,"endColumn":24},{"ruleId":"905","severity":1,"message":"983","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":22},{"ruleId":"976","severity":1,"message":"984","line":37,"column":11,"nodeType":"978","messageId":"979","endLine":37,"endColumn":16},{"ruleId":"976","severity":1,"message":"984","line":141,"column":11,"nodeType":"978","messageId":"979","endLine":141,"endColumn":16},{"ruleId":"976","severity":1,"message":"984","line":135,"column":11,"nodeType":"978","messageId":"979","endLine":135,"endColumn":16},{"ruleId":"905","severity":1,"message":"975","line":2,"column":8,"nodeType":"907","messageId":"908","endLine":2,"endColumn":21},{"ruleId":"976","severity":1,"message":"977","line":97,"column":3,"nodeType":"978","messageId":"979","endLine":97,"endColumn":9},{"ruleId":"976","severity":1,"message":"985","line":141,"column":3,"nodeType":"978","messageId":"979","endLine":141,"endColumn":10},{"ruleId":"976","severity":1,"message":"984","line":34,"column":19,"nodeType":"978","messageId":"979","endLine":34,"endColumn":24},{"ruleId":"905","severity":1,"message":"906","line":9,"column":13,"nodeType":"907","messageId":"908","endLine":9,"endColumn":26},{"ruleId":"909","replacedBy":"986"},{"ruleId":"911","replacedBy":"987"},{"ruleId":"905","severity":1,"message":"915","line":2,"column":25,"nodeType":"907","messageId":"908","endLine":2,"endColumn":33},{"ruleId":"916","severity":1,"message":"917","line":23,"column":3,"nodeType":"918","endLine":99,"endColumn":4},{"ruleId":"916","severity":1,"message":"917","line":24,"column":3,"nodeType":"918","endLine":104,"endColumn":4},{"ruleId":"916","severity":1,"message":"917","line":11,"column":1,"nodeType":"918","endLine":31,"endColumn":2},{"ruleId":"916","severity":1,"message":"917","line":27,"column":1,"nodeType":"918","endLine":125,"endColumn":2},{"ruleId":"905","severity":1,"message":"922","line":5,"column":10,"nodeType":"907","messageId":"908","endLine":5,"endColumn":30},{"ruleId":"905","severity":1,"message":"923","line":21,"column":3,"nodeType":"907","messageId":"908","endLine":21,"endColumn":25},{"ruleId":"924","severity":1,"message":"925","line":75,"column":6,"nodeType":"926","endLine":75,"endColumn":8,"suggestions":"988"},{"ruleId":"905","severity":1,"message":"919","line":23,"column":9,"nodeType":"907","messageId":"908","endLine":23,"endColumn":16},{"ruleId":"905","severity":1,"message":"920","line":29,"column":27,"nodeType":"907","messageId":"908","endLine":29,"endColumn":45},{"ruleId":"905","severity":1,"message":"921","line":30,"column":15,"nodeType":"907","messageId":"908","endLine":30,"endColumn":21},{"ruleId":"905","severity":1,"message":"935","line":13,"column":10,"nodeType":"907","messageId":"908","endLine":13,"endColumn":28},{"ruleId":"905","severity":1,"message":"936","line":18,"column":9,"nodeType":"907","messageId":"908","endLine":18,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":23,"column":6,"nodeType":"926","endLine":23,"endColumn":8,"suggestions":"989"},{"ruleId":"905","severity":1,"message":"938","line":60,"column":9,"nodeType":"907","messageId":"908","endLine":60,"endColumn":20},{"ruleId":"905","severity":1,"message":"930","line":8,"column":23,"nodeType":"907","messageId":"908","endLine":8,"endColumn":34},{"ruleId":"905","severity":1,"message":"931","line":9,"column":32,"nodeType":"907","messageId":"908","endLine":9,"endColumn":51},{"ruleId":"905","severity":1,"message":"932","line":12,"column":8,"nodeType":"907","messageId":"908","endLine":12,"endColumn":20},{"ruleId":"924","severity":1,"message":"933","line":50,"column":6,"nodeType":"926","endLine":50,"endColumn":29,"suggestions":"990"},{"ruleId":"905","severity":1,"message":"938","line":36,"column":9,"nodeType":"907","messageId":"908","endLine":36,"endColumn":20},{"ruleId":"924","severity":1,"message":"945","line":62,"column":6,"nodeType":"926","endLine":62,"endColumn":17,"suggestions":"991"},{"ruleId":"905","severity":1,"message":"944","line":65,"column":9,"nodeType":"907","messageId":"908","endLine":65,"endColumn":14},{"ruleId":"905","severity":1,"message":"947","line":6,"column":10,"nodeType":"907","messageId":"908","endLine":6,"endColumn":13},{"ruleId":"905","severity":1,"message":"938","line":53,"column":9,"nodeType":"907","messageId":"908","endLine":53,"endColumn":20},{"ruleId":"905","severity":1,"message":"930","line":7,"column":23,"nodeType":"907","messageId":"908","endLine":7,"endColumn":34},{"ruleId":"905","severity":1,"message":"954","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":19},{"ruleId":"905","severity":1,"message":"955","line":34,"column":10,"nodeType":"907","messageId":"908","endLine":34,"endColumn":17},{"ruleId":"905","severity":1,"message":"956","line":34,"column":19,"nodeType":"907","messageId":"908","endLine":34,"endColumn":29},{"ruleId":"924","severity":1,"message":"957","line":58,"column":6,"nodeType":"926","endLine":58,"endColumn":29,"suggestions":"992"},{"ruleId":"905","severity":1,"message":"948","line":20,"column":8,"nodeType":"907","messageId":"908","endLine":20,"endColumn":25},{"ruleId":"905","severity":1,"message":"949","line":22,"column":8,"nodeType":"907","messageId":"908","endLine":22,"endColumn":13},{"ruleId":"905","severity":1,"message":"950","line":25,"column":8,"nodeType":"907","messageId":"908","endLine":25,"endColumn":18},{"ruleId":"905","severity":1,"message":"951","line":27,"column":8,"nodeType":"907","messageId":"908","endLine":27,"endColumn":13},{"ruleId":"905","severity":1,"message":"936","line":39,"column":9,"nodeType":"907","messageId":"908","endLine":39,"endColumn":16},{"ruleId":"905","severity":1,"message":"944","line":40,"column":9,"nodeType":"907","messageId":"908","endLine":40,"endColumn":14},{"ruleId":"924","severity":1,"message":"925","line":45,"column":6,"nodeType":"926","endLine":45,"endColumn":8,"suggestions":"993"},{"ruleId":"905","severity":1,"message":"953","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":13},{"ruleId":"905","severity":1,"message":"930","line":7,"column":23,"nodeType":"907","messageId":"908","endLine":7,"endColumn":34},{"ruleId":"924","severity":1,"message":"940","line":44,"column":6,"nodeType":"926","endLine":44,"endColumn":29,"suggestions":"994"},{"ruleId":"905","severity":1,"message":"942","line":7,"column":8,"nodeType":"907","messageId":"908","endLine":7,"endColumn":14},{"ruleId":"905","severity":1,"message":"936","line":16,"column":9,"nodeType":"907","messageId":"908","endLine":16,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":21,"column":6,"nodeType":"926","endLine":21,"endColumn":8,"suggestions":"995"},{"ruleId":"905","severity":1,"message":"944","line":62,"column":9,"nodeType":"907","messageId":"908","endLine":62,"endColumn":14},{"ruleId":"905","severity":1,"message":"944","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":14},{"ruleId":"924","severity":1,"message":"925","line":67,"column":6,"nodeType":"926","endLine":67,"endColumn":8,"suggestions":"996"},{"ruleId":"905","severity":1,"message":"963","line":1,"column":28,"nodeType":"907","messageId":"908","endLine":1,"endColumn":34},{"ruleId":"905","severity":1,"message":"919","line":23,"column":9,"nodeType":"907","messageId":"908","endLine":23,"endColumn":16},{"ruleId":"905","severity":1,"message":"938","line":46,"column":9,"nodeType":"907","messageId":"908","endLine":46,"endColumn":20},{"ruleId":"905","severity":1,"message":"964","line":80,"column":9,"nodeType":"907","messageId":"908","endLine":80,"endColumn":19},{"ruleId":"905","severity":1,"message":"965","line":224,"column":9,"nodeType":"907","messageId":"908","endLine":224,"endColumn":14},{"ruleId":"905","severity":1,"message":"959","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":13},{"ruleId":"905","severity":1,"message":"960","line":51,"column":10,"nodeType":"907","messageId":"908","endLine":51,"endColumn":20},{"ruleId":"905","severity":1,"message":"961","line":51,"column":22,"nodeType":"907","messageId":"908","endLine":51,"endColumn":35},{"ruleId":"924","severity":1,"message":"925","line":56,"column":6,"nodeType":"926","endLine":56,"endColumn":8,"suggestions":"997"},{"ruleId":"905","severity":1,"message":"938","line":65,"column":9,"nodeType":"907","messageId":"908","endLine":65,"endColumn":20},{"ruleId":"905","severity":1,"message":"929","line":1,"column":17,"nodeType":"907","messageId":"908","endLine":1,"endColumn":25},{"ruleId":"905","severity":1,"message":"998","line":2,"column":10,"nodeType":"907","messageId":"908","endLine":2,"endColumn":16},{"ruleId":"905","severity":1,"message":"999","line":2,"column":18,"nodeType":"907","messageId":"908","endLine":2,"endColumn":22},{"ruleId":"905","severity":1,"message":"1000","line":2,"column":24,"nodeType":"907","messageId":"908","endLine":2,"endColumn":35},{"ruleId":"905","severity":1,"message":"1001","line":2,"column":37,"nodeType":"907","messageId":"908","endLine":2,"endColumn":47},{"ruleId":"905","severity":1,"message":"1002","line":2,"column":60,"nodeType":"907","messageId":"908","endLine":2,"endColumn":67},{"ruleId":"905","severity":1,"message":"1003","line":2,"column":69,"nodeType":"907","messageId":"908","endLine":2,"endColumn":78},{"ruleId":"905","severity":1,"message":"950","line":2,"column":80,"nodeType":"907","messageId":"908","endLine":2,"endColumn":90},{"ruleId":"905","severity":1,"message":"1004","line":6,"column":10,"nodeType":"907","messageId":"908","endLine":6,"endColumn":16},{"ruleId":"905","severity":1,"message":"1005","line":7,"column":8,"nodeType":"907","messageId":"908","endLine":7,"endColumn":13},{"ruleId":"905","severity":1,"message":"1006","line":8,"column":8,"nodeType":"907","messageId":"908","endLine":8,"endColumn":12},{"ruleId":"905","severity":1,"message":"928","line":1,"column":17,"nodeType":"907","messageId":"908","endLine":1,"endColumn":26},{"ruleId":"905","severity":1,"message":"929","line":1,"column":28,"nodeType":"907","messageId":"908","endLine":1,"endColumn":36},{"ruleId":"905","severity":1,"message":"951","line":14,"column":8,"nodeType":"907","messageId":"908","endLine":14,"endColumn":13},{"ruleId":"905","severity":1,"message":"949","line":16,"column":8,"nodeType":"907","messageId":"908","endLine":16,"endColumn":13},{"ruleId":"905","severity":1,"message":"936","line":38,"column":9,"nodeType":"907","messageId":"908","endLine":38,"endColumn":16},{"ruleId":"905","severity":1,"message":"944","line":39,"column":9,"nodeType":"907","messageId":"908","endLine":39,"endColumn":14},{"ruleId":"924","severity":1,"message":"925","line":44,"column":6,"nodeType":"926","endLine":44,"endColumn":8,"suggestions":"1007"},{"ruleId":"905","severity":1,"message":"953","line":45,"column":9,"nodeType":"907","messageId":"908","endLine":45,"endColumn":13},{"ruleId":"905","severity":1,"message":"969","line":6,"column":24,"nodeType":"907","messageId":"908","endLine":6,"endColumn":41},{"ruleId":"905","severity":1,"message":"975","line":8,"column":16,"nodeType":"907","messageId":"908","endLine":8,"endColumn":29},{"ruleId":"905","severity":1,"message":"968","line":4,"column":11,"nodeType":"907","messageId":"908","endLine":4,"endColumn":19},{"ruleId":"905","severity":1,"message":"969","line":5,"column":24,"nodeType":"907","messageId":"908","endLine":5,"endColumn":41},{"ruleId":"905","severity":1,"message":"970","line":6,"column":16,"nodeType":"907","messageId":"908","endLine":6,"endColumn":25},{"ruleId":"905","severity":1,"message":"971","line":8,"column":3,"nodeType":"907","messageId":"908","endLine":8,"endColumn":10},{"ruleId":"905","severity":1,"message":"972","line":9,"column":3,"nodeType":"907","messageId":"908","endLine":9,"endColumn":7},{"ruleId":"905","severity":1,"message":"973","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":11},{"ruleId":"905","severity":1,"message":"974","line":15,"column":8,"nodeType":"907","messageId":"908","endLine":15,"endColumn":26},{"ruleId":"905","severity":1,"message":"967","line":2,"column":8,"nodeType":"907","messageId":"908","endLine":2,"endColumn":17},{"ruleId":"905","severity":1,"message":"980","line":68,"column":9,"nodeType":"907","messageId":"908","endLine":68,"endColumn":11},{"ruleId":"905","severity":1,"message":"981","line":8,"column":3,"nodeType":"907","messageId":"908","endLine":8,"endColumn":20},{"ruleId":"905","severity":1,"message":"982","line":9,"column":3,"nodeType":"907","messageId":"908","endLine":9,"endColumn":24},{"ruleId":"905","severity":1,"message":"983","line":10,"column":3,"nodeType":"907","messageId":"908","endLine":10,"endColumn":22},{"ruleId":"976","severity":1,"message":"984","line":37,"column":11,"nodeType":"978","messageId":"979","endLine":37,"endColumn":16},{"ruleId":"976","severity":1,"message":"984","line":141,"column":11,"nodeType":"978","messageId":"979","endLine":141,"endColumn":16},{"ruleId":"976","severity":1,"message":"984","line":135,"column":11,"nodeType":"978","messageId":"979","endLine":135,"endColumn":16},{"ruleId":"976","severity":1,"message":"977","line":122,"column":7,"nodeType":"978","messageId":"979","endLine":122,"endColumn":13},{"ruleId":"905","severity":1,"message":"975","line":2,"column":8,"nodeType":"907","messageId":"908","endLine":2,"endColumn":21},{"ruleId":"976","severity":1,"message":"977","line":97,"column":3,"nodeType":"978","messageId":"979","endLine":97,"endColumn":9},{"ruleId":"976","severity":1,"message":"985","line":141,"column":3,"nodeType":"978","messageId":"979","endLine":141,"endColumn":10},{"ruleId":"976","severity":1,"message":"984","line":34,"column":19,"nodeType":"978","messageId":"979","endLine":34,"endColumn":24},{"ruleId":"909","replacedBy":"1008"},{"ruleId":"911","replacedBy":"1009"},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1010"],"no-negated-in-lhs",["1011"],["1010"],["1011"],"'Redirect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'history' is assigned a value but never used.","'setImageCertificat' is assigned a value but never used.","'setImg' is assigned a value but never used.","'getPrestationsAction' is defined but never used.","'getCertificationAction' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1012"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'getCompetanceAction' is defined but never used.","'clienteAxios' is defined but never used.","React Hook useEffect has a missing dependency: 'getCompetance'. Either include it or remove the dependency array.",["1013"],"'getRessourceAction' is defined but never used.","'loading' is assigned a value but never used.",["1014"],"'validarForm' is assigned a value but never used.",["1015"],"React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["1016"],"'moment' is defined but never used.",["1017"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["1018"],"'Box' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Input' is defined but never used.","'Typography' is defined but never used.","'axios' is defined but never used.",["1019"],"'bull' is assigned a value but never used.","'getContratAction' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getContrat'. Either include it or remove the dependency array.",["1020"],"'makeStyles' is defined but never used.","'listFilter' is assigned a value but never used.","'setListFilter' is assigned a value but never used.",["1021"],"'useRef' is defined but never used.","'prestation' is assigned a value but never used.","'dates' is assigned a value but never used.",["1022"],"'PageTitle' is defined but never used.","'HomeIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'TableIcon' is defined but never used.","'Subject' is defined but never used.","'Work' is defined but never used.","'Settings' is defined but never used.","'CardMembershipIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","no-dupe-keys","Duplicate key 'Search'.","ObjectExpression","unexpected","'id' is assigned a value but never used.","'GET_CLIENT_REMOVE' is defined but never used.","'DELETE_CLIENT_SUCCESS' is defined but never used.","'DELETE_CLIENT_ERROR' is defined but never used.","Duplicate key 'timer'.","Duplicate key 'Bajoute'.",["1010"],["1011"],["1023"],["1024"],["1025"],["1026"],["1027"],["1028"],["1029"],["1030"],["1031"],["1032"],"'Button' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'TextField' is defined but never used.","'styled' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.",["1033"],["1010"],["1011"],"no-global-assign","no-unsafe-negation",{"desc":"1034","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1034","fix":"1038"},{"desc":"1034","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1034","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1034","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1034","fix":"1048"},{"desc":"1034","fix":"1049"},{"desc":"1034","fix":"1050"},{"desc":"1034","fix":"1051"},{"desc":"1036","fix":"1052"},{"desc":"1043","fix":"1053"},{"desc":"1046","fix":"1054"},{"desc":"1034","fix":"1055"},{"desc":"1040","fix":"1056"},{"desc":"1034","fix":"1057"},{"desc":"1034","fix":"1058"},{"desc":"1034","fix":"1059"},{"desc":"1034","fix":"1060"},"Update the dependencies array to be: [dispatch]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [getCompetance, props.match.params.id]",{"range":"1063","text":"1064"},{"range":"1065","text":"1062"},{"range":"1066","text":"1062"},"Update the dependencies array to be: [getClient, props.match.params.id]",{"range":"1067","text":"1068"},{"range":"1069","text":"1062"},"Update the dependencies array to be: [match.params.id, matricule]",{"range":"1070","text":"1071"},{"range":"1072","text":"1062"},"Update the dependencies array to be: [getContrat, props.match.params.id]",{"range":"1073","text":"1074"},{"range":"1075","text":"1062"},{"range":"1076","text":"1062"},{"range":"1077","text":"1062"},{"range":"1078","text":"1062"},{"range":"1079","text":"1064"},{"range":"1080","text":"1071"},{"range":"1081","text":"1074"},{"range":"1082","text":"1062"},{"range":"1083","text":"1068"},{"range":"1084","text":"1062"},{"range":"1085","text":"1062"},{"range":"1086","text":"1062"},{"range":"1087","text":"1062"},[2375,2377],"[dispatch]",[1939,1962],"[getCompetance, props.match.params.id]",[1186,1188],[2255,2257],[1629,1652],"[getClient, props.match.params.id]",[1045,1047],[2339,2350],"[match.params.id, matricule]",[1914,1916],[1864,1887],"[getContrat, props.match.params.id]",[2028,2030],[1820,1822],[2375,2377],[1186,1188],[1939,1962],[2339,2350],[1864,1887],[1914,1916],[1629,1652],[1045,1047],[2255,2257],[2028,2030],[1820,1822]]