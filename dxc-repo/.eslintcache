[{"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js":"3","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js":"4","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js":"5","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js":"7","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js":"9","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js":"10","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js":"11","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"12","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js":"13","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"14","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"15","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"16","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"17","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"19","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"20","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js":"21","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js":"22","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"23","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js":"24","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js":"25","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js":"26","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"27","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"28","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"29","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"30","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js":"31","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"32","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"33","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"34","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js":"35","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"36","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"37","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js":"38","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js":"39","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"40","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"41","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js":"42","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"43","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"44","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js":"45","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js":"46","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"47","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"48","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js":"49","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js":"50","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js":"51","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"52","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"53","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"54","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js":"55","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js":"56","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"57","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"58","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"59","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"60","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"61","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"62","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"63","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"64","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"65","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"66","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"67","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"68","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"69","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js":"70","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js":"71","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js":"72","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"73","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js":"74","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js":"75","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js":"76","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js":"77"},{"size":913,"mtime":1653171026973,"results":"78","hashOfConfig":"79"},{"size":5083,"mtime":1652819574101,"results":"80","hashOfConfig":"79"},{"size":1444,"mtime":1652819574042,"results":"81","hashOfConfig":"79"},{"size":1971,"mtime":1653170644410,"results":"82","hashOfConfig":"79"},{"size":2058,"mtime":1652819574042,"results":"83","hashOfConfig":"79"},{"size":534,"mtime":1652819574116,"results":"84","hashOfConfig":"79"},{"size":443,"mtime":1652819574114,"results":"85","hashOfConfig":"79"},{"size":5786,"mtime":1653232846318,"results":"86","hashOfConfig":"79"},{"size":1616,"mtime":1652819574068,"results":"87","hashOfConfig":"79"},{"size":8123,"mtime":1652819574072,"results":"88","hashOfConfig":"79"},{"size":2931,"mtime":1652819574115,"results":"89","hashOfConfig":"79"},{"size":6757,"mtime":1653044546082,"results":"90","hashOfConfig":"79"},{"size":696,"mtime":1653044546145,"results":"91","hashOfConfig":"79"},{"size":1457,"mtime":1652870089046,"results":"92","hashOfConfig":"79"},{"size":580,"mtime":1652819574111,"results":"93","hashOfConfig":"79"},{"size":1454,"mtime":1652819574109,"results":"94","hashOfConfig":"79"},{"size":2845,"mtime":1652819574110,"results":"95","hashOfConfig":"79"},{"size":5302,"mtime":1653044546147,"results":"96","hashOfConfig":"79"},{"size":2953,"mtime":1652819574104,"results":"97","hashOfConfig":"79"},{"size":844,"mtime":1653044546067,"results":"98","hashOfConfig":"79"},{"size":137,"mtime":1652819574041,"results":"99","hashOfConfig":"79"},{"size":566,"mtime":1653044546077,"results":"100","hashOfConfig":"79"},{"size":3976,"mtime":1652819574039,"results":"101","hashOfConfig":"79"},{"size":3242,"mtime":1652819574075,"results":"102","hashOfConfig":"79"},{"size":1920,"mtime":1652819574071,"results":"103","hashOfConfig":"79"},{"size":710,"mtime":1652819574028,"results":"104","hashOfConfig":"79"},{"size":172,"mtime":1652819574091,"results":"105","hashOfConfig":"79"},{"size":2766,"mtime":1652819574094,"results":"106","hashOfConfig":"79"},{"size":5917,"mtime":1652819574092,"results":"107","hashOfConfig":"79"},{"size":6234,"mtime":1653044546131,"results":"108","hashOfConfig":"79"},{"size":174,"mtime":1652819574082,"results":"109","hashOfConfig":"79"},{"size":6659,"mtime":1653044546128,"results":"110","hashOfConfig":"79"},{"size":6063,"mtime":1652819574085,"results":"111","hashOfConfig":"79"},{"size":6106,"mtime":1652821853375,"results":"112","hashOfConfig":"79"},{"size":521,"mtime":1653044546131,"results":"113","hashOfConfig":"79"},{"size":363,"mtime":1653044546114,"results":"114","hashOfConfig":"79"},{"size":344,"mtime":1653044546131,"results":"115","hashOfConfig":"79"},{"size":1525,"mtime":1653048007884,"results":"116","hashOfConfig":"79"},{"size":264,"mtime":1653044546082,"results":"117","hashOfConfig":"79"},{"size":366,"mtime":1653044546082,"results":"118","hashOfConfig":"79"},{"size":334,"mtime":1653046978158,"results":"119","hashOfConfig":"79"},{"size":4059,"mtime":1653232815462,"results":"120","hashOfConfig":"79"},{"size":382,"mtime":1653044546114,"results":"121","hashOfConfig":"79"},{"size":4027,"mtime":1653048191041,"results":"122","hashOfConfig":"79"},{"size":5495,"mtime":1652819574024,"results":"123","hashOfConfig":"79"},{"size":326,"mtime":1652819574096,"results":"124","hashOfConfig":"79"},{"size":4946,"mtime":1652819574105,"results":"125","hashOfConfig":"79"},{"size":504,"mtime":1653231015585,"results":"126","hashOfConfig":"79"},{"size":389,"mtime":1652819574087,"results":"127","hashOfConfig":"79"},{"size":1363,"mtime":1652819574037,"results":"128","hashOfConfig":"79"},{"size":3929,"mtime":1652819574025,"results":"129","hashOfConfig":"79"},{"size":4624,"mtime":1652819574035,"results":"130","hashOfConfig":"79"},{"size":902,"mtime":1652819574034,"results":"131","hashOfConfig":"79"},{"size":1474,"mtime":1652819574036,"results":"132","hashOfConfig":"79"},{"size":2338,"mtime":1653232695319,"results":"133","hashOfConfig":"79"},{"size":2287,"mtime":1653227004652,"results":"134","hashOfConfig":"79"},{"size":2311,"mtime":1653044546131,"results":"135","hashOfConfig":"79"},{"size":2472,"mtime":1653044546131,"results":"136","hashOfConfig":"79"},{"size":1538,"mtime":1653044546131,"results":"137","hashOfConfig":"79"},{"size":1704,"mtime":1653232875594,"results":"138","hashOfConfig":"79"},{"size":3416,"mtime":1653044546082,"results":"139","hashOfConfig":"79"},{"size":2003,"mtime":1653232374964,"results":"140","hashOfConfig":"79"},{"size":4564,"mtime":1653232065135,"results":"141","hashOfConfig":"79"},{"size":7842,"mtime":1653226077371,"results":"142","hashOfConfig":"79"},{"size":4295,"mtime":1653135846743,"results":"143","hashOfConfig":"79"},{"size":3959,"mtime":1653065779068,"results":"144","hashOfConfig":"79"},{"size":3146,"mtime":1653225483592,"results":"145","hashOfConfig":"79"},{"size":3146,"mtime":1653225493151,"results":"146","hashOfConfig":"79"},{"size":3154,"mtime":1653226176651,"results":"147","hashOfConfig":"79"},{"size":2178,"mtime":1653044546097,"results":"148","hashOfConfig":"79"},{"size":2168,"mtime":1653232681275,"results":"149","hashOfConfig":"79"},{"size":4444,"mtime":1653232636031,"results":"150","hashOfConfig":"79"},{"size":4742,"mtime":1653228067713,"results":"151","hashOfConfig":"79"},{"size":4473,"mtime":1653230769524,"results":"152","hashOfConfig":"79"},{"size":2878,"mtime":1653227116396,"results":"153","hashOfConfig":"79"},{"size":8316,"mtime":1653225372843,"results":"154","hashOfConfig":"79"},{"size":4005,"mtime":1653232070754,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aoud2a",{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"160"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"160"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"160"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"160"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"160"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"160"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"160"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"160"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js",[],["330","331"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js",["332"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js",["333","334"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["335"],"// export default function Certifications() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.certifications.loading);\r\n//   const error = useSelector((state) => state.certifications.error);\r\n//   const certifications = useSelector((state) => state.certifications.certifications);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"code\", label: \"Code\", minWidth: 100 },\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"datecertification\", label: \"Date Certification\", minWidth: 100 },\r\n  { id: \"ressourceid\", label: \"Ressource id\", minWidth: 100 },\r\n  { id: \"niveau\", label: \"Niveau\", minWidth: 180 },\r\n  { id: \"validation\", label: \"Validation\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Certifications = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addCertification = () => {\r\n    let path = `/app/certifications/AjouterCertification`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadCertifications = () => dispatch(getPrestationsAction());\r\n    loadCertifications();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.certifications.loading);\r\n  const error = useSelector((state) => state.certifications.error);\r\n  const certifications = useSelector(\r\n    (state) => state.certifications.certifications,\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/certifications/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/certifications/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Certifications\"  path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addCertification}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Certification\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {certifications\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={certifications.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["336"],"import {\r\n  VALIDATE_FORM,\r\n  VALIDATE_FORM_SUCCESS,\r\n  VALIDATE_FORM_ERROR,\r\n} from \"../types\";\r\n\r\n//state principal\r\nconst initialState = {\r\n  error: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case VALIDATE_FORM:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["337"],"import {\r\n  ADD_RESSOURCE,\r\n  ADD_RESSOURCE_SUCCESS,\r\n  ADD_RESSOURCE_ERROR,\r\n  START_DOWNLOAD_RESSOURCES,\r\n  RESSOURCE_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_RESSOURCE__ERROR,\r\n  GET_RESSOURCE_REMOVE,\r\n  DELETE_RESSOURCE_SUCCESS,\r\n  DELETE_RESSOURCE_ERROR,\r\n  GET_RESSOURCE_EDIT,\r\n  RESSOURCE_EDIT_SUCCESS,\r\n  RESSOURCE_EDIT_ERROR,\r\n  BEGIN_RESSOURCE_EDIT,\r\n  EDITION_RESSOURCE_SUCCESS,\r\n  EDIT_RESSOURCE_ERROR,\r\n} from \"../types\";\r\n\r\n//chaque réducteur a son propre état\r\nconst initialState = {\r\n  ressources: [],\r\n  error: null,\r\n  loading: false,\r\n  ressource: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RESSOURCE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case ADD_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: [...state.ressources, action.payload],\r\n      };\r\n    case ADD_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case START_DOWNLOAD_RESSOURCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        //limpiar y reacrgar el productopara editar\r\n        ressource: {},\r\n      };\r\n    case RESSOURCE_DOWNLOAD_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        ressources: action.payload,\r\n        loading: false,\r\n        error: false,\r\n        ressource: {},\r\n      };\r\n    case DOWNLOAD_RESSOURCE__ERROR:\r\n      return {\r\n        ...state,\r\n        ressources: [],\r\n        loading: false,\r\n        error: true,\r\n        ressource: {},\r\n      };\r\n    case GET_RESSOURCE_REMOVE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case DELETE_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.filter(\r\n          (ressource) => ressource.id !== action.payload,\r\n        ),\r\n      };\r\n    case DELETE_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case GET_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case RESSOURCE_EDIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressource: action.payload,\r\n      };\r\n    case RESSOURCE_EDIT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case BEGIN_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDITION_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.map((ressource) =>\r\n          ressource.id === action.payload.id\r\n            ? (ressource = action.payload)\r\n            : ressource,\r\n        ),\r\n      };\r\n    case EDIT_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",["338"],"import {\r\n  ADD_PRESTATION,\r\n  ADD_PRESTATION_SUCCESS,\r\n  ADD_PRESTATION_ERROR,\r\n  BEGIN_PRESTATION_EDIT,\r\n  EDITION_PRESTATION_SUCCESS,\r\n  EDIT_PRESTATION_ERROR,\r\n  START_DOWNLOAD_PRESTATIONS,\r\n  PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_PRESTATION__ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\n\r\n//créer un nouveau produit - fonction principale\r\nexport function createNewPrestationAction(prestation) {\r\n  console.log(\"prestation\", prestation);\r\n  return (dispatch) => {\r\n    dispatch(newPrestation());\r\n    clienteAxios\r\n      .post(\"http://localhost:9002/DXC/prestations/addPrestation\", prestation)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //dispatch(addNewPrestationSuccess(prestation));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewPrestationError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newPrestation = () => ({\r\n  type: ADD_PRESTATION,\r\n});\r\n\r\nexport const addNewPrestationSuccess = (prestation) => ({\r\n  type: ADD_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const addNewPrestationError = (error) => ({\r\n  type: ADD_PRESTATION_ERROR,\r\n});\r\n\r\n//obtenir la liste des produits de productsReducer (voir API)\r\nexport function getPrestationsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getPrestationsStart());\r\n\r\n    axios\r\n      .get(\"http://localhost:9002/DXC/prestations/allPrestations\")\r\n      .then((resp) => {\r\n        console.log(\"all prestations ----->\", resp.data);\r\n        dispatch(downloadPrestationsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaPrestationsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getPrestationsStart = () => ({\r\n  type: START_DOWNLOAD_PRESTATIONS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadPrestationsSuccessful = (prestations) => ({\r\n  type: PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  payload: prestations,\r\n});\r\n\r\nexport const descargaPrestationsError = () => ({\r\n  type: DOWNLOAD_PRESTATION__ERROR,\r\n});\r\n\r\nexport function editRessourceAction(prestation) {\r\n  return (dispatch) => {\r\n    dispatch(startEditRessource());\r\n\r\n    // clienteAxios\r\n    //   .put(`route/api/${prestation.id}`, prestation)\r\n    //   .then((resp) => {\r\n    //     //console.log(resp);\r\n    //     dispatch(editRessourceSuccess(resp.data));\r\n    //     Swal.fire(\"Stored\", \"The Product was successfully updated\", \"success\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     //console.log(error);\r\n    //     dispatch(editRessourceError());\r\n    //   });\r\n  };\r\n}\r\n\r\nexport const startEditRessource = () => ({\r\n  type: BEGIN_PRESTATION_EDIT,\r\n});\r\n\r\nexport const editRessourceSuccess = (prestation) => ({\r\n  type: EDITION_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const editRessourceError = () => ({\r\n  type: EDIT_PRESTATION_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["339"],"import React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getRessourcesAction } from \"../../services/Actions/ressourcesActions\";\r\n\r\nconst columns = [\r\n  // { id: \"matricule\", label: \"Matricule\", minWidth: 100 },\r\n  { id: \"status\", label: \"Status\", minWidth: 100 },\r\n  { id: \"firstName\", label: \"Nom\", minWidth: 100 },\r\n  { id: \"lastName\", label: \"Prénom\", minWidth: 100 },\r\n  { id: \"genre\", label: \"Genre\", minWidth: 100 },\r\n  { id: \"dateAmbauche\", label: \"Date d'ambauche\", minWidth: 180 },\r\n  { id: \"dateNaissance\", label: \"Date de naissance\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Ressources = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addRessource = () => {\r\n    let path = `/app/ressources/AjouterRessource`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    //productos cuando el componente este listo\r\n    const loadRessours = () => dispatch(getRessourcesAction());\r\n    loadRessours();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.ressources.loading);\r\n  const error = useSelector((state) => state.ressources.error);\r\n  const ressources = useSelector((state) => state.ressources.ressources);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditRessource = (e) => {\r\n  //   let path = `/app/ressources/ModiferRessource/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewRessource = (e) => {\r\n  //   let path = `/app/ressources/AfficherRessurce/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <div className=\"font-wight-bold alert alert-danger text-center mt-5\">\r\n          Hubo un error...\r\n        </div>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Ressources\"    path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addRessource}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Ressource\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ressources\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={ressources.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ressources;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js",[],["340","341"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["342"],"// export default function Prestations() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.prestations.loading);\r\n//   const error = useSelector((state) => state.prestations.error);\r\n//   const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"etat\", label: \"Etat\", minWidth: 100 },\r\n  { id: \"market\", label: \"Market\", minWidth: 100 },\r\n  { id: \"type\", label: \"Type\", minWidth: 100 },\r\n  { id: \"dateDebut\", label: \"Date de Début\", minWidth: 180 },\r\n  { id: \"dateFin\", label: \"Date de Fin\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Prestations = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addPrestation = () => {\r\n    let path = `/app/prestations/AjouterPrestation`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadProducts = () => dispatch(getPrestationsAction());\r\n    loadProducts();\r\n  }, []);\r\n\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.prestations.loading);\r\n  const error = useSelector((state) => state.prestations.error);\r\n  const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/prestations/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/prestations/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Prestations\"  path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addPrestation}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Prestation\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {prestations\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={prestations.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prestations;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["343"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function ModiferPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const editPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitEditPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      Titre,\r\n      Etat,\r\n      Market,\r\n      Type,\r\n      DateDebut,\r\n      DateFin,\r\n    };\r\n    editPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer une prestation\" />\r\n      <form onSubmit={submitEditPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",["344"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function AjouterPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const addPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitNewPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      titre: Titre,\r\n      etat: Etat,\r\n      market: Market,\r\n      type: Type,\r\n      dateDebut: DateDebut,\r\n      dateFin: DateFin,\r\n    };\r\n    addPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Ajouter une prestation\" />\r\n      <form onSubmit={submitNewPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js",["345","346"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"./Tabs\";\r\nimport './Competances.css';\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport CompetencesTransversales from \"./CompetencesTransversales.js\";\r\nimport CompetencesTechniques from \"./CompetencesTechniques.js\";\r\nimport CompetencesLinguistiques from \"./CompetencesLinguistiques.js\";\r\n\r\nexport default function Competances() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  function AjouteCompetance() {\r\n    let path = `/app/competances/ajouteCompetance`;\r\n    history.push(path);\r\n  }\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Competances\"  path=\"/app/dashboard\"/>\r\n      <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteCompetance}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter Competance\r\n          </Button>\r\n        </div>\r\n\r\n        <Tabs >\r\n        <div title=\"Competences Techniques \">\r\n       <CompetencesTechniques/>\r\n        </div>\r\n        <div title=\"Competences Transversales\">\r\n        <CompetencesTransversales/>\r\n        </div>\r\n        <div title=\"Competences Linguistiques\">\r\n        <CompetencesLinguistiques/>\r\n        </div>\r\n      </Tabs>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",["347"],"import React from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\n// styles\r\n// import useStyles from \"./styles\";\r\n\r\nexport default function Dashboard(props) {\r\n  // var classes = useStyles();\r\n  // var theme = useTheme();\r\n  // local\r\n\r\n  return (\r\n    <>\r\n     \r\n      <h1>Accueil</h1>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js",["348","349"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["350"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    clients: [],\r\n    error: null,\r\n    loading: false,\r\n    client: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CLIENT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: [...state.clients, action.payload],\r\n        };\r\n      case ADD_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CLIENTS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          client: {},\r\n        };\r\n      case CLIENT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          clients: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          client: {},\r\n        };\r\n      case DOWNLOAD_CLIENT__ERROR:\r\n        return {\r\n          ...state,\r\n          clients: [],\r\n          loading: false,\r\n          error: true,\r\n          client: {},\r\n        };\r\n   \r\n      case CLIENT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          client: action.payload,\r\n        };\r\n      case CLIENT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CLIENT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: state.clients.map((client) =>\r\n            client.id === action.payload.id\r\n              ? (client = action.payload)\r\n              : client,\r\n          ),\r\n        };\r\n      case EDIT_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["351"],"import {\r\n    ADD_CONTRAT,\r\n    ADD_CONTRAT_SUCCESS,\r\n    ADD_CONTRAT_ERROR,\r\n    START_DOWNLOAD_CONTRATS,\r\n    CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CONTRAT__ERROR,\r\n    GET_CONTRAT_EDIT,\r\n    CONTRAT_EDIT_SUCCESS,\r\n    CONTRAT_EDIT_ERROR,\r\n    BEGIN_CONTRAT_EDIT,\r\n    EDITION_CONTRAT_SUCCESS,\r\n    EDIT_CONTRAT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    contrats: [],\r\n    error: null,\r\n    loading: false,\r\n    contrat: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CONTRAT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: [...state.contrats, action.payload],\r\n        };\r\n      case ADD_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CONTRATS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          contrat: {},\r\n        };\r\n      case CONTRAT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          contrats: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          contrat: {},\r\n        };\r\n      case DOWNLOAD_CONTRAT__ERROR:\r\n        return {\r\n          ...state,\r\n          contrats: [],\r\n          loading: false,\r\n          error: true,\r\n          contrat: {},\r\n        };\r\n      case GET_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case CONTRAT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrat: action.payload,\r\n        };\r\n      case CONTRAT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: state.contrats.map((contrat) =>\r\n            contrat.id === action.payload.id\r\n              ? (contrat = action.payload)\r\n              : contrat,\r\n          ),\r\n        };\r\n      case EDIT_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["352"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewClientAction } from \"../../services/Actions/clientActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteClient() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [market, getMarket] = useState(\"\");\r\n\r\n // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const addClient = (client) =>\r\n    dispatch(createNewClientAction(client));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Client\r\n  const submitNewClient = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n    \r\n      nomClient.trim() === \"\" ||\r\n      market.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Client\r\n    let client = {\r\n      nomClient : nomClient,\r\n      market :market,\r\n      \r\n    };\r\n    addClient(client);\r\n    history.push(\"/app/prestations/clients\");\r\n  };\r\n  function AnnulerClient() {\r\n    history.push(\"/app/prestations/clients\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Client\" path=\"/app/prestations/clients\" />\r\n      </div>\r\n      <form onSubmit={submitNewClient}>\r\n        <Grid container spacing={3}>\r\n  \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={market}\r\n              onChange={(e) => getMarket(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewClient}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerClient}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteClient;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["353","354","355","356","357"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["358"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteCompetance() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [matriculeRessource, setMatriculeRessource] = useState(\"\");\r\n  const [nomRessource, setNomRessource] = useState(\"\");\r\n  const [nomCompetance, setNomCompetance] = useState(\"\");\r\n  const [typeComp, setTypeComp] = useState(\"\");\r\n  const [niveau, setNiveau] = useState(\"\");\r\n  const [evaluationManager, setEvaluationManager] = useState(\"\");\r\n  \r\n  \r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const addCompetance = (competance) =>\r\n    dispatch(createNewCompetanceAction(competance));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Competance\r\n  const submitNewCompetance = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      matriculeRessource.trim() === \"\"||\r\n      nomRessource.trim() === \"\"||\r\n      nomCompetance.trim() === \"\"||\r\n      typeComp.trim() === \"\"||\r\n      nomCompetance.trim() === \"\"||\r\n      evaluationManager.trim() === \"\"||\r\n      niveau.trim() === \"\"\r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Competance\r\n    let competance = {\r\n      nomCompetance : nomCompetance,\r\n      matriculeRessource : matriculeRessource,\r\n      nomRessource : nomRessource,\r\n      typeComp : typeComp,\r\n      evaluationManager : evaluationManager,\r\n      niveau : niveau\r\n      \r\n    };\r\n    addCompetance(competance);\r\n    history.push(\"/app/competances/allCompetances\");\r\n  };\r\n  \r\n  const niveaux = [\r\n   \r\n    {\r\n      label: \"NE - Non Exigé.\",\r\n      value: \"Non Exigé\",\r\n    },\r\n    {\r\n      label: \"0 - Pas de connaissances\",\r\n      value: \"Pas de connaissances\",\r\n    },\r\n    {\r\n      label: \"1 - Connaissances théoriques\",\r\n      value: \"Connaissances théoriques\",\r\n    },\r\n    {\r\n      label: \"2 - Basique\",\r\n      value: \"Basique\",\r\n    },\r\n    {\r\n      label: \"3 - Maitrisé \",\r\n      value: \"Maitrisé\",\r\n    },\r\n    {\r\n      label: \"4 - Expert\",\r\n      value: \"Expert\",\r\n    },\r\n  ];\r\n  const typesCompetances = [\r\n    {\r\n      label: \"Compétences techniques\",\r\n      value: \"CompetenceTechn\",\r\n    },\r\n    {\r\n      label: \"Compétences transversales\",\r\n      value: \"CompetenceTrans\",\r\n    },\r\n    {\r\n      label: \"Compétences linguistiques\",\r\n      value: \"CompetenceLing\",\r\n    },\r\n  \r\n  ];\r\n  function AnnulerCompetance() {\r\n    history.push(\"/app/competances/allCompetances\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajouter une nouvelle compétence\" path=\"/app/competances/allCompetances\" />\r\n      </div>\r\n      <form onSubmit={submitNewCompetance}>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={4}  className={classes.label}>\r\n          <h3>Nom et prénom de ressource </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomRessource\"\r\n              // label=\"Nom et prénom de ressource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nomRessource}\r\n              onChange={(e) => setNomRessource(e.target.value)}\r\n            />\r\n          </Grid>\r\n        \r\n\r\n             <Grid item xs={4}  className={classes.label}>\r\n          <h3>Matricule de ressource </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-matriculeRessource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={matriculeRessource}\r\n              onChange={(e) => setMatriculeRessource(e.target.value)}\r\n            />\r\n          </Grid>\r\n         \r\n      \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Type de compétence </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-typeComp\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={typeComp}\r\n              onChange={(e) => {\r\n                setTypeComp(e.target.value);\r\n              }}\r\n            >\r\n              {typesCompetances.map((typeCompetance) => (\r\n                <MenuItem value={typeCompetance.value}>{typeCompetance.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n\r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Intitulé de compétence</h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-nomCompetance\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={nomCompetance}\r\n              onChange={(e) => setNomCompetance(e.target.value)}\r\n            />\r\n          </Grid>\r\n          \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Niveau  de maitrise attendu </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-niveau\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={niveau}\r\n              onChange={(e) => {\r\n                setNiveau(e.target.value);\r\n              }}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Evaluation de manager</h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-evaluationManager\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              value={evaluationManager}\r\n              onChange={(e) => setEvaluationManager(e.target.value)}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n         \r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </form>\r\n      <div className={classes.buttons}  >\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewCompetance}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerCompetance}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteCompetance;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["359","360","361"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport './contrat.css';\r\nexport default function Contrats() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [contrats, setContrats] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/DXC/contrats/allContrats\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setContrats(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  function AjouteContrat() {\r\n    history.push(\"/app/Contrats/AjouteContrat\");\r\n  }\r\n   function EditContrat(id) {\r\n    history.push(\"/app/Contrats/EditContrat/\"+id);\r\n  }\r\n  const AfficheContrat = (e) => {\r\n    let path = `/app/Contrats/ContratDetail/` + e;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"  Liste des contrats\"  path=\"/app/dashboard\"/>\r\n      </div>\r\n\r\n      <div>\r\n        <div className={classes.Search}>\r\n          <Button variant=\"contained\" className={classes.ButtonSearch}>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Input\r\n            className={classes.InputSearch}\r\n            type=\"text\"\r\n            placeholder=\"Chercher...\"\r\n          />\r\n        </div>    <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteContrat}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter contrat\r\n          </Button>\r\n        </div>\r\n    \r\n      </div>\r\n      <br />\r\n     \r\n      <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead >\r\n            <TableRow className={classes.TableRow}>\r\n              <TableCell>Nom de Contrat</TableCell>\r\n              <TableCell>Nom de Client</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {contrats.map((contrat) => (\r\n              <TableRow key={contrat.nomContrat}>\r\n               \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.nomContrat}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.nomClient}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.description}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                <Button \r\n                onClick={() => AfficheContrat(contrat.id)}>\r\n                 <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                  <Button onClick={() => EditContrat(contrat.id)}>\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["362"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewContratAction } from \"../../services/Actions/contratActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteContrat() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomContrat, setNomContrat] = useState(\"\");\r\n  const [nomClient, setNomClient] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const addContrat = (contrat) =>\r\n    dispatch(createNewContratAction(contrat));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew contrat\r\n  const submitNewContrat = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomContrat.trim() === \"\" ||\r\n      nomClient.trim() === \"\" ||\r\n      description.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau contrat\r\n    let contrat = {\r\n      nomContrat : nomContrat,\r\n      nomClient : nomClient,\r\n      description :description,\r\n      \r\n    };\r\n    addContrat(contrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajouter un nouveau contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={submitNewContrat}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomContrat}\r\n              onChange={(e) => setNomContrat(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => setNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewContrat}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js",["363"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js",["364","365"],"import {\r\n    ADD_COMPETANCE,\r\n    ADD_COMPETANCE_SUCCESS,\r\n    ADD_COMPETANCE_ERROR,\r\n    START_DOWNLOAD_COMPETANCES,\r\n    COMPETANCE_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_COMPETANCE__ERROR,\r\n    GET_COMPETANCE_EDIT,\r\n    COMPETANCE_EDIT_SUCCESS,\r\n    COMPETANCE_EDIT_ERROR,\r\n    BEGIN_COMPETANCE_EDIT,\r\n    EDITION_COMPETANCE_SUCCESS,\r\n    EDIT_COMPETANCE_ERROR,\r\n  } from \"../types\";\r\n  import Swal from \"sweetalert2\";\r\n  \r\n  import clienteAxios from \"../../config/axios\";\r\n  \r\n  //créer un nouveau Competance - fonction principale\r\n  export function createNewCompetanceAction(competance) {\r\n    console.log(\"competance\", competance);\r\n    return (dispatch) => {\r\n      dispatch(newCompetance());\r\n  \r\n          clienteAxios\r\n            .post(\"http://localhost:8080/DXC/competances/addCompetance\", competance)\r\n            .then((res) => {\r\n              console.log(res);\r\n              //si se inserta correctamente\r\n              dispatch(addNewCompetanceSuccess(competance));\r\n              Swal.fire({\r\n                text: 'la Competance été ajouter avec succés',\r\n                 timer: 1500 ,\r\n                  timer: 3000,\r\n                  timerProgressBar: true,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              //si hay un error\r\n              dispatch(addNewCompetanceError());\r\n            });\r\n    };\r\n  }\r\n  \r\n  export const newCompetance = () => ({\r\n    type: ADD_COMPETANCE,\r\n  });\r\n  \r\n  export const addNewCompetanceSuccess = (competance) => ({\r\n    type: ADD_COMPETANCE_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const addNewCompetanceError = (error) => ({\r\n    type: ADD_COMPETANCE_ERROR,\r\n  });\r\n  \r\n  //obtenir la liste des Competances de CompetancesReducer (voir API)\r\n  export function getCompetancesAction() {\r\n    return (dispatch) => {\r\n      dispatch(getCompetancesStart());\r\n  \r\n      // interroger l'API\r\n        clienteAxios\r\n          .get(\"http://localhost:8080/DXC/competances/allCompetances\")\r\n          .then((resp) => {\r\n            //console.log(resp);\r\n            dispatch(downloadCompetancesSuccessful(resp.data));\r\n          })\r\n          .catch((error) => {\r\n            //console.log(error);\r\n            dispatch(descargaCompetancesError());\r\n          });\r\n    };\r\n  }\r\n  \r\n  export const getCompetancesStart = () => ({\r\n    type: START_DOWNLOAD_COMPETANCES,\r\n  });\r\n  \r\n  //API de requête\r\n  export const downloadCompetancesSuccessful = (competance) => ({\r\n    type: COMPETANCE_DOWNLOAD_SUCCESSFUL,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const descargaCompetancesError = () => ({\r\n    type: DOWNLOAD_COMPETANCE__ERROR,\r\n  });\r\n  //fonction pour obtenir la Competance à modifier\r\n  export function getCompetanceAction(id) {\r\n    return (dispatch) => {\r\n      dispatch(getEditCompetanceAction());\r\n  \r\n      //obtenir l'api de  la Competance\r\n      clienteAxios\r\n        .get(`http://localhost:8080/DXC/competances/competance/${id}`)\r\n        .then((resp) => {\r\n          console.log(resp.data);\r\n          dispatch(getCompetanceEditSuccess(resp.data));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          dispatch(getCompetanceEditError());\r\n        });\r\n    };\r\n  }\r\n\r\n  \r\n  \r\n  export const getEditCompetanceAction = (id) => ({\r\n    type: GET_COMPETANCE_EDIT,\r\n  });\r\n  \r\n  export const getCompetanceEditSuccess = (competance) => ({\r\n    type: COMPETANCE_EDIT_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const getCompetanceEditError = () => ({\r\n    type: COMPETANCE_EDIT_ERROR,\r\n  });\r\n  \r\n  //MODIFIER une Competance DANS L'API ET L'ETAT\r\n  export function editCompetanceAction(competance) {\r\n    return (dispatch) => {\r\n      dispatch(startEditCompetance());\r\n  \r\n      //interrogez l'API et envoyez une méthode put à mettre à jour\r\n      clienteAxios\r\n        .put(`http://localhost:8080/DXC/competances/updateCompetance${competance.id}`, competance)\r\n        .then((resp) => {\r\n          //console.log(resp);\r\n          dispatch(editCompetanceSuccess(resp.data));\r\n          Swal.fire({\r\n            text: 'la Competance été modifier avec succés',\r\n             timer: 1500 ,\r\n              timer: 3000,\r\n              timerProgressBar: true,\r\n            })\r\n          \r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n          dispatch(editCompetanceError());\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const startEditCompetance = () => ({\r\n    type: BEGIN_COMPETANCE_EDIT,\r\n  });\r\n  \r\n  export const editCompetanceSuccess = (competance) => ({\r\n    type: EDITION_COMPETANCE_SUCCESS,\r\n    payload: competance,\r\n  });\r\n  \r\n  export const editCompetanceError = () => ({\r\n    type: EDIT_COMPETANCE_ERROR,\r\n  });\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js",["366","367","368","369","370"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetanceDetail.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\EditCompetance.js",["371","372","373","374"],"import React, { useEffect, useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editCompetanceAction, getCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditCompetance(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialCompetanceState = {\r\n    id: null,\r\n    nomCompetance : \"\",\r\n    matriculeRessource : \"\",\r\n    nomRessource : \"\",\r\n    typeComp : \"\",\r\n    evaluationManager : \"\",\r\n    niveau : \"\"\r\n  };\r\n  const editCompetance = (Competance)=> dispatch(editCompetanceAction(Competance));\r\n  const [currentCompetance, setCurrentCompetance] = useState(initialCompetanceState);\r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const getCompetance = () => {\r\n    axios\r\n    .get(`http://localhost:8080/DXC/competances/Competance/`+props.match.params.id)\r\n    .then((resp) => {\r\n      console.log(\"hhhhkldmdmmdm\",resp.data);\r\n      setCurrentCompetance(resp.data);\r\n      console.log(\"CurrentCompetance\",currentCompetance); })\r\n    .catch((error) => {\r\n      console.log(error);\r\n     \r\n    });\r\n  };\r\n\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidacion = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n  useEffect(() => {\r\n    getCompetance(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentCompetance({ ...currentCompetance, [name]: value });\r\n  };\r\n\r\n\r\n  const updateCompetance = () => {\r\n    console.log(\"currentCompetance\",currentCompetance);\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      currentCompetance.nomCompetance.trim() === \"\" ||\r\n      currentCompetance.matriculeRessource.trim() === \"\" ||\r\n      currentCompetance.nomRessource.trim() === \"\" ||\r\n      currentCompetance.typeComp.trim() === \"\" ||\r\n      currentCompetance.evaluationManager.trim() === \"\" ||\r\n      currentCompetance.niveau.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidacion();\r\n\r\n    editCompetance(currentCompetance);\r\n         history.push(\"/app/competances/allCompetances\");\r\n      \r\n\r\n  };\r\n  function AnnulerCompetance() {\r\n    history.push(\"/app/competances/allCompetances\");\r\n  }\r\n  const niveaux = [\r\n   \r\n    {\r\n      label: \"NE - Non Exigé.\",\r\n      value: \"Non Exigé\",\r\n    },\r\n    {\r\n      label: \"0 - Pas de connaissances\",\r\n      value: \"Pas de connaissances\",\r\n    },\r\n    {\r\n      label: \"1 - Connaissances théoriques\",\r\n      value: \"Connaissances théoriques\",\r\n    },\r\n    {\r\n      label: \"2 - Basique\",\r\n      value: \"Basique\",\r\n    },\r\n    {\r\n      label: \"3 - Maitrisé \",\r\n      value: \"Maitrisé\",\r\n    },\r\n    {\r\n      label: \"4 - Expert\",\r\n      value: \"Expert\",\r\n    },\r\n  ];\r\n  const typesCompetances = [\r\n    {\r\n      label: \"Compétences techniques\",\r\n      value: \"CompetenceTechn\",\r\n    },\r\n    {\r\n      label: \"Compétences transversales\",\r\n      value: \"CompetenceTrans\",\r\n    },\r\n    {\r\n      label: \"Compétences linguistiques\",\r\n      value: \"CompetenceLing\",\r\n    },\r\n  \r\n  ];\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Modifier une Competance\" path=\"/app/competances/allCompetances\" />\r\n      </div>\r\n      <form onSubmit={updateCompetance}>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={4}  className={classes.label}>\r\n          <h3>Nom et prénom de ressource </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomRessource\"\r\n              // label=\"Nom et prénom de ressource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"nomRessource\"\r\n              value={currentCompetance.nomRessource}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n        \r\n\r\n             <Grid item xs={4}  className={classes.label}>\r\n          <h3>Matricule de ressource </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-matriculeRessource\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"matriculeRessource\"\r\n              value={currentCompetance.matriculeRessource}\r\n              onChange={handleInputChange}\r\n            \r\n            />\r\n          </Grid>\r\n         \r\n      \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Type de compétence </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-typeComp\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"typeComp\"\r\n              value={currentCompetance.typeComp}\r\n              onChange={handleInputChange}\r\n            >\r\n              {typesCompetances.map((typeCompetance) => (\r\n                <MenuItem value={typeCompetance.value}>{typeCompetance.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n\r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Intitulé de compétence</h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-nomCompetance\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"nomCompetance\"\r\n              value={currentCompetance.nomCompetance}\r\n              onChange={handleInputChange}\r\n             \r\n            />\r\n          </Grid>\r\n          \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Niveau  de maitrise attendu </h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-niveau\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"niveau\"\r\n              value={currentCompetance.niveau}\r\n              onChange={handleInputChange}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n\r\n          <Grid item xs={4}  className={classes.label}>\r\n          <h3>Evaluation de manager</h3>  \r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n          <TextField\r\n              id=\"outlined-evaluationManager\"\r\n              select\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              name=\"evaluationManager\"\r\n              value={currentCompetance.evaluationManager}\r\n              onChange={handleInputChange}\r\n            >\r\n              {niveaux.map((niveau) => (\r\n                <MenuItem value={niveau.value}>{niveau.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={updateCompetance}\r\n            >\r\n              Modifier \r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\" \r\n              onClick={AnnulerCompetance}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCompetance;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\EditClient.js",["375","376"],{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":2,"column":10,"nodeType":"383","messageId":"384","endLine":2,"endColumn":20},{"ruleId":"381","severity":1,"message":"385","line":2,"column":25,"nodeType":"383","messageId":"384","endLine":2,"endColumn":33},{"ruleId":"381","severity":1,"message":"386","line":29,"column":8,"nodeType":"383","messageId":"384","endLine":29,"endColumn":25},{"ruleId":"387","severity":1,"message":"388","line":84,"column":6,"nodeType":"389","endLine":84,"endColumn":8,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":11,"column":1,"nodeType":"393","endLine":31,"endColumn":2},{"ruleId":"391","severity":1,"message":"392","line":27,"column":1,"nodeType":"393","endLine":125,"endColumn":2},{"ruleId":"381","severity":1,"message":"394","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":12},{"ruleId":"387","severity":1,"message":"388","line":68,"column":6,"nodeType":"389","endLine":68,"endColumn":8,"suggestions":"395"},{"ruleId":"377","replacedBy":"396"},{"ruleId":"379","replacedBy":"397"},{"ruleId":"387","severity":1,"message":"388","line":84,"column":6,"nodeType":"389","endLine":84,"endColumn":8,"suggestions":"398"},{"ruleId":"381","severity":1,"message":"399","line":21,"column":9,"nodeType":"383","messageId":"384","endLine":21,"endColumn":16},{"ruleId":"381","severity":1,"message":"399","line":21,"column":9,"nodeType":"383","messageId":"384","endLine":21,"endColumn":16},{"ruleId":"381","severity":1,"message":"400","line":1,"column":17,"nodeType":"383","messageId":"384","endLine":1,"endColumn":26},{"ruleId":"381","severity":1,"message":"401","line":1,"column":28,"nodeType":"383","messageId":"384","endLine":1,"endColumn":36},{"ruleId":"381","severity":1,"message":"402","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":17},{"ruleId":"381","severity":1,"message":"403","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":25},{"ruleId":"381","severity":1,"message":"404","line":43,"column":9,"nodeType":"383","messageId":"384","endLine":43,"endColumn":13},{"ruleId":"391","severity":1,"message":"392","line":23,"column":3,"nodeType":"393","endLine":99,"endColumn":4},{"ruleId":"391","severity":1,"message":"392","line":24,"column":3,"nodeType":"393","endLine":104,"endColumn":4},{"ruleId":"381","severity":1,"message":"405","line":26,"column":9,"nodeType":"383","messageId":"384","endLine":26,"endColumn":14},{"ruleId":"381","severity":1,"message":"406","line":7,"column":23,"nodeType":"383","messageId":"384","endLine":7,"endColumn":34},{"ruleId":"381","severity":1,"message":"407","line":8,"column":29,"nodeType":"383","messageId":"384","endLine":8,"endColumn":45},{"ruleId":"381","severity":1,"message":"408","line":24,"column":10,"nodeType":"383","messageId":"384","endLine":24,"endColumn":17},{"ruleId":"381","severity":1,"message":"409","line":24,"column":19,"nodeType":"383","messageId":"384","endLine":24,"endColumn":29},{"ruleId":"387","severity":1,"message":"410","line":47,"column":6,"nodeType":"389","endLine":47,"endColumn":29,"suggestions":"411"},{"ruleId":"381","severity":1,"message":"405","line":32,"column":9,"nodeType":"383","messageId":"384","endLine":32,"endColumn":14},{"ruleId":"381","severity":1,"message":"403","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":25},{"ruleId":"381","severity":1,"message":"412","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":18},{"ruleId":"381","severity":1,"message":"404","line":43,"column":9,"nodeType":"383","messageId":"384","endLine":43,"endColumn":13},{"ruleId":"381","severity":1,"message":"405","line":27,"column":9,"nodeType":"383","messageId":"384","endLine":27,"endColumn":14},{"ruleId":"413","severity":1,"message":"414","line":136,"column":15,"nodeType":"415","messageId":"416","endLine":136,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":34,"column":19,"nodeType":"415","messageId":"416","endLine":34,"endColumn":24},{"ruleId":"413","severity":1,"message":"414","line":139,"column":15,"nodeType":"415","messageId":"416","endLine":139,"endColumn":20},{"ruleId":"381","severity":1,"message":"417","line":8,"column":5,"nodeType":"383","messageId":"384","endLine":8,"endColumn":22},{"ruleId":"381","severity":1,"message":"418","line":9,"column":5,"nodeType":"383","messageId":"384","endLine":9,"endColumn":26},{"ruleId":"381","severity":1,"message":"419","line":10,"column":5,"nodeType":"383","messageId":"384","endLine":10,"endColumn":24},{"ruleId":"413","severity":1,"message":"414","line":37,"column":19,"nodeType":"415","messageId":"416","endLine":37,"endColumn":24},{"ruleId":"413","severity":1,"message":"414","line":141,"column":15,"nodeType":"415","messageId":"416","endLine":141,"endColumn":20},{"ruleId":"381","severity":1,"message":"406","line":8,"column":23,"nodeType":"383","messageId":"384","endLine":8,"endColumn":34},{"ruleId":"381","severity":1,"message":"420","line":9,"column":32,"nodeType":"383","messageId":"384","endLine":9,"endColumn":51},{"ruleId":"381","severity":1,"message":"421","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":20},{"ruleId":"387","severity":1,"message":"422","line":49,"column":6,"nodeType":"389","endLine":49,"endColumn":29,"suggestions":"423"},{"ruleId":"381","severity":1,"message":"406","line":7,"column":23,"nodeType":"383","messageId":"384","endLine":7,"endColumn":34},{"ruleId":"387","severity":1,"message":"424","line":44,"column":6,"nodeType":"389","endLine":44,"endColumn":29,"suggestions":"425"},"no-native-reassign",["426"],"no-negated-in-lhs",["427"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'ModiferPrestation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["428"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Swal' is defined but never used.",["429"],["426"],["427"],["430"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'PageTitle' is defined but never used.","'AccountCircleIcon' is defined but never used.","'bull' is assigned a value but never used.","'error' is assigned a value but never used.","'useSelector' is defined but never used.","'getContratAction' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getContrat'. Either include it or remove the dependency array.",["431"],"'Typography' is defined but never used.","no-dupe-keys","Duplicate key 'timer'.","ObjectExpression","unexpected","'GET_CLIENT_REMOVE' is defined but never used.","'DELETE_CLIENT_SUCCESS' is defined but never used.","'DELETE_CLIENT_ERROR' is defined but never used.","'getCompetanceAction' is defined but never used.","'clienteAxios' is defined but never used.","React Hook useEffect has a missing dependency: 'getCompetance'. Either include it or remove the dependency array.",["432"],"React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["433"],"no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"434","fix":"436"},{"desc":"434","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},"Update the dependencies array to be: [dispatch]",{"range":"444","text":"445"},{"range":"446","text":"445"},{"range":"447","text":"445"},"Update the dependencies array to be: [getContrat, props.match.params.id]",{"range":"448","text":"449"},"Update the dependencies array to be: [getCompetance, props.match.params.id]",{"range":"450","text":"451"},"Update the dependencies array to be: [getClient, props.match.params.id]",{"range":"452","text":"453"},[2777,2779],"[dispatch]",[2266,2268],[2705,2707],[1742,1765],"[getContrat, props.match.params.id]",[1933,1956],"[getCompetance, props.match.params.id]",[1629,1652],"[getClient, props.match.params.id]"]