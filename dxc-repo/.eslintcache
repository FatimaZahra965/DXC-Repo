[{"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js":"3","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js":"4","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js":"5","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js":"7","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js":"9","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js":"10","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js":"11","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"12","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js":"13","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"14","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"15","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"16","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"17","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"19","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"20","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js":"21","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js":"22","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"23","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js":"24","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js":"25","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js":"26","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"27","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"28","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"29","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"30","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js":"31","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"32","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"33","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"34","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js":"35","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"36","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"37","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js":"38","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js":"39","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"40","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"41","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js":"42","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"43","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"44","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js":"45","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js":"46","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"47","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"48","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js":"49","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js":"50","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js":"51","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"52","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"53","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"54","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"55","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"56","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"57","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"58","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"59","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"60","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js":"61","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js":"62","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js":"63","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js":"64","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"65","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"66","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"67","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js":"68","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"69","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"70","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"71","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"72","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"73","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js":"74"},{"size":915,"mtime":1652819574043,"results":"75","hashOfConfig":"76"},{"size":5083,"mtime":1652819574101,"results":"77","hashOfConfig":"76"},{"size":1444,"mtime":1652819574042,"results":"78","hashOfConfig":"76"},{"size":1914,"mtime":1652819574023,"results":"79","hashOfConfig":"76"},{"size":2058,"mtime":1652819574042,"results":"80","hashOfConfig":"76"},{"size":534,"mtime":1652819574116,"results":"81","hashOfConfig":"76"},{"size":443,"mtime":1652819574114,"results":"82","hashOfConfig":"76"},{"size":5415,"mtime":1652983832114,"results":"83","hashOfConfig":"76"},{"size":1616,"mtime":1652819574068,"results":"84","hashOfConfig":"76"},{"size":8123,"mtime":1652819574072,"results":"85","hashOfConfig":"76"},{"size":2931,"mtime":1652819574115,"results":"86","hashOfConfig":"76"},{"size":6757,"mtime":1652984131203,"results":"87","hashOfConfig":"76"},{"size":696,"mtime":1652870076402,"results":"88","hashOfConfig":"76"},{"size":1457,"mtime":1652870089046,"results":"89","hashOfConfig":"76"},{"size":580,"mtime":1652819574111,"results":"90","hashOfConfig":"76"},{"size":1454,"mtime":1652819574109,"results":"91","hashOfConfig":"76"},{"size":2845,"mtime":1652819574110,"results":"92","hashOfConfig":"76"},{"size":5302,"mtime":1652870778669,"results":"93","hashOfConfig":"76"},{"size":2953,"mtime":1652819574104,"results":"94","hashOfConfig":"76"},{"size":844,"mtime":1652822348021,"results":"95","hashOfConfig":"76"},{"size":137,"mtime":1652819574041,"results":"96","hashOfConfig":"76"},{"size":566,"mtime":1652822368388,"results":"97","hashOfConfig":"76"},{"size":3976,"mtime":1652819574039,"results":"98","hashOfConfig":"76"},{"size":3242,"mtime":1652819574075,"results":"99","hashOfConfig":"76"},{"size":1920,"mtime":1652819574071,"results":"100","hashOfConfig":"76"},{"size":710,"mtime":1652819574028,"results":"101","hashOfConfig":"76"},{"size":172,"mtime":1652819574091,"results":"102","hashOfConfig":"76"},{"size":2766,"mtime":1652819574094,"results":"103","hashOfConfig":"76"},{"size":5917,"mtime":1652819574092,"results":"104","hashOfConfig":"76"},{"size":6234,"mtime":1652984031208,"results":"105","hashOfConfig":"76"},{"size":174,"mtime":1652819574082,"results":"106","hashOfConfig":"76"},{"size":6659,"mtime":1652984051621,"results":"107","hashOfConfig":"76"},{"size":6063,"mtime":1652819574085,"results":"108","hashOfConfig":"76"},{"size":6106,"mtime":1652821853375,"results":"109","hashOfConfig":"76"},{"size":521,"mtime":1652983965429,"results":"110","hashOfConfig":"76"},{"size":363,"mtime":1652984092790,"results":"111","hashOfConfig":"76"},{"size":344,"mtime":1652984103558,"results":"112","hashOfConfig":"76"},{"size":1503,"mtime":1652983954428,"results":"113","hashOfConfig":"76"},{"size":264,"mtime":1652984144024,"results":"114","hashOfConfig":"76"},{"size":366,"mtime":1652984137304,"results":"115","hashOfConfig":"76"},{"size":364,"mtime":1652819574065,"results":"116","hashOfConfig":"76"},{"size":3817,"mtime":1652985491146,"results":"117","hashOfConfig":"76"},{"size":382,"mtime":1652984086574,"results":"118","hashOfConfig":"76"},{"size":4012,"mtime":1652822446563,"results":"119","hashOfConfig":"76"},{"size":5495,"mtime":1652819574024,"results":"120","hashOfConfig":"76"},{"size":326,"mtime":1652819574096,"results":"121","hashOfConfig":"76"},{"size":4946,"mtime":1652819574105,"results":"122","hashOfConfig":"76"},{"size":504,"mtime":1652821876745,"results":"123","hashOfConfig":"76"},{"size":389,"mtime":1652819574087,"results":"124","hashOfConfig":"76"},{"size":1363,"mtime":1652819574037,"results":"125","hashOfConfig":"76"},{"size":3929,"mtime":1652819574025,"results":"126","hashOfConfig":"76"},{"size":4624,"mtime":1652819574035,"results":"127","hashOfConfig":"76"},{"size":902,"mtime":1652819574034,"results":"128","hashOfConfig":"76"},{"size":1474,"mtime":1652819574036,"results":"129","hashOfConfig":"76"},{"size":3416,"mtime":1652980087890,"results":"130","hashOfConfig":"76"},{"size":324,"mtime":1652982293588,"results":"131","hashOfConfig":"76"},{"size":4524,"mtime":1652976787955,"results":"132","hashOfConfig":"76"},{"size":1009,"mtime":1652816681733,"results":"133","hashOfConfig":"76"},{"size":4339,"mtime":1652971684944,"results":"134","hashOfConfig":"76"},{"size":4292,"mtime":1652985521562,"results":"135","hashOfConfig":"76"},{"size":1708,"mtime":1652971981464,"results":"136","hashOfConfig":"76"},{"size":4149,"mtime":1652985571605,"results":"137","hashOfConfig":"76"},{"size":1778,"mtime":1650619633020,"results":"138","hashOfConfig":"76"},{"size":1901,"mtime":1652879171975,"results":"139","hashOfConfig":"76"},{"size":2472,"mtime":1650556839837,"results":"140","hashOfConfig":"76"},{"size":2311,"mtime":1652870900938,"results":"141","hashOfConfig":"76"},{"size":1538,"mtime":1652869917522,"results":"142","hashOfConfig":"76"},{"size":2178,"mtime":1652879489578,"results":"143","hashOfConfig":"76"},{"size":2368,"mtime":1652914268622,"results":"144","hashOfConfig":"76"},{"size":2348,"mtime":1652914311443,"results":"145","hashOfConfig":"76"},{"size":2332,"mtime":1652878946881,"results":"146","hashOfConfig":"76"},{"size":4157,"mtime":1652976243928,"results":"147","hashOfConfig":"76"},{"size":4390,"mtime":1652985620531,"results":"148","hashOfConfig":"76"},{"size":4074,"mtime":1652985474204,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"aoud2a",{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js",[],["322","323"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js",["324","325"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Notifications from \"../../pages/notifications\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport Capabilites from \"../../pages/capabilites/Capabilites\";\r\nimport Competances from \"../../pages/competances/Competances\";\r\nimport Clients from \"../../pages/clients\";\r\nimport Ressources from \"../../pages/ressources/Ressources\";\r\nimport Activites from \"../../pages/activites/Activites\";\r\nimport Technologies from \"../../pages/technologies/Technologies\";\r\nimport Projets from \"../../pages/projets/Projets\";\r\nimport Parametres from \"../../pages/parametres/Parametres\";\r\nimport AjouterPrestation from \"../../pages/prestations/AjouterPrestation\";\r\nimport ModiferPrestation from \"../../pages/prestations/ModiferPrestation\";\r\nimport Prestations from \"../../pages/prestations/Prestations\";\r\nimport AjouteContrat from \"../../pages/contrats/AjouteContrat\";\r\nimport AjouteCompetance from \"../../pages/competances/AjouteCompetances\";\r\nimport Contrats from \"../../pages/contrats/Contrats\";\r\nimport EditContrat from \"../../pages/contrats/EditContrat\";\r\nimport ContratDetail from \"../../pages/contrats/ContratDetail\";\r\nimport AjouteClient from \"../../pages/clients/AjouteClient\";\r\nimport AffichageClient from \"../../pages/clients/AffichageClient\";\r\nimport AjouterRessource from \"../../pages/ressources/AjouterRessource\";\r\nimport ModiferRessource from \"../../pages/ressources/ModiferRessource\";\r\nimport AfficherRessource from \"../../pages/ressources/AfficherRessource\";\r\nimport Certifications from \"../../pages/certifications/Certifications\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/capabilites\" component={Capabilites} />\r\n            <Route path=\"/app/competances\" component={Competances} />\r\n            <Route path=\"/app/competances/ajouteCompetance\" component={AjouteCompetance}/>\r\n            <Route path=\"/app/certifications\" component={Certifications} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n\r\n            <Route\r\n              path=\"/app/prestations/allPrestation\"\r\n              component={Prestations}\r\n            />\r\n            <Route path=\"/app/prestations/ListePrestations\" component={Prestations} />\r\n            <Route path=\"/app/prestations/clients\" component={Clients} />\r\n            <Route path=\"/app/clients/AjouteClient\" component={AjouteClient} />\r\n            <Route path=\"/app/clients/AffichageClients\" component={AffichageClient} />\r\n            <Route path=\"/app/prestations/Contrats\" component={Contrats}/>\r\n            <Route path=\"/app/Contrats/ContratDetail/:id\" component={ContratDetail}/>\r\n            <Route path=\"/app/Contrats/AjouteContrat\" component={AjouteContrat}/>\r\n            <Route path=\"/app/Contrats/EditContrat/:id\" component={EditContrat}/>\r\n            <Route path=\"/app/ressources\" component={Ressources} />\r\n            <Route path=\"/app/prestations/activites\" component={Activites} />\r\n            <Route\r\n              path=\"/app/prestations/technologies\"\r\n              component={Technologies}\r\n            />\r\n            <Route path=\"/app/prestations/projets\" component={Projets} />\r\n            <Route path=\"/app/parametres\" component={Parametres} />\r\n            <Route\r\n              path=\"/app/ressources/AjouterRessource\"\r\n              component={AjouterRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/ModiferRessource/:id\"\r\n              component={ModiferRessource}\r\n            />\r\n            <Route\r\n              path=\"/app/ressources/AfficherRessource/:id\"\r\n              component={AfficherRessource}\r\n            />\r\n\r\n            <Route\r\n              path=\"/app/prestations/AjouterPrestation\"\r\n              component={AjouterPrestation}\r\n            />\r\n            {/* <Route\r\n              path=\"/app/prestations/ModiferPrestation/:id\"\r\n              component={ModiferPrestation}\r\n            />\r\n            <Route\r\n              path=\"/app/prestations/AficherPrestation/:id\"\r\n              component={AfficherPrestation}\r\n            /> */}\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div alignItems={\"center\"}>\r\n              <p>\r\n                {/* © Copyright 2022 DXC Technology Company. All rights reserved */}\r\n              </p>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["326"],"// export default function Certifications() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.certifications.loading);\r\n//   const error = useSelector((state) => state.certifications.error);\r\n//   const certifications = useSelector((state) => state.certifications.certifications);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"code\", label: \"Code\", minWidth: 100 },\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"datecertification\", label: \"Date Certification\", minWidth: 100 },\r\n  { id: \"ressourceid\", label: \"Ressource id\", minWidth: 100 },\r\n  { id: \"niveau\", label: \"Niveau\", minWidth: 180 },\r\n  { id: \"validation\", label: \"Validation\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Certifications = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addCertification = () => {\r\n    let path = `/app/certifications/AjouterCertification`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadCertifications = () => dispatch(getPrestationsAction());\r\n    loadCertifications();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.certifications.loading);\r\n  const error = useSelector((state) => state.certifications.error);\r\n  const certifications = useSelector(\r\n    (state) => state.certifications.certifications,\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/certifications/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/certifications/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Certifications\"  path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addCertification}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Certification\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {certifications\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={certifications.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["327"],"import {\r\n  VALIDATE_FORM,\r\n  VALIDATE_FORM_SUCCESS,\r\n  VALIDATE_FORM_ERROR,\r\n} from \"../types\";\r\n\r\n//state principal\r\nconst initialState = {\r\n  error: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case VALIDATE_FORM:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["328"],"import {\r\n  ADD_RESSOURCE,\r\n  ADD_RESSOURCE_SUCCESS,\r\n  ADD_RESSOURCE_ERROR,\r\n  START_DOWNLOAD_RESSOURCES,\r\n  RESSOURCE_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_RESSOURCE__ERROR,\r\n  GET_RESSOURCE_REMOVE,\r\n  DELETE_RESSOURCE_SUCCESS,\r\n  DELETE_RESSOURCE_ERROR,\r\n  GET_RESSOURCE_EDIT,\r\n  RESSOURCE_EDIT_SUCCESS,\r\n  RESSOURCE_EDIT_ERROR,\r\n  BEGIN_RESSOURCE_EDIT,\r\n  EDITION_RESSOURCE_SUCCESS,\r\n  EDIT_RESSOURCE_ERROR,\r\n} from \"../types\";\r\n\r\n//chaque réducteur a son propre état\r\nconst initialState = {\r\n  ressources: [],\r\n  error: null,\r\n  loading: false,\r\n  ressource: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RESSOURCE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case ADD_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: [...state.ressources, action.payload],\r\n      };\r\n    case ADD_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case START_DOWNLOAD_RESSOURCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        //limpiar y reacrgar el productopara editar\r\n        ressource: {},\r\n      };\r\n    case RESSOURCE_DOWNLOAD_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        ressources: action.payload,\r\n        loading: false,\r\n        error: false,\r\n        ressource: {},\r\n      };\r\n    case DOWNLOAD_RESSOURCE__ERROR:\r\n      return {\r\n        ...state,\r\n        ressources: [],\r\n        loading: false,\r\n        error: true,\r\n        ressource: {},\r\n      };\r\n    case GET_RESSOURCE_REMOVE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case DELETE_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.filter(\r\n          (ressource) => ressource.id !== action.payload,\r\n        ),\r\n      };\r\n    case DELETE_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case GET_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case RESSOURCE_EDIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressource: action.payload,\r\n      };\r\n    case RESSOURCE_EDIT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case BEGIN_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDITION_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.map((ressource) =>\r\n          ressource.id === action.payload.id\r\n            ? (ressource = action.payload)\r\n            : ressource,\r\n        ),\r\n      };\r\n    case EDIT_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",["329"],"import {\r\n  ADD_PRESTATION,\r\n  ADD_PRESTATION_SUCCESS,\r\n  ADD_PRESTATION_ERROR,\r\n  BEGIN_PRESTATION_EDIT,\r\n  EDITION_PRESTATION_SUCCESS,\r\n  EDIT_PRESTATION_ERROR,\r\n  START_DOWNLOAD_PRESTATIONS,\r\n  PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_PRESTATION__ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\n\r\n//créer un nouveau produit - fonction principale\r\nexport function createNewPrestationAction(prestation) {\r\n  console.log(\"prestation\", prestation);\r\n  return (dispatch) => {\r\n    dispatch(newPrestation());\r\n    clienteAxios\r\n      .post(\"http://localhost:9002/DXC/prestations/addPrestation\", prestation)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //dispatch(addNewPrestationSuccess(prestation));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewPrestationError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newPrestation = () => ({\r\n  type: ADD_PRESTATION,\r\n});\r\n\r\nexport const addNewPrestationSuccess = (prestation) => ({\r\n  type: ADD_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const addNewPrestationError = (error) => ({\r\n  type: ADD_PRESTATION_ERROR,\r\n});\r\n\r\n//obtenir la liste des produits de productsReducer (voir API)\r\nexport function getPrestationsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getPrestationsStart());\r\n\r\n    axios\r\n      .get(\"http://localhost:9002/DXC/prestations/allPrestations\")\r\n      .then((resp) => {\r\n        console.log(\"all prestations ----->\", resp.data);\r\n        dispatch(downloadPrestationsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaPrestationsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getPrestationsStart = () => ({\r\n  type: START_DOWNLOAD_PRESTATIONS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadPrestationsSuccessful = (prestations) => ({\r\n  type: PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  payload: prestations,\r\n});\r\n\r\nexport const descargaPrestationsError = () => ({\r\n  type: DOWNLOAD_PRESTATION__ERROR,\r\n});\r\n\r\nexport function editRessourceAction(prestation) {\r\n  return (dispatch) => {\r\n    dispatch(startEditRessource());\r\n\r\n    // clienteAxios\r\n    //   .put(`route/api/${prestation.id}`, prestation)\r\n    //   .then((resp) => {\r\n    //     //console.log(resp);\r\n    //     dispatch(editRessourceSuccess(resp.data));\r\n    //     Swal.fire(\"Stored\", \"The Product was successfully updated\", \"success\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     //console.log(error);\r\n    //     dispatch(editRessourceError());\r\n    //   });\r\n  };\r\n}\r\n\r\nexport const startEditRessource = () => ({\r\n  type: BEGIN_PRESTATION_EDIT,\r\n});\r\n\r\nexport const editRessourceSuccess = (prestation) => ({\r\n  type: EDITION_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const editRessourceError = () => ({\r\n  type: EDIT_PRESTATION_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["330"],"import React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getRessourcesAction } from \"../../services/Actions/ressourcesActions\";\r\n\r\nconst columns = [\r\n  // { id: \"matricule\", label: \"Matricule\", minWidth: 100 },\r\n  { id: \"status\", label: \"Status\", minWidth: 100 },\r\n  { id: \"firstName\", label: \"Nom\", minWidth: 100 },\r\n  { id: \"lastName\", label: \"Prénom\", minWidth: 100 },\r\n  { id: \"genre\", label: \"Genre\", minWidth: 100 },\r\n  { id: \"dateAmbauche\", label: \"Date d'ambauche\", minWidth: 180 },\r\n  { id: \"dateNaissance\", label: \"Date de naissance\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Ressources = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addRessource = () => {\r\n    let path = `/app/ressources/AjouterRessource`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    //productos cuando el componente este listo\r\n    const loadRessours = () => dispatch(getRessourcesAction());\r\n    loadRessours();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.ressources.loading);\r\n  const error = useSelector((state) => state.ressources.error);\r\n  const ressources = useSelector((state) => state.ressources.ressources);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditRessource = (e) => {\r\n  //   let path = `/app/ressources/ModiferRessource/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewRessource = (e) => {\r\n  //   let path = `/app/ressources/AfficherRessurce/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <div className=\"font-wight-bold alert alert-danger text-center mt-5\">\r\n          Hubo un error...\r\n        </div>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Ressources\"    path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addRessource}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Ressource\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ressources\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={ressources.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ressources;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["331"],"// export default function Prestations() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.prestations.loading);\r\n//   const error = useSelector((state) => state.prestations.error);\r\n//   const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"etat\", label: \"Etat\", minWidth: 100 },\r\n  { id: \"market\", label: \"Market\", minWidth: 100 },\r\n  { id: \"type\", label: \"Type\", minWidth: 100 },\r\n  { id: \"dateDebut\", label: \"Date de Début\", minWidth: 180 },\r\n  { id: \"dateFin\", label: \"Date de Fin\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Prestations = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addPrestation = () => {\r\n    let path = `/app/prestations/AjouterPrestation`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadProducts = () => dispatch(getPrestationsAction());\r\n    loadProducts();\r\n  }, []);\r\n\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.prestations.loading);\r\n  const error = useSelector((state) => state.prestations.error);\r\n  const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/prestations/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/prestations/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Prestations\"  path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addPrestation}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Prestation\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {prestations\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={prestations.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prestations;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["332"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function ModiferPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const editPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitEditPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      Titre,\r\n      Etat,\r\n      Market,\r\n      Type,\r\n      DateDebut,\r\n      DateFin,\r\n    };\r\n    editPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer une prestation\" />\r\n      <form onSubmit={submitEditPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",["333"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function AjouterPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const addPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitNewPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      titre: Titre,\r\n      etat: Etat,\r\n      market: Market,\r\n      type: Type,\r\n      dateDebut: DateDebut,\r\n      dateFin: DateFin,\r\n    };\r\n    addPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Ajouter une prestation\" />\r\n      <form onSubmit={submitNewPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js",["334","335"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tabs from \"./Tabs\";\r\nimport './Competances.css';\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport CompetencesTransversales from \"./CompetencesTransversales.js\";\r\nimport CompetencesTechniques from \"./CompetencesTechniques.js\";\r\nimport CompetencesLinguistiques from \"./CompetencesLinguistiques.js\";\r\n\r\nexport default function Competances() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  function AjouteCompetance() {\r\n    history.push(\"/app/competances/ajouteCompetance\");\r\n  }\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Competances\"  path=\"/app/dashboard\"/>\r\n      <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteCompetance}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter Competance\r\n          </Button>\r\n        </div>\r\n\r\n        <Tabs >\r\n        <div title=\"Competences Techniques \">\r\n       <CompetencesTechniques/>\r\n        </div>\r\n        <div title=\"Competences Transversales\">\r\n        <CompetencesTransversales/>\r\n        </div>\r\n        <div title=\"Competences Linguistiques\">\r\n        <CompetencesLinguistiques/>\r\n        </div>\r\n      </Tabs>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js",["336","337","338"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\";\r\nexport default function Clients() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:9004/DXC/clients/allClients\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setClients(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  function AjouteClient() {\r\n    history.push(\"/app/clients/AjouteClient\");\r\n  }\r\n   \r\n  const AfficheClient = (e) => {\r\n    let path = `/app/clients/AffichageClient` + e;\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <PageTitle title=\"Liste des Clients\" path=\"/app/dashboard\" />\r\n      </div>\r\n      <div>\r\n        <div className={classes.Search}>\r\n          <Button variant=\"contained\" className={classes.ButtonSearch}>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Input\r\n            className={classes.InputSearch}\r\n            type=\"text\"\r\n            placeholder=\"Chercher un client par nom \"\r\n          />\r\n        </div>\r\n        <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteClient}\r\n          >\r\n            <AddIcon /> Ajouter Client\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead >\r\n            <TableRow className={classes.TableRow}>\r\n\r\n              <TableCell>Nom de Client</TableCell>\r\n              <TableCell>Market</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {clients.map((client) => (\r\n              <TableRow key={client.nomClient}>\r\n               \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {client.nomClient}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {client.market}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                <Button \r\n                onClick={() => AfficheClient(client.id)}>\r\n                 <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                 \r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>\r\n  \r\n\r\n\r\n  \r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["339"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewClientAction } from \"../../services/Actions/clientActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteClient() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [market, getMarket] = useState(\"\");\r\n\r\n // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const addClient = (client) =>\r\n    dispatch(createNewClientAction(client));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Client\r\n  const submitNewClient = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n    \r\n      nomClient.trim() === \"\" ||\r\n      market.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Client\r\n    let client = {\r\n      nomClient : nomClient,\r\n      market :market,\r\n      \r\n    };\r\n    addClient(client);\r\n    history.push(\"/app/prestations/clients\");\r\n  };\r\n  function AnnulerClient() {\r\n    history.push(\"/app/prestations/clients\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Client\" path=\"/app/prestations/clients\" />\r\n      </div>\r\n      <form onSubmit={submitNewClient}>\r\n        <Grid container spacing={3}>\r\n  \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={market}\r\n              onChange={(e) => getMarket(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewClient}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerClient}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteClient;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["340","341","342","343","344","345","346","347"],"import React, { useEffect, useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editContratAction } from \"../../services/Actions/contratActions\";\r\nimport { getContratAction } from \"../../services/Actions/contratActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\nfunction EditContrat(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const initialContratState = {\r\n    id: null,\r\n    nomClient: \"\",\r\n    nomContrat: \"\",\r\n    description: \"\",\r\n  };\r\n  const [currentContrat, setCurrentContrat] = useState(initialContratState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const getContrat = () => {\r\n    axios\r\n    .get(`http://localhost:8080/DXC/contrats/Contrat/`+props.match.params.id)\r\n    .then((resp) => {\r\n      console.log(\"hhhhkldmdmmdm\",resp.data);\r\n      setCurrentContrat(resp.data);\r\n      console.log(\"CurrentContrat\",currentContrat); })\r\n    .catch((error) => {\r\n      console.log(error);\r\n     \r\n    });\r\n  };\r\n\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n  useEffect(() => {\r\n    getContrat(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentContrat({ ...currentContrat, [name]: value });\r\n  };\r\n\r\n\r\n  const updateContent = () => {\r\n    console.log(\"currentContrat\",currentContrat);\r\n    dispatch(editContratAction(currentContrat))\r\n      .then(response => {\r\n        console.log(response);\r\n        history.push(\"/app/prestations/Contrats\");\r\n        setMessage(\"The Contrat was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      history.push(\"/app/prestations/Contrats\");\r\n\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Modifier un contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={updateContent}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              name=\"nomContrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.nomContrat}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              name=\"nomClient\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.nomClient}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={currentContrat.description}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={updateContent}\r\n            >\r\n              Modifier \r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\" \r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",["348"],"import React, { useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport \"./contrat.css\";\r\nfunction ContratDetail(props) {\r\n  const [contrats, setContrats] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/contrats/allContrats\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setContrats(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle\r\n          title=\"Afficher d'un Contrat\"\r\n          path=\"/app/prestations/Contrats\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"demo\">\r\n        <h2 class=\"penName\">Contrat</h2>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContratDetail;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["349"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewContratAction } from \"../../services/Actions/contratActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteContrat() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomContrat, getNomContrat] = useState(\"\");\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [description, getDescription] = useState(\"\");\r\n\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const addContrat = (contrat) =>\r\n    dispatch(createNewContratAction(contrat));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew contrat\r\n  const submitNewContrat = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomContrat.trim() === \"\" ||\r\n      nomClient.trim() === \"\" ||\r\n      description.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau contrat\r\n    let contrat = {\r\n      nomContrat : nomContrat,\r\n      nomClient : nomClient,\r\n      description :description,\r\n      \r\n    };\r\n    addContrat(contrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={submitNewContrat}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomContrat}\r\n              onChange={(e) => getNomContrat(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => getDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n      \r\n          {/* <Grid item xs={6}>\r\n            <label>Date de Debut</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid> */}\r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewContrat}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["350","351","352"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport './contrat.css';\r\nexport default function Contrats() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [contrats, setContrats] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:9003/DXC/contrats/allContrats\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setContrats(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  function AjouteContrat() {\r\n    history.push(\"/app/Contrats/AjouteContrat\");\r\n  }\r\n   function EditContrat() {\r\n    history.push(\"/app/Contrats/EditContrat/\"+1);\r\n  }\r\n  const AfficheContrat = (e) => {\r\n    let path = `/app/Contrats/ContratDetail/` + e;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"  Liste des contrats\"  path=\"/app/dashboard\"/>\r\n      </div>\r\n\r\n      <div>\r\n        <div className={classes.Search}>\r\n          <Button variant=\"contained\" className={classes.ButtonSearch}>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Input\r\n            className={classes.InputSearch}\r\n            type=\"text\"\r\n            placeholder=\"Chercher...\"\r\n          />\r\n        </div>    <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteContrat}\r\n          >\r\n          \r\n            <AddIcon /> Ajouter contrat\r\n          </Button>\r\n        </div>\r\n    \r\n      </div>\r\n      <br />\r\n     \r\n      <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead >\r\n            <TableRow className={classes.TableRow}>\r\n              <TableCell>Nom de Contrat</TableCell>\r\n              <TableCell>Nom de Client</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {contrats.map((contrat) => (\r\n              <TableRow key={contrat.nomContrat}>\r\n               \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.nomContrat}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.nomClient}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {contrat.description}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                <Button \r\n                onClick={() => AfficheContrat(contrat.id)}>\r\n                 <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                  <Button onClick={() => EditContrat(contrat.id)}>\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["353"],"import {\r\n    ADD_CONTRAT,\r\n    ADD_CONTRAT_SUCCESS,\r\n    ADD_CONTRAT_ERROR,\r\n    START_DOWNLOAD_CONTRATS,\r\n    CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CONTRAT__ERROR,\r\n    GET_CONTRAT_EDIT,\r\n    CONTRAT_EDIT_SUCCESS,\r\n    CONTRAT_EDIT_ERROR,\r\n    BEGIN_CONTRAT_EDIT,\r\n    EDITION_CONTRAT_SUCCESS,\r\n    EDIT_CONTRAT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    contrats: [],\r\n    error: null,\r\n    loading: false,\r\n    contrat: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CONTRAT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: [...state.contrats, action.payload],\r\n        };\r\n      case ADD_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CONTRATS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          contrat: {},\r\n        };\r\n      case CONTRAT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          contrats: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          contrat: {},\r\n        };\r\n      case DOWNLOAD_CONTRAT__ERROR:\r\n        return {\r\n          ...state,\r\n          contrats: [],\r\n          loading: false,\r\n          error: true,\r\n          contrat: {},\r\n        };\r\n      case GET_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case CONTRAT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrat: action.payload,\r\n        };\r\n      case CONTRAT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: state.contrats.map((contrat) =>\r\n            contrat.id === action.payload.id\r\n              ? (contrat = action.payload)\r\n              : contrat,\r\n          ),\r\n        };\r\n      case EDIT_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["354"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    clients: [],\r\n    error: null,\r\n    loading: false,\r\n    client: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CLIENT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: [...state.clients, action.payload],\r\n        };\r\n      case ADD_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CLIENTS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          client: {},\r\n        };\r\n      case CLIENT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          clients: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          client: {},\r\n        };\r\n      case DOWNLOAD_CLIENT__ERROR:\r\n        return {\r\n          ...state,\r\n          clients: [],\r\n          loading: false,\r\n          error: true,\r\n          client: {},\r\n        };\r\n   \r\n      case CLIENT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          client: action.payload,\r\n        };\r\n      case CLIENT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CLIENT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: state.clients.map((client) =>\r\n            client.id === action.payload.id\r\n              ? (client = action.payload)\r\n              : client,\r\n          ),\r\n        };\r\n      case EDIT_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",["355"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"competance 1\",\r\n      \"4\",\r\n      \"2\",\r\n    ),\r\n    createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n      createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n  ];\r\nfunction CompetencesTransversales(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTransversales;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",["356"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"Francais\",\r\n      \" 5\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"Arab\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"Anglais\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesLinguistiques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesLinguistiques;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",["357"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"IBM\",\r\n      \" 1\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesTechniques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTechniques;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["358"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewCompetanceAction } from \"../../services/Actions/competanceActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteCompetance() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomCompetance, getNomCompetance] = useState(\"\");\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [description, getDescription] = useState(\"\");\r\n\r\n // créer un nouveau Competance\r\n  const dispatch = useDispatch();\r\n  const addCompetance = (competance) =>\r\n    dispatch(createNewCompetanceAction(competance));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Competance\r\n  const submitNewCompetance = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomCompetance.trim() === \"\"\r\n      \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Competance\r\n    let competance = {\r\n      nomCompetance : nomCompetance,\r\n      \r\n      \r\n    };\r\n    addCompetance(competance);\r\n    history.push(\"/app/competances\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Competance\" path=\"/app/competances\" />\r\n      </div>\r\n      <form onSubmit={submitNewCompetance}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Competance\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomCompetance}\r\n              onChange={(e) => getNomCompetance(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => getDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n      \r\n          {/* <Grid item xs={6}>\r\n            <label>Date de Debut</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid> */}\r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewCompetance}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteCompetance;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js",["359","360","361"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    GET_CLIENT_REMOVE,\r\n    DELETE_CLIENT_SUCCESS,\r\n    DELETE_CLIENT_ERROR,\r\n    GET_CLIENT_EDIT,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  import Swal from \"sweetalert2\";\r\n  \r\n  import clienteAxios from \"../../config/axios\";\r\n  \r\n  //créer un nouveau client - fonction principale\r\n  export function createNewClientAction(client) {\r\n    console.log(\"client\", client);\r\n    return (dispatch) => {\r\n      dispatch(newClient());\r\n  \r\n          clienteAxios\r\n            .post(\"http://localhost:9004/DXC/clients/addClient\", client)\r\n            .then((res) => {\r\n              console.log(res);\r\n              //si se inserta correctamente\r\n              dispatch(addNewClientSuccess(client));\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              //si hay un error\r\n              dispatch(addNewClientError());\r\n            });\r\n    };\r\n  }\r\n  \r\n  export const newClient = () => ({\r\n    type: ADD_CLIENT,\r\n  });\r\n  \r\n  export const addNewClientSuccess = (client) => ({\r\n    type: ADD_CLIENT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const addNewClientError = (error) => ({\r\n    type: ADD_CLIENT_ERROR,\r\n  });\r\n  \r\n  //obtenir la liste des clients de clientsReducer (voir API)\r\n  export function getClientsAction() {\r\n    return (dispatch) => {\r\n      dispatch(getClientsStart());\r\n  \r\n      //interroger l'API\r\n        clienteAxios\r\n          .get(\"http://localhost:9004/DXC/clients/allClients\")\r\n          .then((resp) => {\r\n            //console.log(resp);\r\n            dispatch(downloadClientsSuccessful(resp.data));\r\n          })\r\n          .catch((error) => {\r\n            //console.log(error);\r\n            dispatch(descargaClientsError());\r\n          });\r\n    };\r\n  }\r\n  \r\n  export const getClientsStart = () => ({\r\n    type: START_DOWNLOAD_CLIENTS,\r\n  });\r\n  \r\n  //API de requête\r\n  export const downloadClientsSuccessful = (client) => ({\r\n    type: CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    payload: client,\r\n  });\r\n  \r\n  export const descargaClientsError = () => ({\r\n    type: DOWNLOAD_CLIENT__ERROR,\r\n  });\r\n  //fonction pour obtenir le client à modifier\r\n  export function getClientAcoution(id) {\r\n    return (dispatch) => {\r\n      dispatch(getEditClientAction());\r\n  \r\n      //obtenir l'api de  le client\r\n      clienteAxios\r\n        .get(`/route/api/${id}`)\r\n        .then((resp) => {\r\n          console.log(resp.data);\r\n          dispatch(getClientEditSuccess(resp.data));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          dispatch(getClientEditError());\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const getEditClientAction = (id) => ({\r\n    type: GET_CLIENT_EDIT,\r\n  });\r\n  \r\n  export const getClientEditSuccess = (client) => ({\r\n    type: CLIENT_EDIT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const getClientEditError = () => ({\r\n    type: CLIENT_EDIT_ERROR,\r\n  });\r\n  \r\n  //MODIFIER un client DANS L'API ET L'ETAT\r\n  export function editClientAction(client) {\r\n    return (dispatch) => {\r\n      dispatch(startEditClient());\r\n  \r\n      //interrogez l'API et envoyez une méthode put à mettre à jour\r\n      clienteAxios\r\n        .put(`route/api/${client.id}`, client)\r\n        .then((resp) => {\r\n          //console.log(resp);\r\n          dispatch(editClientSuccess(resp.data));\r\n          Swal.fire(\"Stored\", \"le client été modifier avec succés \", \"success\");\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n          dispatch(editClientError());\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const startEditClient = () => ({\r\n    type: BEGIN_CLIENT_EDIT,\r\n  });\r\n  \r\n  export const editClientSuccess = (client) => ({\r\n    type: EDITION_CLIENT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const editClientError = () => ({\r\n    type: EDIT_CLIENT_ERROR,\r\n  });\r\n  ",{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":2,"column":25,"nodeType":"368","messageId":"369","endLine":2,"endColumn":33},{"ruleId":"366","severity":1,"message":"370","line":28,"column":8,"nodeType":"368","messageId":"369","endLine":28,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":84,"column":6,"nodeType":"373","endLine":84,"endColumn":8,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":11,"column":1,"nodeType":"377","endLine":31,"endColumn":2},{"ruleId":"375","severity":1,"message":"376","line":27,"column":1,"nodeType":"377","endLine":125,"endColumn":2},{"ruleId":"366","severity":1,"message":"378","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":68,"column":6,"nodeType":"373","endLine":68,"endColumn":8,"suggestions":"379"},{"ruleId":"371","severity":1,"message":"372","line":84,"column":6,"nodeType":"373","endLine":84,"endColumn":8,"suggestions":"380"},{"ruleId":"366","severity":1,"message":"381","line":21,"column":9,"nodeType":"368","messageId":"369","endLine":21,"endColumn":16},{"ruleId":"366","severity":1,"message":"381","line":21,"column":9,"nodeType":"368","messageId":"369","endLine":21,"endColumn":16},{"ruleId":"366","severity":1,"message":"382","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"383","line":1,"column":28,"nodeType":"368","messageId":"369","endLine":1,"endColumn":36},{"ruleId":"366","severity":1,"message":"384","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":25},{"ruleId":"366","severity":1,"message":"385","line":18,"column":8,"nodeType":"368","messageId":"369","endLine":18,"endColumn":16},{"ruleId":"366","severity":1,"message":"386","line":43,"column":9,"nodeType":"368","messageId":"369","endLine":43,"endColumn":13},{"ruleId":"366","severity":1,"message":"387","line":26,"column":9,"nodeType":"368","messageId":"369","endLine":26,"endColumn":14},{"ruleId":"366","severity":1,"message":"388","line":7,"column":23,"nodeType":"368","messageId":"369","endLine":7,"endColumn":34},{"ruleId":"366","severity":1,"message":"389","line":9,"column":10,"nodeType":"368","messageId":"369","endLine":9,"endColumn":26},{"ruleId":"366","severity":1,"message":"390","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":20},{"ruleId":"366","severity":1,"message":"391","line":24,"column":10,"nodeType":"368","messageId":"369","endLine":24,"endColumn":17},{"ruleId":"366","severity":1,"message":"392","line":42,"column":9,"nodeType":"368","messageId":"369","endLine":42,"endColumn":20},{"ruleId":"366","severity":1,"message":"393","line":43,"column":9,"nodeType":"368","messageId":"369","endLine":43,"endColumn":26},{"ruleId":"366","severity":1,"message":"394","line":44,"column":9,"nodeType":"368","messageId":"369","endLine":44,"endColumn":24},{"ruleId":"371","severity":1,"message":"395","line":47,"column":6,"nodeType":"373","endLine":47,"endColumn":29,"suggestions":"396"},{"ruleId":"366","severity":1,"message":"397","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"387","line":27,"column":9,"nodeType":"368","messageId":"369","endLine":27,"endColumn":14},{"ruleId":"366","severity":1,"message":"384","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":25},{"ruleId":"366","severity":1,"message":"398","line":17,"column":8,"nodeType":"368","messageId":"369","endLine":17,"endColumn":18},{"ruleId":"366","severity":1,"message":"386","line":43,"column":9,"nodeType":"368","messageId":"369","endLine":43,"endColumn":13},{"ruleId":"375","severity":1,"message":"376","line":24,"column":3,"nodeType":"377","endLine":104,"endColumn":4},{"ruleId":"375","severity":1,"message":"376","line":23,"column":3,"nodeType":"377","endLine":99,"endColumn":4},{"ruleId":"366","severity":1,"message":"382","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"382","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"382","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":26},{"ruleId":"366","severity":1,"message":"387","line":27,"column":9,"nodeType":"368","messageId":"369","endLine":27,"endColumn":14},{"ruleId":"366","severity":1,"message":"399","line":8,"column":5,"nodeType":"368","messageId":"369","endLine":8,"endColumn":22},{"ruleId":"366","severity":1,"message":"400","line":9,"column":5,"nodeType":"368","messageId":"369","endLine":9,"endColumn":26},{"ruleId":"366","severity":1,"message":"401","line":10,"column":5,"nodeType":"368","messageId":"369","endLine":10,"endColumn":24},"no-native-reassign",["402"],"no-negated-in-lhs",["403"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ModiferPrestation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["404"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Swal' is defined but never used.",["405"],["406"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'AccountCircleIcon' is defined but never used.","'EditIcon' is defined but never used.","'bull' is assigned a value but never used.","'error' is assigned a value but never used.","'useSelector' is defined but never used.","'getContratAction' is defined but never used.","'clienteAxios' is defined but never used.","'message' is assigned a value but never used.","'validarForm' is assigned a value but never used.","'SuccessValidation' is assigned a value but never used.","'errorValidation' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getContrat'. Either include it or remove the dependency array.",["407"],"'contrats' is assigned a value but never used.","'Typography' is defined but never used.","'GET_CLIENT_REMOVE' is defined but never used.","'DELETE_CLIENT_SUCCESS' is defined but never used.","'DELETE_CLIENT_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"408","fix":"409"},{"desc":"408","fix":"410"},{"desc":"408","fix":"411"},{"desc":"412","fix":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},{"range":"416","text":"415"},{"range":"417","text":"415"},"Update the dependencies array to be: [getContrat, props.match.params.id]",{"range":"418","text":"419"},[2777,2779],"[dispatch]",[2266,2268],[2705,2707],[1772,1795],"[getContrat, props.match.params.id]"]