[{"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js":"3","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js":"4","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js":"5","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js":"7","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js":"9","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js":"10","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js":"11","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js":"12","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js":"13","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js":"14","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js":"15","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js":"16","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js":"17","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js":"18","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js":"19","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js":"20","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js":"21","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js":"22","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js":"23","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js":"24","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js":"25","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js":"26","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js":"27","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js":"28","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js":"29","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js":"30","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js":"31","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js":"32","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js":"33","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js":"34","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js":"35","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js":"36","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js":"37","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js":"38","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js":"39","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js":"40","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js":"41","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js":"42","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js":"43","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js":"44","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js":"45","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js":"46","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js":"47","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js":"48","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js":"49","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js":"50","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js":"51","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"52","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js":"53","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"54","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js":"55","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js":"56","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js":"57","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js":"58","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js":"59","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js":"60","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js":"61","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js":"62","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js":"63","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js":"64","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js":"65","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js":"66","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js":"67","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js":"68","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js":"69","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js":"70","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js":"71","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js":"72","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js":"73","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js":"74"},{"size":915,"mtime":1652819574043,"results":"75","hashOfConfig":"76"},{"size":5083,"mtime":1652819574101,"results":"77","hashOfConfig":"76"},{"size":1444,"mtime":1652819574042,"results":"78","hashOfConfig":"76"},{"size":1914,"mtime":1652819574023,"results":"79","hashOfConfig":"76"},{"size":2058,"mtime":1652819574042,"results":"80","hashOfConfig":"76"},{"size":534,"mtime":1652819574116,"results":"81","hashOfConfig":"76"},{"size":443,"mtime":1652819574114,"results":"82","hashOfConfig":"76"},{"size":5430,"mtime":1653048176005,"results":"83","hashOfConfig":"76"},{"size":1616,"mtime":1652819574068,"results":"84","hashOfConfig":"76"},{"size":8123,"mtime":1652819574072,"results":"85","hashOfConfig":"76"},{"size":2931,"mtime":1652819574115,"results":"86","hashOfConfig":"76"},{"size":6757,"mtime":1653044546082,"results":"87","hashOfConfig":"76"},{"size":696,"mtime":1653044546145,"results":"88","hashOfConfig":"76"},{"size":1457,"mtime":1652870089046,"results":"89","hashOfConfig":"76"},{"size":580,"mtime":1652819574111,"results":"90","hashOfConfig":"76"},{"size":1454,"mtime":1652819574109,"results":"91","hashOfConfig":"76"},{"size":2845,"mtime":1652819574110,"results":"92","hashOfConfig":"76"},{"size":5302,"mtime":1653044546147,"results":"93","hashOfConfig":"76"},{"size":2953,"mtime":1652819574104,"results":"94","hashOfConfig":"76"},{"size":844,"mtime":1653044546067,"results":"95","hashOfConfig":"76"},{"size":137,"mtime":1652819574041,"results":"96","hashOfConfig":"76"},{"size":566,"mtime":1653044546077,"results":"97","hashOfConfig":"76"},{"size":3976,"mtime":1652819574039,"results":"98","hashOfConfig":"76"},{"size":3242,"mtime":1652819574075,"results":"99","hashOfConfig":"76"},{"size":1920,"mtime":1652819574071,"results":"100","hashOfConfig":"76"},{"size":710,"mtime":1652819574028,"results":"101","hashOfConfig":"76"},{"size":172,"mtime":1652819574091,"results":"102","hashOfConfig":"76"},{"size":2766,"mtime":1652819574094,"results":"103","hashOfConfig":"76"},{"size":5917,"mtime":1652819574092,"results":"104","hashOfConfig":"76"},{"size":6234,"mtime":1653044546131,"results":"105","hashOfConfig":"76"},{"size":174,"mtime":1652819574082,"results":"106","hashOfConfig":"76"},{"size":6659,"mtime":1653044546128,"results":"107","hashOfConfig":"76"},{"size":6063,"mtime":1652819574085,"results":"108","hashOfConfig":"76"},{"size":6106,"mtime":1652821853375,"results":"109","hashOfConfig":"76"},{"size":521,"mtime":1653044546131,"results":"110","hashOfConfig":"76"},{"size":363,"mtime":1653044546114,"results":"111","hashOfConfig":"76"},{"size":344,"mtime":1653044546131,"results":"112","hashOfConfig":"76"},{"size":1525,"mtime":1653048007884,"results":"113","hashOfConfig":"76"},{"size":264,"mtime":1653044546082,"results":"114","hashOfConfig":"76"},{"size":366,"mtime":1653044546082,"results":"115","hashOfConfig":"76"},{"size":334,"mtime":1653046978158,"results":"116","hashOfConfig":"76"},{"size":3817,"mtime":1653044546082,"results":"117","hashOfConfig":"76"},{"size":382,"mtime":1653044546114,"results":"118","hashOfConfig":"76"},{"size":4027,"mtime":1653048191041,"results":"119","hashOfConfig":"76"},{"size":5495,"mtime":1652819574024,"results":"120","hashOfConfig":"76"},{"size":326,"mtime":1652819574096,"results":"121","hashOfConfig":"76"},{"size":4946,"mtime":1652819574105,"results":"122","hashOfConfig":"76"},{"size":504,"mtime":1652821876745,"results":"123","hashOfConfig":"76"},{"size":389,"mtime":1652819574087,"results":"124","hashOfConfig":"76"},{"size":1363,"mtime":1652819574037,"results":"125","hashOfConfig":"76"},{"size":3929,"mtime":1652819574025,"results":"126","hashOfConfig":"76"},{"size":4624,"mtime":1652819574035,"results":"127","hashOfConfig":"76"},{"size":902,"mtime":1652819574034,"results":"128","hashOfConfig":"76"},{"size":1474,"mtime":1652819574036,"results":"129","hashOfConfig":"76"},{"size":1778,"mtime":1653044546097,"results":"130","hashOfConfig":"76"},{"size":1901,"mtime":1653044546097,"results":"131","hashOfConfig":"76"},{"size":2311,"mtime":1653044546131,"results":"132","hashOfConfig":"76"},{"size":2472,"mtime":1653044546131,"results":"133","hashOfConfig":"76"},{"size":1538,"mtime":1653044546131,"results":"134","hashOfConfig":"76"},{"size":324,"mtime":1653044546082,"results":"135","hashOfConfig":"76"},{"size":3416,"mtime":1653044546082,"results":"136","hashOfConfig":"76"},{"size":1009,"mtime":1653044546114,"results":"137","hashOfConfig":"76"},{"size":4699,"mtime":1653057557990,"results":"138","hashOfConfig":"76"},{"size":4160,"mtime":1653047829858,"results":"139","hashOfConfig":"76"},{"size":4295,"mtime":1653057638633,"results":"140","hashOfConfig":"76"},{"size":4339,"mtime":1653044546112,"results":"141","hashOfConfig":"76"},{"size":2348,"mtime":1653044546097,"results":"142","hashOfConfig":"76"},{"size":2368,"mtime":1653044546097,"results":"143","hashOfConfig":"76"},{"size":2332,"mtime":1653044546097,"results":"144","hashOfConfig":"76"},{"size":2178,"mtime":1653044546097,"results":"145","hashOfConfig":"76"},{"size":1708,"mtime":1653044546114,"results":"146","hashOfConfig":"76"},{"size":4444,"mtime":1653058408799,"results":"147","hashOfConfig":"76"},{"size":4390,"mtime":1653044546131,"results":"148","hashOfConfig":"76"},{"size":4074,"mtime":1653044546131,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"aoud2a",{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"152"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"152"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"152"},"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\index.js",[],["318","319"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\serviceWorker.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\LayoutContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\context\\UserContext.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\store\\store.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\Layout.js",["320","321"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\Login.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\themes\\default.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\certifications\\Certifications.js",["322"],"// export default function Certifications() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.certifications.loading);\r\n//   const error = useSelector((state) => state.certifications.error);\r\n//   const certifications = useSelector((state) => state.certifications.certifications);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"code\", label: \"Code\", minWidth: 100 },\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"datecertification\", label: \"Date Certification\", minWidth: 100 },\r\n  { id: \"ressourceid\", label: \"Ressource id\", minWidth: 100 },\r\n  { id: \"niveau\", label: \"Niveau\", minWidth: 180 },\r\n  { id: \"validation\", label: \"Validation\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Certifications = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addCertification = () => {\r\n    let path = `/app/certifications/AjouterCertification`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadCertifications = () => dispatch(getPrestationsAction());\r\n    loadCertifications();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.certifications.loading);\r\n  const error = useSelector((state) => state.certifications.error);\r\n  const certifications = useSelector(\r\n    (state) => state.certifications.certifications,\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/certifications/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/certifications/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Certifications\"  path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addCertification}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Certification\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {certifications\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={certifications.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certifications;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\certificationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\validacionReducer.js",["323"],"import {\r\n  VALIDATE_FORM,\r\n  VALIDATE_FORM_SUCCESS,\r\n  VALIDATE_FORM_ERROR,\r\n} from \"../types\";\r\n\r\n//state principal\r\nconst initialState = {\r\n  error: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case VALIDATE_FORM:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case VALIDATE_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\prestationsReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\ressourcesReducer.js",["324"],"import {\r\n  ADD_RESSOURCE,\r\n  ADD_RESSOURCE_SUCCESS,\r\n  ADD_RESSOURCE_ERROR,\r\n  START_DOWNLOAD_RESSOURCES,\r\n  RESSOURCE_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_RESSOURCE__ERROR,\r\n  GET_RESSOURCE_REMOVE,\r\n  DELETE_RESSOURCE_SUCCESS,\r\n  DELETE_RESSOURCE_ERROR,\r\n  GET_RESSOURCE_EDIT,\r\n  RESSOURCE_EDIT_SUCCESS,\r\n  RESSOURCE_EDIT_ERROR,\r\n  BEGIN_RESSOURCE_EDIT,\r\n  EDITION_RESSOURCE_SUCCESS,\r\n  EDIT_RESSOURCE_ERROR,\r\n} from \"../types\";\r\n\r\n//chaque réducteur a son propre état\r\nconst initialState = {\r\n  ressources: [],\r\n  error: null,\r\n  loading: false,\r\n  ressource: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_RESSOURCE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case ADD_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: [...state.ressources, action.payload],\r\n      };\r\n    case ADD_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case START_DOWNLOAD_RESSOURCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        //limpiar y reacrgar el productopara editar\r\n        ressource: {},\r\n      };\r\n    case RESSOURCE_DOWNLOAD_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        ressources: action.payload,\r\n        loading: false,\r\n        error: false,\r\n        ressource: {},\r\n      };\r\n    case DOWNLOAD_RESSOURCE__ERROR:\r\n      return {\r\n        ...state,\r\n        ressources: [],\r\n        loading: false,\r\n        error: true,\r\n        ressource: {},\r\n      };\r\n    case GET_RESSOURCE_REMOVE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case DELETE_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.filter(\r\n          (ressource) => ressource.id !== action.payload,\r\n        ),\r\n      };\r\n    case DELETE_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case GET_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case RESSOURCE_EDIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressource: action.payload,\r\n      };\r\n    case RESSOURCE_EDIT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    case BEGIN_RESSOURCE_EDIT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case EDITION_RESSOURCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        ressources: state.ressources.map((ressource) =>\r\n          ressource.id === action.payload.id\r\n            ? (ressource = action.payload)\r\n            : ressource,\r\n        ),\r\n      };\r\n    case EDIT_RESSOURCE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\types\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\prestationsActions.js",["325"],"import {\r\n  ADD_PRESTATION,\r\n  ADD_PRESTATION_SUCCESS,\r\n  ADD_PRESTATION_ERROR,\r\n  BEGIN_PRESTATION_EDIT,\r\n  EDITION_PRESTATION_SUCCESS,\r\n  EDIT_PRESTATION_ERROR,\r\n  START_DOWNLOAD_PRESTATIONS,\r\n  PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  DOWNLOAD_PRESTATION__ERROR,\r\n} from \"../types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\nimport axios from \"axios\";\r\n\r\n//créer un nouveau produit - fonction principale\r\nexport function createNewPrestationAction(prestation) {\r\n  console.log(\"prestation\", prestation);\r\n  return (dispatch) => {\r\n    dispatch(newPrestation());\r\n    clienteAxios\r\n      .post(\"http://localhost:9002/DXC/prestations/addPrestation\", prestation)\r\n      .then((res) => {\r\n        console.log(res);\r\n        //dispatch(addNewPrestationSuccess(prestation));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //si hay un error\r\n        dispatch(addNewPrestationError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const newPrestation = () => ({\r\n  type: ADD_PRESTATION,\r\n});\r\n\r\nexport const addNewPrestationSuccess = (prestation) => ({\r\n  type: ADD_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const addNewPrestationError = (error) => ({\r\n  type: ADD_PRESTATION_ERROR,\r\n});\r\n\r\n//obtenir la liste des produits de productsReducer (voir API)\r\nexport function getPrestationsAction() {\r\n  return (dispatch) => {\r\n    dispatch(getPrestationsStart());\r\n\r\n    axios\r\n      .get(\"http://localhost:9002/DXC/prestations/allPrestations\")\r\n      .then((resp) => {\r\n        console.log(\"all prestations ----->\", resp.data);\r\n        dispatch(downloadPrestationsSuccessful(resp.data));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n        dispatch(descargaPrestationsError());\r\n      });\r\n  };\r\n}\r\n\r\nexport const getPrestationsStart = () => ({\r\n  type: START_DOWNLOAD_PRESTATIONS,\r\n});\r\n\r\n//API de requête\r\nexport const downloadPrestationsSuccessful = (prestations) => ({\r\n  type: PRESTATION_DOWNLOAD_SUCCESSFUL,\r\n  payload: prestations,\r\n});\r\n\r\nexport const descargaPrestationsError = () => ({\r\n  type: DOWNLOAD_PRESTATION__ERROR,\r\n});\r\n\r\nexport function editRessourceAction(prestation) {\r\n  return (dispatch) => {\r\n    dispatch(startEditRessource());\r\n\r\n    // clienteAxios\r\n    //   .put(`route/api/${prestation.id}`, prestation)\r\n    //   .then((resp) => {\r\n    //     //console.log(resp);\r\n    //     dispatch(editRessourceSuccess(resp.data));\r\n    //     Swal.fire(\"Stored\", \"The Product was successfully updated\", \"success\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     //console.log(error);\r\n    //     dispatch(editRessourceError());\r\n    //   });\r\n  };\r\n}\r\n\r\nexport const startEditRessource = () => ({\r\n  type: BEGIN_PRESTATION_EDIT,\r\n});\r\n\r\nexport const editRessourceSuccess = (prestation) => ({\r\n  type: EDITION_PRESTATION_SUCCESS,\r\n  payload: prestation,\r\n});\r\n\r\nexport const editRessourceError = () => ({\r\n  type: EDIT_PRESTATION_ERROR,\r\n});\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\config\\axios.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\login\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\error\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AfficherRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\ModiferRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\AjouterRessource.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\Ressources.js",["326"],"import React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getRessourcesAction } from \"../../services/Actions/ressourcesActions\";\r\n\r\nconst columns = [\r\n  // { id: \"matricule\", label: \"Matricule\", minWidth: 100 },\r\n  { id: \"status\", label: \"Status\", minWidth: 100 },\r\n  { id: \"firstName\", label: \"Nom\", minWidth: 100 },\r\n  { id: \"lastName\", label: \"Prénom\", minWidth: 100 },\r\n  { id: \"genre\", label: \"Genre\", minWidth: 100 },\r\n  { id: \"dateAmbauche\", label: \"Date d'ambauche\", minWidth: 180 },\r\n  { id: \"dateNaissance\", label: \"Date de naissance\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Ressources = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addRessource = () => {\r\n    let path = `/app/ressources/AjouterRessource`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    //productos cuando el componente este listo\r\n    const loadRessours = () => dispatch(getRessourcesAction());\r\n    loadRessours();\r\n  }, []);\r\n\r\n  const loading = useSelector((state) => state.ressources.loading);\r\n  const error = useSelector((state) => state.ressources.error);\r\n  const ressources = useSelector((state) => state.ressources.ressources);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditRessource = (e) => {\r\n  //   let path = `/app/ressources/ModiferRessource/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewRessource = (e) => {\r\n  //   let path = `/app/ressources/AfficherRessurce/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <div className=\"font-wight-bold alert alert-danger text-center mt-5\">\r\n          Hubo un error...\r\n        </div>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Ressources\"    path=\"/app/dashboard\"/>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addRessource}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Ressource\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ressources\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={ressources.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ressources;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AfficherPrestation.js",[],["327","328"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\Prestations.js",["329"],"// export default function Prestations() {\r\n//   var classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     //productos cuando el componente este listo\r\n//     const loedPrestations = () => dispatch(getPrestationsAction());\r\n//     loedPrestations();\r\n//   }, []);\r\n\r\n//   const loading = useSelector((state) => state.prestations.loading);\r\n//   const error = useSelector((state) => state.prestations.error);\r\n//   const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n//   return (\r\n\r\n//   );\r\n// }\r\nimport React, { useEffect } from \"react\";\r\n\r\n//axios\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPrestationsAction } from \"../../services/Actions/prestationsActions\";\r\nimport { Button, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst columns = [\r\n  { id: \"titre\", label: \"Titre\", minWidth: 100 },\r\n  { id: \"etat\", label: \"Etat\", minWidth: 100 },\r\n  { id: \"market\", label: \"Market\", minWidth: 100 },\r\n  { id: \"type\", label: \"Type\", minWidth: 100 },\r\n  { id: \"dateDebut\", label: \"Date de Début\", minWidth: 180 },\r\n  { id: \"dateFin\", label: \"Date de Fin\", minWidth: 180 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  icons: {\r\n    margin: \"00px\",\r\n  },\r\n  addBtn: {\r\n    display: \"flex\",\r\n    marginTop: \"16px\",\r\n    marginBottom: \"8px\",\r\n    justifyContent: \"space-between\",\r\n    float: \"right\",\r\n    background: \"#741F82\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\nconst Prestations = () => {\r\n  const history = useHistory();\r\n  var classes = useStyles();\r\n  const addPrestation = () => {\r\n    let path = `/app/prestations/AjouterPrestation`;\r\n    history.push(path);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  useEffect(() => {\r\n    const loadProducts = () => dispatch(getPrestationsAction());\r\n    loadProducts();\r\n  }, []);\r\n\r\n  //acceder al state\r\n  const loading = useSelector((state) => state.prestations.loading);\r\n  const error = useSelector((state) => state.prestations.error);\r\n  const prestations = useSelector((state) => state.prestations.prestations);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // const EditPrestation = (e) => {\r\n  //   let path = `/app/prestations/ModiferPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  // const ViewPrestation = (e) => {\r\n  //   let path = `/app/prestations/AfficherPrestation/` + 1;\r\n  //   history.push(path);\r\n  // };\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Alert severity=\"error\">Problème de chargement ...!</Alert>\r\n      ) : null}\r\n\r\n      {loading ? <h1>Connecting...</h1> : null}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <PageTitle title=\"Prestations\"  path=\"/app/dashboard\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            type=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addBtn}\r\n            onClick={addPrestation}\r\n          >\r\n            <AddIcon />\r\n            Ajouter Prestation\r\n          </Button>\r\n        </Grid>\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell key=\"actions\" style={{ minWidth: \"170\" }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {prestations\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.etat}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        <TableCell>\r\n                          <Button>\r\n                            <VisibilityIcon className={classes.icons} />\r\n                          </Button>\r\n                          <Button>\r\n                            <EditIcon className={classes.icons} />\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[8, 10, 25, 100]}\r\n            component=\"div\"\r\n            count={prestations.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prestations;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\ModiferPrestation.js",["330"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function ModiferPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const editPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitEditPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      Titre,\r\n      Etat,\r\n      Market,\r\n      Type,\r\n      DateDebut,\r\n      DateFin,\r\n    };\r\n    editPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Modifer une prestation\" />\r\n      <form onSubmit={submitEditPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\AjouterPrestation.js",["331"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { createNewPrestationAction } from \"../../services/Actions/prestationsActions\";\r\nimport {\r\n  validacionError,\r\n  validarFormularioAction,\r\n  validationSuccess,\r\n} from \"../../services/Actions/validacionActions\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nexport default function AjouterPrestation() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //state\r\n  const [Titre, getTitre] = useState(\"\");\r\n  const [Etat, getEtat] = useState(\"\");\r\n  const [Type, getType] = useState(\"\");\r\n  const [Market, getMarket] = useState(\"\");\r\n  const [DateDebut, getDateDebut] = useState(\"\");\r\n  const [DateFin, getDateFin] = useState(\"\");\r\n\r\n  //crar nuevo producto\r\n  const dispatch = useDispatch();\r\n  const addPrestation = (prestation) =>\r\n    dispatch(createNewPrestationAction(prestation));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidacion = () => dispatch(validacionError());\r\n\r\n  //obtener los datos del state\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew prestation\r\n  const submitNewPrestation = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      Titre.trim() === \"\" ||\r\n      Etat.trim() === \"\" ||\r\n      Market.trim() === \"\" ||\r\n      Type.trim() === \"\" ||\r\n      DateDebut.trim() === \"\" ||\r\n      DateFin.trim() === \"\"\r\n    ) {\r\n      errorValidacion();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //crear el nuevo producto\r\n    let prestation = {\r\n      titre: Titre,\r\n      etat: Etat,\r\n      market: Market,\r\n      type: Type,\r\n      dateDebut: DateDebut,\r\n      dateFin: DateFin,\r\n    };\r\n    addPrestation(prestation);\r\n\r\n    // history.push(\"/app/prestations\");\r\n  };\r\n\r\n  const etats = [\r\n    {\r\n      label: \"En cours\",\r\n      value: \"en_cours\",\r\n    },\r\n    {\r\n      label: \"Clôture\",\r\n      value: \"cloture\",\r\n    },\r\n    {\r\n      label: \"Démarrage\",\r\n      value: \"demarrage\",\r\n    },\r\n  ];\r\n  const markets = [\r\n    {\r\n      label: \"Offshore\",\r\n      value: \"offshore\",\r\n    },\r\n    {\r\n      label: \"Local\",\r\n      value: \"local\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Ajouter une prestation\" />\r\n      <form onSubmit={submitNewPrestation}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Titre\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={Titre}\r\n              onChange={(e) => getTitre(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Etat\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Etat}\r\n              onChange={(e) => {\r\n                getEtat(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Type\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Type}\r\n              onChange={(e) => {\r\n                getType(e.target.value);\r\n              }}\r\n            >\r\n              {etats.map((etat) => (\r\n                <MenuItem value={etat.value}>{etat.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              fullWidth\r\n              valur={Market}\r\n              onChange={(e) => {\r\n                getMarket(e.target.value);\r\n              }}\r\n            >\r\n              {markets.map((market) => (\r\n                <MenuItem value={market.value}>{market.label}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de début</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <label>Date de Fin</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              type=\"date\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={DateFin}\r\n              onChange={(e) => getDateFin(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {error ? (\r\n        <Alert severity=\"error\">Tous les champs sont requis!</Alert>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\projets\\Projets.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\parametres\\Parametres.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\technologies\\Technologies.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Competances.js",["332","333"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\activites\\Activites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\capabilites\\Capabilites.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\dashboard\\Dashboard.js",["334"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\Clients.js",["335","336","337"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\";\r\nexport default function Clients() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:9004/DXC/clients/allClients\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setClients(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  function AjouteClient() {\r\n    history.push(\"/app/clients/AjouteClient\");\r\n  }\r\n   \r\n  const AfficheClient = (e) => {\r\n    let path = `/app/clients/AffichageClient` + e;\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <PageTitle title=\"Liste des Clients\" path=\"/app/dashboard\" />\r\n      </div>\r\n      <div>\r\n        <div className={classes.Search}>\r\n          <Button variant=\"contained\" className={classes.ButtonSearch}>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Input\r\n            className={classes.InputSearch}\r\n            type=\"text\"\r\n            placeholder=\"Chercher un client par nom \"\r\n          />\r\n        </div>\r\n        <div className={classes.Bajoute}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.Button}\r\n            onClick={AjouteClient}\r\n          >\r\n            <AddIcon /> Ajouter Client\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead >\r\n            <TableRow className={classes.TableRow}>\r\n\r\n              <TableCell>Nom de Client</TableCell>\r\n              <TableCell>Market</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {clients.map((client) => (\r\n              <TableRow key={client.nomClient}>\r\n               \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {client.nomClient}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {client.market}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                <Button \r\n                onClick={() => AfficheClient(client.id)}>\r\n                 <VisibilityIcon className={classes.icons} />\r\n                      </Button>\r\n                 \r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>\r\n  \r\n\r\n\r\n  \r\n\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\Header.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\ressources\\style.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\ressourcesActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\validacionActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\prestations\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Header\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\clientsReducer.js",["338"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    clients: [],\r\n    error: null,\r\n    loading: false,\r\n    client: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CLIENT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: [...state.clients, action.payload],\r\n        };\r\n      case ADD_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CLIENTS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          client: {},\r\n        };\r\n      case CLIENT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          clients: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          client: {},\r\n        };\r\n      case DOWNLOAD_CLIENT__ERROR:\r\n        return {\r\n          ...state,\r\n          clients: [],\r\n          loading: false,\r\n          error: true,\r\n          client: {},\r\n        };\r\n   \r\n      case CLIENT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          client: action.payload,\r\n        };\r\n      case CLIENT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CLIENT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CLIENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          clients: state.clients.map((client) =>\r\n            client.id === action.payload.id\r\n              ? (client = action.payload)\r\n              : client,\r\n          ),\r\n        };\r\n      case EDIT_CLIENT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\contratsReducer.js",["339"],"import {\r\n    ADD_CONTRAT,\r\n    ADD_CONTRAT_SUCCESS,\r\n    ADD_CONTRAT_ERROR,\r\n    START_DOWNLOAD_CONTRATS,\r\n    CONTRAT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CONTRAT__ERROR,\r\n    GET_CONTRAT_EDIT,\r\n    CONTRAT_EDIT_SUCCESS,\r\n    CONTRAT_EDIT_ERROR,\r\n    BEGIN_CONTRAT_EDIT,\r\n    EDITION_CONTRAT_SUCCESS,\r\n    EDIT_CONTRAT_ERROR,\r\n  } from \"../types\";\r\n  \r\n  //chaque réducteur a son propre état\r\n  const initialState = {\r\n    contrats: [],\r\n    error: null,\r\n    loading: false,\r\n    contrat: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_CONTRAT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case ADD_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: [...state.contrats, action.payload],\r\n        };\r\n      case ADD_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case START_DOWNLOAD_CONTRATS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          //limpiar y reacrgar el productopara editar\r\n          contrat: {},\r\n        };\r\n      case CONTRAT_DOWNLOAD_SUCCESSFUL:\r\n        return {\r\n          ...state,\r\n          contrats: action.payload,\r\n          loading: false,\r\n          error: false,\r\n          contrat: {},\r\n        };\r\n      case DOWNLOAD_CONTRAT__ERROR:\r\n        return {\r\n          ...state,\r\n          contrats: [],\r\n          loading: false,\r\n          error: true,\r\n          contrat: {},\r\n        };\r\n      case GET_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case CONTRAT_EDIT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrat: action.payload,\r\n        };\r\n      case CONTRAT_EDIT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      case BEGIN_CONTRAT_EDIT:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n      case EDITION_CONTRAT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          contrats: state.contrats.map((contrat) =>\r\n            contrat.id === action.payload.id\r\n              ? (contrat = action.payload)\r\n              : contrat,\r\n          ),\r\n        };\r\n      case EDIT_CONTRAT_ERROR:\r\n        return {\r\n          ...state,\r\n          error: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Reducers\\competancesReducer.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AffichageClient.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\clients\\AjouteClient.js",["340"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewClientAction } from \"../../services/Actions/clientActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteClient() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [market, getMarket] = useState(\"\");\r\n\r\n // créer un nouveau Client\r\n  const dispatch = useDispatch();\r\n  const addClient = (client) =>\r\n    dispatch(createNewClientAction(client));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew Client\r\n  const submitNewClient = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n    \r\n      nomClient.trim() === \"\" ||\r\n      market.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau Client\r\n    let client = {\r\n      nomClient : nomClient,\r\n      market :market,\r\n      \r\n    };\r\n    addClient(client);\r\n    history.push(\"/app/prestations/clients\");\r\n  };\r\n  function AnnulerClient() {\r\n    history.push(\"/app/prestations/clients\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute Client\" path=\"/app/prestations/clients\" />\r\n      </div>\r\n      <form onSubmit={submitNewClient}>\r\n        <Grid container spacing={3}>\r\n  \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Market\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={market}\r\n              onChange={(e) => getMarket(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewClient}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerClient}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteClient;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\ContratDetail.js",["341"],"import React, { useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport \"./contrat.css\";\r\nfunction ContratDetail(props) {\r\n  const [contrats, setContrats] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"hello hjjjjj\");\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/contrats/allContrats\", {\r\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      })\r\n      .then(function (res) {\r\n        // handle success\r\n        console.log(\"res\", res.data);\r\n        setContrats(res.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  });\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle\r\n          title=\"Afficher d'un Contrat\"\r\n          path=\"/app/prestations/Contrats\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"demo\">\r\n        <h2 class=\"penName\">Contrat</h2>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContratDetail;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\EditContrat.js",["342","343","344","345","346","347","348","349"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\AjouteCompetances.js",["350","351"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\Contrats.js",["352","353","354"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\AjouteContrat.js",["355"],"import React, { useState }  from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewContratAction } from \"../../services/Actions/contratActions\";\r\nimport { validacionError, validationSuccess,validarFormularioAction} from \"../../services/Actions/validacionActions\";\r\nimport useStyles from \"./styles\";\r\nfunction AjouteContrat() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [nomContrat, getNomContrat] = useState(\"\");\r\n  const [nomClient, getNomClient] = useState(\"\");\r\n  const [description, getDescription] = useState(\"\");\r\n\r\n // créer un nouveau contrat\r\n  const dispatch = useDispatch();\r\n  const addContrat = (contrat) =>\r\n    dispatch(createNewContratAction(contrat));\r\n  const validarForm = () => dispatch(validarFormularioAction());\r\n  const SuccessValidation = () => dispatch(validationSuccess());\r\n  const errorValidation = () => dispatch(validacionError());\r\n\r\n  //récupérer les données de l'état\r\n  const error = useSelector((state) => state.error.error);\r\n\r\n  // addnew contrat\r\n  const submitNewContrat = (e) => {\r\n    e.preventDefault();\r\n\r\n    validarForm();\r\n\r\n    if (\r\n      nomContrat.trim() === \"\" ||\r\n      nomClient.trim() === \"\" ||\r\n      description.trim() === \"\" \r\n   \r\n    ) {\r\n      errorValidation();\r\n      return;\r\n    }\r\n    //si pasa la validacion//si todo sale bien\r\n    SuccessValidation();\r\n\r\n    //créer un nouveau contrat\r\n    let contrat = {\r\n      nomContrat : nomContrat,\r\n      nomClient : nomClient,\r\n      description :description,\r\n      \r\n    };\r\n    addContrat(contrat);\r\n    history.push(\"/app/prestations/Contrats\");\r\n  };\r\n  function AnnulerContrat() {\r\n    history.push(\"/app/prestations/Contrats\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PageTitle title=\"Ajoute contrat\" path=\"/app/prestations/Contrats\" />\r\n      </div>\r\n      <form onSubmit={submitNewContrat}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomContrat\"\r\n              label=\"Nom de Contrat\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomContrat}\r\n              onChange={(e) => getNomContrat(e.target.value)}\r\n            />\r\n          </Grid>\r\n      \r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-nomClient\"\r\n              label=\"Nom de Client\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={nomClient}\r\n              onChange={(e) => getNomClient(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"outlined-description\"\r\n              label=\"Description\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              valur={description}\r\n              onChange={(e) => getDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n       \r\n      \r\n          {/* <Grid item xs={6}>\r\n            <label>Date de Debut</label>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"date\"\r\n              valur={DateDebut}\r\n              onChange={(e) => getDateDebut(e.target.value)}\r\n            />\r\n          </Grid> */}\r\n    \r\n        </Grid>\r\n      </form>\r\n      <Grid item xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.btnAjouter}\r\n              color=\"primary\"\r\n              onClick={submitNewContrat}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              className={classes.btnAnnuler}\r\n              color=\"secondary\"\r\n              onClick={AnnulerContrat}\r\n            >\r\n              Annuler\r\n            </Button>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AjouteContrat;\r\n","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesLinguistiques.js",["356"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"Francais\",\r\n      \" 5\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"Arab\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"Anglais\",\r\n        \" 5\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesLinguistiques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesLinguistiques;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTransversales.js",["357"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"competance 1\",\r\n      \"4\",\r\n      \"2\",\r\n    ),\r\n    createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n      createData(\r\n        \"competance 1\",\r\n        \"4\",\r\n        \"2\",\r\n      ),\r\n  ];\r\nfunction CompetencesTransversales(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTransversales;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\CompetencesTechniques.js",["358"],"import React, { useEffect } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction createData(\r\n    Compétence,\r\n    NiveauMaitrise,\r\n    EvaluationManager,\r\n  ) {\r\n    return { Compétence, NiveauMaitrise, EvaluationManager };\r\n  }\r\n  \r\n  const rows = [\r\n    createData(\r\n      \"IBM\",\r\n      \" 1\",\r\n      \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n    createData(\r\n        \"IBM\",\r\n        \" 1\",\r\n        \"3\",\r\n    ),\r\n  ];\r\nfunction CompetencesTechniques(props) {\r\n    var classes = useStyles();\r\n    return (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Compétence</TableCell>\r\n              <TableCell>Niveau de maitrise attendu</TableCell>\r\n              <TableCell>Evaluation de manager</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.matricule}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.Compétence}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.NiveauMaitrise}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.EvaluationManager}\r\n                </TableCell>\r\n                <TableRow component=\"th\" scope=\"row\" >\r\n                  <Button >\r\n                    <EditIcon className={classes.icons} />\r\n                  </Button>\r\n                </TableRow>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompetencesTechniques;","C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\competances\\Tabs.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\pages\\contrats\\styles.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\contratActions.js",["359"],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\competanceActions.js",[],"C:\\Users\\Lenovo\\Desktop\\Stage DXC\\entreprise DXC\\dxc-repo\\dxc-repo\\src\\services\\Actions\\clientActions.js",["360","361","362"],"import {\r\n    ADD_CLIENT,\r\n    ADD_CLIENT_SUCCESS,\r\n    ADD_CLIENT_ERROR,\r\n    START_DOWNLOAD_CLIENTS,\r\n    CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    DOWNLOAD_CLIENT__ERROR,\r\n    GET_CLIENT_REMOVE,\r\n    DELETE_CLIENT_SUCCESS,\r\n    DELETE_CLIENT_ERROR,\r\n    GET_CLIENT_EDIT,\r\n    CLIENT_EDIT_SUCCESS,\r\n    CLIENT_EDIT_ERROR,\r\n    BEGIN_CLIENT_EDIT,\r\n    EDITION_CLIENT_SUCCESS,\r\n    EDIT_CLIENT_ERROR,\r\n  } from \"../types\";\r\n  import Swal from \"sweetalert2\";\r\n  \r\n  import clienteAxios from \"../../config/axios\";\r\n  \r\n  //créer un nouveau client - fonction principale\r\n  export function createNewClientAction(client) {\r\n    console.log(\"client\", client);\r\n    return (dispatch) => {\r\n      dispatch(newClient());\r\n  \r\n          clienteAxios\r\n            .post(\"http://localhost:9004/DXC/clients/addClient\", client)\r\n            .then((res) => {\r\n              console.log(res);\r\n              //si se inserta correctamente\r\n              dispatch(addNewClientSuccess(client));\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              //si hay un error\r\n              dispatch(addNewClientError());\r\n            });\r\n    };\r\n  }\r\n  \r\n  export const newClient = () => ({\r\n    type: ADD_CLIENT,\r\n  });\r\n  \r\n  export const addNewClientSuccess = (client) => ({\r\n    type: ADD_CLIENT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const addNewClientError = (error) => ({\r\n    type: ADD_CLIENT_ERROR,\r\n  });\r\n  \r\n  //obtenir la liste des clients de clientsReducer (voir API)\r\n  export function getClientsAction() {\r\n    return (dispatch) => {\r\n      dispatch(getClientsStart());\r\n  \r\n      //interroger l'API\r\n        clienteAxios\r\n          .get(\"http://localhost:9004/DXC/clients/allClients\")\r\n          .then((resp) => {\r\n            //console.log(resp);\r\n            dispatch(downloadClientsSuccessful(resp.data));\r\n          })\r\n          .catch((error) => {\r\n            //console.log(error);\r\n            dispatch(descargaClientsError());\r\n          });\r\n    };\r\n  }\r\n  \r\n  export const getClientsStart = () => ({\r\n    type: START_DOWNLOAD_CLIENTS,\r\n  });\r\n  \r\n  //API de requête\r\n  export const downloadClientsSuccessful = (client) => ({\r\n    type: CLIENT_DOWNLOAD_SUCCESSFUL,\r\n    payload: client,\r\n  });\r\n  \r\n  export const descargaClientsError = () => ({\r\n    type: DOWNLOAD_CLIENT__ERROR,\r\n  });\r\n  //fonction pour obtenir le client à modifier\r\n  export function getClientAcoution(id) {\r\n    return (dispatch) => {\r\n      dispatch(getEditClientAction());\r\n  \r\n      //obtenir l'api de  le client\r\n      clienteAxios\r\n        .get(`/route/api/${id}`)\r\n        .then((resp) => {\r\n          console.log(resp.data);\r\n          dispatch(getClientEditSuccess(resp.data));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          dispatch(getClientEditError());\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const getEditClientAction = (id) => ({\r\n    type: GET_CLIENT_EDIT,\r\n  });\r\n  \r\n  export const getClientEditSuccess = (client) => ({\r\n    type: CLIENT_EDIT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const getClientEditError = () => ({\r\n    type: CLIENT_EDIT_ERROR,\r\n  });\r\n  \r\n  //MODIFIER un client DANS L'API ET L'ETAT\r\n  export function editClientAction(client) {\r\n    return (dispatch) => {\r\n      dispatch(startEditClient());\r\n  \r\n      //interrogez l'API et envoyez une méthode put à mettre à jour\r\n      clienteAxios\r\n        .put(`route/api/${client.id}`, client)\r\n        .then((resp) => {\r\n          //console.log(resp);\r\n          dispatch(editClientSuccess(resp.data));\r\n          Swal.fire(\"Stored\", \"le client été modifier avec succés \", \"success\");\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n          dispatch(editClientError());\r\n        });\r\n    };\r\n  }\r\n  \r\n  export const startEditClient = () => ({\r\n    type: BEGIN_CLIENT_EDIT,\r\n  });\r\n  \r\n  export const editClientSuccess = (client) => ({\r\n    type: EDITION_CLIENT_SUCCESS,\r\n    payload: client,\r\n  });\r\n  \r\n  export const editClientError = () => ({\r\n    type: EDIT_CLIENT_ERROR,\r\n  });\r\n  ",{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":2,"column":25,"nodeType":"369","messageId":"370","endLine":2,"endColumn":33},{"ruleId":"367","severity":1,"message":"371","line":28,"column":8,"nodeType":"369","messageId":"370","endLine":28,"endColumn":25},{"ruleId":"372","severity":1,"message":"373","line":84,"column":6,"nodeType":"374","endLine":84,"endColumn":8,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":11,"column":1,"nodeType":"378","endLine":31,"endColumn":2},{"ruleId":"376","severity":1,"message":"377","line":27,"column":1,"nodeType":"378","endLine":125,"endColumn":2},{"ruleId":"367","severity":1,"message":"379","line":12,"column":8,"nodeType":"369","messageId":"370","endLine":12,"endColumn":12},{"ruleId":"372","severity":1,"message":"373","line":68,"column":6,"nodeType":"374","endLine":68,"endColumn":8,"suggestions":"380"},{"ruleId":"363","replacedBy":"381"},{"ruleId":"365","replacedBy":"382"},{"ruleId":"372","severity":1,"message":"373","line":84,"column":6,"nodeType":"374","endLine":84,"endColumn":8,"suggestions":"383"},{"ruleId":"367","severity":1,"message":"384","line":21,"column":9,"nodeType":"369","messageId":"370","endLine":21,"endColumn":16},{"ruleId":"367","severity":1,"message":"384","line":21,"column":9,"nodeType":"369","messageId":"370","endLine":21,"endColumn":16},{"ruleId":"367","severity":1,"message":"385","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"386","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":36},{"ruleId":"367","severity":1,"message":"387","line":2,"column":8,"nodeType":"369","messageId":"370","endLine":2,"endColumn":17},{"ruleId":"367","severity":1,"message":"388","line":13,"column":8,"nodeType":"369","messageId":"370","endLine":13,"endColumn":25},{"ruleId":"367","severity":1,"message":"389","line":18,"column":8,"nodeType":"369","messageId":"370","endLine":18,"endColumn":16},{"ruleId":"367","severity":1,"message":"390","line":43,"column":9,"nodeType":"369","messageId":"370","endLine":43,"endColumn":13},{"ruleId":"376","severity":1,"message":"377","line":23,"column":3,"nodeType":"378","endLine":99,"endColumn":4},{"ruleId":"376","severity":1,"message":"377","line":24,"column":3,"nodeType":"378","endLine":104,"endColumn":4},{"ruleId":"367","severity":1,"message":"391","line":26,"column":9,"nodeType":"369","messageId":"370","endLine":26,"endColumn":14},{"ruleId":"367","severity":1,"message":"392","line":6,"column":10,"nodeType":"369","messageId":"370","endLine":6,"endColumn":18},{"ruleId":"367","severity":1,"message":"393","line":7,"column":23,"nodeType":"369","messageId":"370","endLine":7,"endColumn":34},{"ruleId":"367","severity":1,"message":"394","line":8,"column":29,"nodeType":"369","messageId":"370","endLine":8,"endColumn":45},{"ruleId":"367","severity":1,"message":"395","line":11,"column":8,"nodeType":"369","messageId":"370","endLine":11,"endColumn":20},{"ruleId":"367","severity":1,"message":"396","line":13,"column":8,"nodeType":"369","messageId":"370","endLine":13,"endColumn":16},{"ruleId":"367","severity":1,"message":"397","line":14,"column":10,"nodeType":"369","messageId":"370","endLine":14,"endColumn":21},{"ruleId":"367","severity":1,"message":"398","line":27,"column":10,"nodeType":"369","messageId":"370","endLine":27,"endColumn":17},{"ruleId":"367","severity":1,"message":"399","line":27,"column":19,"nodeType":"369","messageId":"370","endLine":27,"endColumn":29},{"ruleId":"372","severity":1,"message":"400","line":50,"column":6,"nodeType":"374","endLine":50,"endColumn":29,"suggestions":"401"},{"ruleId":"367","severity":1,"message":"384","line":13,"column":9,"nodeType":"369","messageId":"370","endLine":13,"endColumn":16},{"ruleId":"367","severity":1,"message":"391","line":27,"column":9,"nodeType":"369","messageId":"370","endLine":27,"endColumn":14},{"ruleId":"367","severity":1,"message":"388","line":12,"column":8,"nodeType":"369","messageId":"370","endLine":12,"endColumn":25},{"ruleId":"367","severity":1,"message":"402","line":17,"column":8,"nodeType":"369","messageId":"370","endLine":17,"endColumn":18},{"ruleId":"367","severity":1,"message":"390","line":43,"column":9,"nodeType":"369","messageId":"370","endLine":43,"endColumn":13},{"ruleId":"367","severity":1,"message":"391","line":27,"column":9,"nodeType":"369","messageId":"370","endLine":27,"endColumn":14},{"ruleId":"367","severity":1,"message":"385","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"385","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"385","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"403","severity":1,"message":"404","line":136,"column":15,"nodeType":"405","messageId":"406","endLine":136,"endColumn":20},{"ruleId":"367","severity":1,"message":"407","line":8,"column":5,"nodeType":"369","messageId":"370","endLine":8,"endColumn":22},{"ruleId":"367","severity":1,"message":"408","line":9,"column":5,"nodeType":"369","messageId":"370","endLine":9,"endColumn":26},{"ruleId":"367","severity":1,"message":"409","line":10,"column":5,"nodeType":"369","messageId":"370","endLine":10,"endColumn":24},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ModiferPrestation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["412"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Swal' is defined but never used.",["413"],["410"],["411"],["414"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'PageTitle' is defined but never used.","'AccountCircleIcon' is defined but never used.","'EditIcon' is defined but never used.","'bull' is assigned a value but never used.","'error' is assigned a value but never used.","'contrats' is assigned a value but never used.","'useSelector' is defined but never used.","'getContratAction' is defined but never used.","'clienteAxios' is defined but never used.","'Contrats' is defined but never used.","'Description' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getContrat'. Either include it or remove the dependency array.",["415"],"'Typography' is defined but never used.","no-dupe-keys","Duplicate key 'timer'.","ObjectExpression","unexpected","'GET_CLIENT_REMOVE' is defined but never used.","'DELETE_CLIENT_SUCCESS' is defined but never used.","'DELETE_CLIENT_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"416","fix":"417"},{"desc":"416","fix":"418"},{"desc":"416","fix":"419"},{"desc":"420","fix":"421"},"Update the dependencies array to be: [dispatch]",{"range":"422","text":"423"},{"range":"424","text":"423"},{"range":"425","text":"423"},"Update the dependencies array to be: [getContrat, props.match.params.id]",{"range":"426","text":"427"},[2777,2779],"[dispatch]",[2266,2268],[2705,2707],[1877,1900],"[getContrat, props.match.params.id]"]